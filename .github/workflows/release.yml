name: github release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-release:
    name: generate docs-website github release notes (optional)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Setup python
        uses: actions/setup-python@v4

      - name: Get last release tag
        id: get-last-tag
        run: |
          echo LAST_RELEASE=$(git describe --tags --abbrev=0) >> $GITHUB_ENV
          echo $LAST_RELEASE

      - name: Create release timestamp
        run: |
          echo RELEASE_TIMESTAMP=$(TZ=America/Los_Angeles date '+%m.%d.%Y-%H.%M') >> $GITHUB_ENV

      - name: Create new release tag
        id: create-new-tag
        run: |
          echo NEW_TAG=$(echo "release-${{ env.RELEASE_TIMESTAMP }}") >> $GITHUB_ENV

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub
          pip install invoke

      - name: Create Updates and Release
        id: py-get-updates
        run: |
          python ./scripts/actions/release-notes.py

      - name: Set Release Version from Tag
        run: echo "RELEASE_VERSION=${{ env.NEW_TAG }}" >> $GITHUB_ENV

      - name: Create New Relic deployment marker
        uses: newrelic/deployment-marker-action@v2.1.0
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY_DEPLOY_MARKERS }}
          guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID }}
          region: 'staging'
          version: '${{ env.RELEASE_VERSION }}'
          user: '${{ github.actor }}'
