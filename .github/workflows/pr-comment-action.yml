# A descriptive name for your GitHub Action
name: 'Pull Request Comment Trigger'

# Defines the event that triggers this workflow.
# 'issue_comment' runs when a comment is made on an issue or a pull request.
on:
  issue_comment:
    types: [created]

# The jobs that will be executed when the workflow is triggered.
jobs:
  # A job named 'comment-reaction'
  comment-reaction:
    # We add a conditional here to ensure this job only runs for comments on Pull Requests.
    # The 'github.event.issue.pull_request' object exists if the comment is on a PR.
    if: github.event.issue.pull_request
    
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    # The steps that make up the job.
    steps:
      # Step 1: A simple script to print the comment body
      - name: 'Output comment body'
        run: |
          echo "ðŸŽ‰ A comment was made on a PR!"
          echo "ðŸ’¬ The comment was: ${{ github.event.comment.body }}"
          echo "ðŸ‘¤ The comment was made by: ${{ github.event.comment.user.login }}"
          echo "Pull Request URL: ${{ github.event.issue.html_url }}"

      # Step 2: React to the comment
      # This step uses the GitHub API to add a reaction to the comment that triggered the workflow.
      - name: 'Add reaction to comment'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });