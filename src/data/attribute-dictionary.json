[
  {
    "attributes": [
      {
        "definition": "<p>The text of the HTML element that was clicked when a browser interaction started. Added to <code>BrowserInteraction</code> and any <code>AjaxRequest</code>, <code>JavaScriptError</code> and <code>BrowserTiming</code> events that occurred during that interaction.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "actionText",
        "units": null
      },
      {
        "definition": "<p>The ID of your application, as recorded by New Relic.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application that handled the request as shown in browser monitoring.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The organization that owns the Autonomous System Number. Often an ISP, sometimes a private company or institution.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnOrganization",
        "units": null
      },
      {
        "definition": "<p>A unique value generated for each browser interaction captured by the New Relic agent.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "browserInteractionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the interaction. This is either the <code>targetGroupedUrl</code> or the custom name set via the API.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "browserInteractionName",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the browser initiated the page load. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The type of device that loaded the page: mobile, tablet, or desktop.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageView"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>A value that you can link to multiple <code>BrowserInteraction</code> events so you can view the interactions that occurred surrounding a specific event. For example, you can see the browser interactions that occurred prior to a JavaScript error.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "eventId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The grouped URL of the view that made the AJAX request. For example: <code>myapp.com/acct/\\*/dash</code>.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming"
        ],
        "name": "groupedPageURL",
        "units": null
      },
      {
        "definition": "<p>The grouped URL of the AJAX request. For example: <code>myapp.com/acct/\\*/ajax</code>.</p>\n",
        "events": [
          "AjaxRequest",
          "Span"
        ],
        "name": "groupedRequestUrl",
        "units": null
      },
      {
        "definition": "<p>The fully qualified domain name (FQDN) of the request URL.</p>\n",
        "events": [
          "AjaxRequest"
        ],
        "name": "hostname",
        "units": null
      },
      {
        "definition": "<p>The HTTP method of the AJAX request. Example: <code>POST</code>.</p>\n",
        "events": [
          "AjaxRequest"
        ],
        "name": "httpMethod",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The HTTP response code. Example: <code>200</code>.</p>\n",
        "events": [
          "AjaxRequest"
        ],
        "name": "httpResponseCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The total duration, in seconds, spent on JavaScript execution. This attribute is only seen in <code>AjaxRequest</code> data that is tied to <code>BrowserInteraction</code>. This attribute doesn&#39;t exist for initial page load events.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "jsDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The URL of the page that was loaded for the PageView, for example: <a href=\"http://www.newrelic.com\">http://www.newrelic.com</a>. This URL does not include query parameters.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "pageUrl",
        "units": null
      },
      {
        "definition": "<p>A unique value generated for each interaction with the page. You can use this value to group interactions together.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "parentEventId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The request port.</p>\n",
        "events": [
          "AjaxRequest",
          "Span"
        ],
        "name": "port",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>Likelihood this event will be saved.</p>\n",
        "events": [
          "AjaxRequest"
        ],
        "name": "priority",
        "units": null
      },
      {
        "definition": "<p>The specific administrative division within a country where the <code>PageView</code> event occurred. In the United States, regions correspond to state codes, such as WA or NY. Outside the United States, a country&#39;s regions correspond to numerical codes.</p>\n<p>In the United States, regions correspond to <a href=\"http://pe.usps.gov/text/pub28/28apb.htm\">state codes</a> ; for example, <code>WA</code> or <code>NY</code>. Outside the United States, a country&#39;s regions correspond to <a href=\"https://www.maxmind.com/download/geoip/misc/region_codes.csv\">numerical codes</a> .</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>The payload size of the request body, in bytes.</p>\n",
        "events": [
          "AjaxRequest"
        ],
        "name": "requestBodySize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The URL of the AJAX request. For example: <code>myapp.com/acct/1/ajax</code>.</p>\n",
        "events": [
          "AjaxRequest"
        ],
        "name": "requestUrl",
        "units": null
      },
      {
        "definition": "<p>The payload size of the response body, in bytes.</p>\n",
        "events": [
          "AjaxRequest"
        ],
        "name": "responseBodySize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>A unique identifier for a single session. The session is tracked in browser storage using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#web_storage_concepts_and_usage\">Web Storage API</a>, subject to each browser&#39;s implementation and handling. The session will automatically reset or refresh after a set period of inactivity or a pre-defined duration limit, whichever is less.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "session",
        "units": null
      },
      {
        "definition": "<p>Allows for linking together end user actions from session traces and querying across browser events. Not all browser events will have this. For example, PageView events complete before the first session trace harvest. Also, initial page loads from BrowserInteraction won&#39;t always include this. </p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageViewTiming"
        ],
        "name": "sessionTraceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time in seconds between the start of the <code>BrowserInteraction</code> and the start of the request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming"
        ],
        "name": "timeSinceBrowserInteractionStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The duration, in seconds, from the start of the request (timestamp) to the end of the last callback. This is not just an additive function; the callback time can overlap with the wait time. This attribute is only seen in <code>AjaxRequest</code> data that is tied to <code>BrowserInteraction</code>.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "timeToLastCallbackEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the AJAX request to the start of its load event. This value represents the duration of the AJAX request with single page app (SPA) monitoring.</p>\n<p>For more information, see the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/load_event\">Mozilla developer documentation about <code>XMLHttpRequest</code> load events</a>.</p>\n",
        "events": [
          "AjaxRequest"
        ],
        "name": "timeToLoadEventStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the request to when all resulting callbacks (including callbacks of subsequent AJAX requests) are complete. This attribute is only seen in <code>AjaxRequest</code> data that is tied to <code>BrowserInteraction</code>.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming"
        ],
        "name": "timeToSettle",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The browser’s name, such as Chrome and Firefox, obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentName",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported operating system, such as Windows or Linux, that it is running on. This is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentOS",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported software version, which is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentVersion",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Browser agent"
      }
    ],
    "definition": "<p><code>AjaxRequest</code> events occur for any <code>Ajax</code> request, including during a <code>BrowserInteraction</code> event. The event attribute tracks geographic and browser info. Use browser app settings to block specific requests.</p>\n",
    "name": "AjaxRequest"
  },
  {
    "attributes": [
      {
        "definition": "<p>The Amazon Resource Name (ARN) of the instrumented Lambda function.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "aws.lambda.arn",
        "units": null
      },
      {
        "definition": "<p>A boolean indicating if the AWS Lambda invocation is a cold start.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "aws.lambda.coldStart",
        "units": null
      },
      {
        "definition": "<p>The Amazon Resource Name (ARN) of the entity that invoked the instrumented Lambda function.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "aws.lambda.eventSource.arn",
        "units": null
      },
      {
        "definition": "<p>AWS identifier of the invocation.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "aws.requestId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The number of database calls made by this transaction.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "databaseCallCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The database response time in seconds.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "databaseDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The total invocation time for the transaction, in seconds. (Data source: AWS Lambda)</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "duration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The number of external calls made by this transaction.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "externalCallCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The total response time of all external (out-of-process) services, in seconds.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "externalDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Where the data point entered the platform (such as <code>browser.spans</code>, or <code>api.traces</code>).</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Span"
        ],
        "name": "newRelic.ingestPoint",
        "units": null
      },
      {
        "definition": "<p>If a distributed tracing payload is received, this is the account identifier for the transaction&#39;s upstream caller.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.account",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>If a distributed tracing payload is received, this is the application identifier. APM agents retrieve this value in the connect response under the key primary_application_id.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.app",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>When a distributed tracing payload is received, the method of transport for the payload. Example values: Unknown, HTTP, HTTPS, Kafka, JMS, IronMQ, AMQP, Queue, or Other.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.transportType",
        "units": null
      },
      {
        "definition": "<p>If a distributed trace payload was received, the parent&#39;s data source type. Example values: App, Browser, Mobile.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.type",
        "units": null
      },
      {
        "definition": "<p>The types as read from the HTTP Accept request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.accept",
        "units": null
      },
      {
        "definition": "<p>Incoming request size in bytes as read from the <code>Content-Length</code> HTTP request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.contentLength",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Incoming request content-type as read from the HTTP request header <code>Content-Type</code>. Example value: <code>application/octet-stream</code>.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.contentType",
        "units": null
      },
      {
        "definition": "<p>The name from the HTTP host request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.host",
        "units": null
      },
      {
        "definition": "<p>The incoming request referer as read from the Referer request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.referer",
        "units": null
      },
      {
        "definition": "<p>The contents of the User-Agent HTTP header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.userAgent",
        "units": null
      },
      {
        "definition": "<p>The HTTP request method used. Example values: POST, GET.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.method",
        "units": null
      },
      {
        "definition": "<p>The outgoing response size in bytes as read from the Content-Length response header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.headers.contentLength",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>For an HTTP response, the data type of the returned response. Example values: text/html, application/json.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.headers.contentType",
        "units": null
      },
      {
        "definition": "<p>The response code for an HTTP request</p>\n",
        "events": [
          "AwsLambdaInvocation"
        ],
        "name": "response.status",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The sum of all async components&#39; duration, in seconds. An async component is a method or function where there is no instrumented encapsulating method or function.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "Transaction"
        ],
        "name": "totalTime",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "MobileRequest",
          "MobileRequestError",
          "Span"
        ],
        "name": "traceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The New Relic event type. Example values: <code>Transaction</code>, <code>Span</code>.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "type",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "AWS Lambda"
      }
    ],
    "definition": "<p>This event is reported by New Relic monitoring for AWS Lambda. This event captures overall function timing and associated metadata. A single <code>AwsLambdaInvocation</code> event is generated for each invocation.</p>\n",
    "name": "AwsLambdaInvocation"
  },
  {
    "attributes": [
      {
        "definition": "<p>The Amazon Resource Name (ARN) of the instrumented Lambda function.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "aws.lambda.arn",
        "units": null
      },
      {
        "definition": "<p>A boolean indicating if the AWS Lambda invocation is a cold start.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "aws.lambda.coldStart",
        "units": null
      },
      {
        "definition": "<p>The Amazon Resource Name (ARN) of the entity that invoked the instrumented Lambda function.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "aws.lambda.eventSource.arn",
        "units": null
      },
      {
        "definition": "<p>AWS identifier of the invocation.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "aws.requestId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The number of database calls made by this transaction.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "databaseCallCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The database response time in seconds.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "databaseDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The total invocation time for the transaction, in seconds. (Data source: AWS Lambda)</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "duration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The class name or type for the error. This will be server and platform specific.</p>\n",
        "events": [
          "AwsLambdaInvocationError",
          "TransactionError"
        ],
        "name": "error.class",
        "units": null
      },
      {
        "definition": "<p>The error message for the transaction. This will be server and platform specific.</p>\n",
        "events": [
          "AwsLambdaInvocationError",
          "TransactionError"
        ],
        "name": "error.message",
        "units": null
      },
      {
        "definition": "<p>The number of external calls made by this transaction.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "externalCallCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The total response time of all external (out-of-process) services, in seconds.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "externalDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Where the data point entered the platform (such as <code>browser.spans</code>, or <code>api.traces</code>).</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Span"
        ],
        "name": "newRelic.ingestPoint",
        "units": null
      },
      {
        "definition": "<p>If a distributed tracing payload is received, this is the account identifier for the transaction&#39;s upstream caller.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.account",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>If a distributed tracing payload is received, this is the application identifier. APM agents retrieve this value in the connect response under the key primary_application_id.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.app",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>When a distributed tracing payload is received, the method of transport for the payload. Example values: Unknown, HTTP, HTTPS, Kafka, JMS, IronMQ, AMQP, Queue, or Other.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.transportType",
        "units": null
      },
      {
        "definition": "<p>If a distributed trace payload was received, the parent&#39;s data source type. Example values: App, Browser, Mobile.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.type",
        "units": null
      },
      {
        "definition": "<p>The types as read from the HTTP Accept request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.accept",
        "units": null
      },
      {
        "definition": "<p>Incoming request size in bytes as read from the <code>Content-Length</code> HTTP request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.contentLength",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Incoming request content-type as read from the HTTP request header <code>Content-Type</code>. Example value: <code>application/octet-stream</code>.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.contentType",
        "units": null
      },
      {
        "definition": "<p>The name from the HTTP host request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.host",
        "units": null
      },
      {
        "definition": "<p>The incoming request referer as read from the Referer request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.referer",
        "units": null
      },
      {
        "definition": "<p>The contents of the User-Agent HTTP header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.userAgent",
        "units": null
      },
      {
        "definition": "<p>The HTTP request method used. Example values: POST, GET.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.method",
        "units": null
      },
      {
        "definition": "<p>The outgoing response size in bytes as read from the Content-Length response header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.headers.contentLength",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>For an HTTP response, the data type of the returned response. Example values: text/html, application/json.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.headers.contentType",
        "units": null
      },
      {
        "definition": "<p>The error stack trace. The format will be different depending on the agent language.</p>\n",
        "events": [
          "AwsLambdaInvocationError"
        ],
        "name": "stackTrace",
        "units": null
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "MobileRequest",
          "MobileRequestError",
          "Span"
        ],
        "name": "traceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the transaction in which the error occurred. Example value: Controller/customers/show. Value may be &#39;Unknown&#39; if an error occurs outside of a transaction.</p>\n",
        "events": [
          "AwsLambdaInvocationError",
          "TransactionError"
        ],
        "name": "transactionName",
        "units": null
      },
      {
        "definition": "<p>The New Relic event type. Example values: <code>Transaction</code>, <code>Span</code>.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError"
        ],
        "name": "type",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "AWS Lambda"
      }
    ],
    "definition": "<p>This event is reported by New Relic monitoring for AWS Lambda. It&#39;s generated when an error occurs during a Lambda function invocation.</p>\n",
    "name": "AwsLambdaInvocationError"
  },
  {
    "attributes": [
      {
        "definition": "<p>The text of the HTML element that was clicked when a browser interaction started. Added to <code>BrowserInteraction</code> and any <code>AjaxRequest</code>, <code>JavaScriptError</code> and <code>BrowserTiming</code> events that occurred during that interaction.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "actionText",
        "units": null
      },
      {
        "definition": "<p>A count of all XHRs included in the timing of a SPA interaction.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "ajaxCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The ID of your application, as recorded by New Relic.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application that handled the request as shown in browser monitoring.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The organization that owns the Autonomous System Number. Often an ISP, sometimes a private company or institution.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnOrganization",
        "units": null
      },
      {
        "definition": "<p>The name of the backend transaction that served the initial page load.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "backendTransactionName",
        "units": null
      },
      {
        "definition": "<p>A unique value generated for each browser interaction captured by the New Relic agent.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "browserInteractionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the interaction. This is either the <code>targetGroupedUrl</code> or the custom name set via the API.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "browserInteractionName",
        "units": null
      },
      {
        "definition": "<p>The type of interaction; either initial page load, route change, or custom.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "category",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the browser initiated the page load. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The type of device that loaded the page: mobile, tablet, or desktop.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageView"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>The domain portion of the request URL.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError",
          "PageView",
          "PageViewTiming"
        ],
        "name": "domain",
        "units": null
      },
      {
        "definition": "<p>The total time elapsed of the interaction event</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "duration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>A value that you can link to multiple <code>BrowserInteraction</code> events so you can view the interactions that occurred surrounding a specific event. For example, you can see the browser interactions that occurred prior to a JavaScript error.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "eventId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p><code>firstContentfulPaint</code> is the point when the browser renders the first bit of content from the DOM, which may be text, an image, SVG, or a &lt;canvas&gt; element.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a> contains detailed information about its <code>Paint Timing</code> API and <code>firstContentfulPaint</code>.</p>\n<p>See <a href=\"/docs/browser/new-relic-browser/getting-started/compatibility-requirements-new-relic-browser#browser-types\">Compatibility and requirements for New Relic Browser</a> for additional information about <code>firstContentfulPaint</code> browser compatibility.</p>\n",
        "events": [
          "BrowserInteraction",
          "PageView"
        ],
        "name": "firstContentfulPaint",
        "units": null
      },
      {
        "definition": "<p><code>firstPaint</code> marks the point when the browser renders anything that is visually different from what was on the screen prior to navigation. This includes non-default background paint and the enclosing box of an iframe.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a> contains detailed information about its <code>Paint Timing</code> API and <code>firstPaint</code>.</p>\n<p>See <a href=\"/docs/browser/new-relic-browser/getting-started/compatibility-requirements-new-relic-browser#browser-types\">Compatibility and requirements for New Relic Browser</a> for additional information about <code>firstPaint</code> browser compatibility.</p>\n",
        "events": [
          "BrowserInteraction",
          "PageView"
        ],
        "name": "firstPaint",
        "units": null
      },
      {
        "definition": "<p>The total duration, in seconds, spent on JavaScript execution. This attribute is only seen in <code>AjaxRequest</code> data that is tied to <code>BrowserInteraction</code>. This attribute doesn&#39;t exist for initial page load events.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "jsDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The synthetic monitoring account from which you are running the monitor.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError"
        ],
        "name": "monitorAccountId",
        "units": null
      },
      {
        "definition": "<p>A unique number identifying a particular monitor.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError",
          "SyntheticCheck"
        ],
        "name": "monitorId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The ID of a single synthetic monitor run, which began at a specific time and originated from a specific location.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError"
        ],
        "name": "monitorJobId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique value generated for each interaction with the page. You can use this value to group interactions together.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "parentEventId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The grouped version of the URL in the browser at the start of the interaction.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "previousGroupedUrl",
        "units": null
      },
      {
        "definition": "<p>The route name of the page at the start of the interaction. This is the last value passed by <code>setCurrentRouteName</code> before the start of the interaction.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "previousRouteName",
        "units": null
      },
      {
        "definition": "<p>The ungrouped URL in the browser at the start of the interaction.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "previousURL",
        "units": null
      },
      {
        "definition": "<p>The specific administrative division within a country where the <code>PageView</code> event occurred. In the United States, regions correspond to state codes, such as WA or NY. Outside the United States, a country&#39;s regions correspond to numerical codes.</p>\n<p>In the United States, regions correspond to <a href=\"http://pe.usps.gov/text/pub28/28apb.htm\">state codes</a> ; for example, <code>WA</code> or <code>NY</code>. Outside the United States, a country&#39;s regions correspond to <a href=\"https://www.maxmind.com/download/geoip/misc/region_codes.csv\">numerical codes</a> .</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>A unique identifier for a single session. The session is tracked in browser storage using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#web_storage_concepts_and_usage\">Web Storage API</a>, subject to each browser&#39;s implementation and handling. The session will automatically reset or refresh after a set period of inactivity or a pre-defined duration limit, whichever is less.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "session",
        "units": null
      },
      {
        "definition": "<p>Allows for linking together end user actions from session traces and querying across browser events. Not all browser events will have this. For example, PageView events complete before the first session trace harvest. Also, initial page loads from BrowserInteraction won&#39;t always include this. </p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageViewTiming"
        ],
        "name": "sessionTraceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The grouped version of the URL in the browser at the end of the interaction.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "targetGroupedUrl",
        "units": null
      },
      {
        "definition": "<p>The route name for the page at the end of the interaction. The last value passed by <code>setCurrentRouteName</code> before the end of the interaction.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "targetRouteName",
        "units": null
      },
      {
        "definition": "<p>The ungrouped URL in the browser at the end of the interaction.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "targetUrl",
        "units": null
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>connectEnd</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToConnectEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>connectStart</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToConnectStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>domComplete</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToDomComplete",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>domContentLoadedEventEnd</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToDomContentLoadedEventEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>domContentLoadedEventStart</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToDomContentLoadedEventStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>domInteractive</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToDomInteractive",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>domLoading</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToDomLoading",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>domainLookupEnd</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToDomainLookupEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>domainLookupStart</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToDomainLookupStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>fetchStart</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToFetchStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The duration, in seconds, from the start of the request (timestamp) to the end of the last callback. This is not just an additive function; the callback time can overlap with the wait time. This attribute is only seen in <code>AjaxRequest</code> data that is tied to <code>BrowserInteraction</code>.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "timeToLastCallbackEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>loadEventEnd</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToLoadEventEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>loadEventStart</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information, see our documentation about <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">instrumentation for the Navigation Timing API</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToLoadEventStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>redirectEnd</code>, as defined by the Navigation Timing API. This attribute exists only for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToRedirectEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>redirectStart</code>, as defined by the Navigation Timing API. This attribute exists only for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToRedirectStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>requestStart</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToRequestStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>responseEnd</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToResponseEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>responseStart</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToResponseStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>secureConnectionStart</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToSecureConnectionStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>unloadEventEnd</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToUnloadEventEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the interaction to the <code>unloadEventStart</code>, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information about the Navigation Timing API, see <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/instrumentation-browser-monitoring#navigation-api\">Instrumentation for Browser monitoring</a>.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "timeToUnloadEventStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The cause of the route change or page load. The default values are <code>click</code>, <code>submit</code>, <code>popstate</code>, or <code>initial page load</code>. For a custom event created with the API, the default value for trigger will be <code>api</code>. This value can also be set via the API.</p>\n",
        "events": [
          "BrowserInteraction"
        ],
        "name": "trigger",
        "units": null
      },
      {
        "definition": "<p>The browser’s name, such as Chrome and Firefox, obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentName",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported operating system, such as Windows or Linux, that it is running on. This is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentOS",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported software version, which is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentVersion",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Browser agent"
      }
    ],
    "definition": "<p>A <code>BrowserInteraction</code> represents a unit of work in a browser session, triggered by a user interacting with the webpage. It captures information about the session, AJAX calls and custom JavaScript timing that occurred as a result of the interaction. Initial load and route changes are captured as special types of browser interactions, and are used for SPA monitoring.</p>\n",
    "name": "BrowserInteraction"
  },
  {
    "attributes": [
      {
        "definition": "<p>The text of the HTML element that was clicked when a browser interaction started. Added to <code>BrowserInteraction</code> and any <code>AjaxRequest</code>, <code>JavaScriptError</code> and <code>BrowserTiming</code> events that occurred during that interaction.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "actionText",
        "units": null
      },
      {
        "definition": "<p>The ID of your application, as recorded by New Relic.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application that handled the request as shown in browser monitoring.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The organization that owns the Autonomous System Number. Often an ISP, sometimes a private company or institution.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnOrganization",
        "units": null
      },
      {
        "definition": "<p>A unique value generated for each browser interaction captured by the New Relic agent.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "browserInteractionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the interaction. This is either the <code>targetGroupedUrl</code> or the custom name set via the API.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "browserInteractionName",
        "units": null
      },
      {
        "definition": "<p>The name of the event. This is taken from the <code>name</code> argument of <code>createTracer</code>.</p>\n",
        "events": [
          "BrowserTiming"
        ],
        "name": "browserTimingName",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the browser initiated the page load. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The type of device that loaded the page: mobile, tablet, or desktop.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageView"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>A value that you can link to multiple <code>BrowserInteraction</code> events so you can view the interactions that occurred surrounding a specific event. For example, you can see the browser interactions that occurred prior to a JavaScript error.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "eventId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The grouped URL of the view that made the AJAX request. For example: <code>myapp.com/acct/\\*/dash</code>.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming"
        ],
        "name": "groupedPageURL",
        "units": null
      },
      {
        "definition": "<p>The total duration, in seconds, spent on JavaScript execution. This attribute is only seen in <code>AjaxRequest</code> data that is tied to <code>BrowserInteraction</code>. This attribute doesn&#39;t exist for initial page load events.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "jsDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The URL of the page that was loaded for the PageView, for example: <a href=\"http://www.newrelic.com\">http://www.newrelic.com</a>. This URL does not include query parameters.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "pageUrl",
        "units": null
      },
      {
        "definition": "<p>A unique value generated for each interaction with the page. You can use this value to group interactions together.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "parentEventId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The specific administrative division within a country where the <code>PageView</code> event occurred. In the United States, regions correspond to state codes, such as WA or NY. Outside the United States, a country&#39;s regions correspond to numerical codes.</p>\n<p>In the United States, regions correspond to <a href=\"http://pe.usps.gov/text/pub28/28apb.htm\">state codes</a> ; for example, <code>WA</code> or <code>NY</code>. Outside the United States, a country&#39;s regions correspond to <a href=\"https://www.maxmind.com/download/geoip/misc/region_codes.csv\">numerical codes</a> .</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>A unique identifier for a single session. The session is tracked in browser storage using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#web_storage_concepts_and_usage\">Web Storage API</a>, subject to each browser&#39;s implementation and handling. The session will automatically reset or refresh after a set period of inactivity or a pre-defined duration limit, whichever is less.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "session",
        "units": null
      },
      {
        "definition": "<p>Allows for linking together end user actions from session traces and querying across browser events. Not all browser events will have this. For example, PageView events complete before the first session trace harvest. Also, initial page loads from BrowserInteraction won&#39;t always include this. </p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageViewTiming"
        ],
        "name": "sessionTraceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time in seconds between the start of the <code>BrowserInteraction</code> and the start of the request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming"
        ],
        "name": "timeSinceBrowserInteractionStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The duration, in seconds, from the start of the request (timestamp) to the end of the last callback. This is not just an additive function; the callback time can overlap with the wait time. This attribute is only seen in <code>AjaxRequest</code> data that is tied to <code>BrowserInteraction</code>.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming"
        ],
        "name": "timeToLastCallbackEnd",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the start of the request to when all resulting callbacks (including callbacks of subsequent AJAX requests) are complete. This attribute is only seen in <code>AjaxRequest</code> data that is tied to <code>BrowserInteraction</code>.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming"
        ],
        "name": "timeToSettle",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time in seconds from the start of the custom tracer until the start of the traced callback. This attribute is unique to the <code>BrowserTiming</code> event.</p>\n",
        "events": [
          "BrowserTiming"
        ],
        "name": "timeToTracedCallbackStart",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The duration in seconds of the traced callback. This attribute is unique to the <code>BrowserTiming</code> event.</p>\n",
        "events": [
          "BrowserTiming"
        ],
        "name": "tracedCallbackDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The browser’s name, such as Chrome and Firefox, obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentName",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported operating system, such as Windows or Linux, that it is running on. This is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentOS",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported software version, which is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentVersion",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Browser agent"
      }
    ],
    "definition": "<p><code>BrowserTiming</code> is a custom event that captures SPA timing data for browser interactions started using the custom <code>createTracer</code> SPA API method. <code>BrowserTiming</code> contains many of the same attributes used by other events, especially <code>AjaxRequest</code>.</p>\n",
    "name": "BrowserTiming"
  },
  {
    "attributes": [
      {
        "definition": "<p>Data space available in the Storage Driver. Only available while using Docker&#39;s <code>devicemapper</code> storage driver <a href=\"https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-storage-drivers-per-linux-distribution\">that is deprecated</a>.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "StorageDataAvailableBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Total Data space in the Storage Driver. Only available while using Docker&#39;s <code>devicemapper</code> storage driver <a href=\"https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-storage-drivers-per-linux-distribution\">that is deprecated</a>.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "StorageDataTotalBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Percent of Data space used in the Storage Driver. Only available while using Docker&#39;s <code>devicemapper</code> storage driver <a href=\"https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-storage-drivers-per-linux-distribution\">that is deprecated</a>.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "StorageDataUsagePercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>Data space used by the Storage Driver. Only available while using Docker&#39;s <code>devicemapper</code> storage driver <a href=\"https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-storage-drivers-per-linux-distribution\">that is deprecated</a>.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "StorageDataUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Metadata space available in the Storage Driver. Only available while using Docker&#39;s <code>devicemapper</code> storage driver <a href=\"https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-storage-drivers-per-linux-distribution\">that is deprecated</a>.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "StorageMetadataAvailableBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Total Metadata space in the Storage Driver. Only available while using Docker&#39;s <code>devicemapper</code> storage driver <a href=\"https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-storage-drivers-per-linux-distribution\">that is deprecated</a>.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "StorageMetadataTotalBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Percent of Metadata space used in the Storage Driver. Only available while using Docker&#39;s <code>devicemapper</code> storage driver <a href=\"https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-storage-drivers-per-linux-distribution\">that is deprecated</a>.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "StorageMetadataUsagePercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>Metadata space used by the Storage Driver. Only available while using Docker&#39;s <code>devicemapper</code> storage driver <a href=\"https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-storage-drivers-per-linux-distribution\">that is deprecated</a>.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "StorageMetadataUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The command line used in the container.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "commandLine",
        "units": null
      },
      {
        "definition": "<p>The unique Docker container ID.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "containerId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>CPU time percentage used in kernel space.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "cpuKernelPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>How much of the available CPU resources a container can use.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "cpuLimitCores",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>CPU usage percentage used by CPU core. For containers with more than one CPU core, this percentage may be greater than 100%.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "cpuPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>Number of CPU shares assigned to the container; increase or reduce the container&#39;s weight and give access to greater or lesser host machine CPU cycles. Weight may differ between cgroups v1 and cgroups v2.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "cpuShares",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Total number of periods throttled.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "cpuThrottlePeriods",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Total throttling time in milliseconds.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "cpuThrottleTimeMs",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>CPU usage per core.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "cpuUsedCores",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>CPU usage percentage per core.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "cpuUsedCoresPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>CPU time percentage used in user space.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "cpuUserPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The number of times that alert conditions violated critical thresholds, causing critical violations and opening incidents. If this attribute does not exist on the sample, it has zero violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "criticalViolationCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The Docker image ID for the image the container is based on.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "image",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The Docker image name for the container.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "imageName",
        "units": null
      },
      {
        "definition": "<p>Docker labels associated with this container (where KEY represents a custom label&#39;s key value).</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "label_KEY",
        "units": null
      },
      {
        "definition": "<p>The amount of memory used by the container that can be associated precisely with a block on a block device.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memoryCacheBytes",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The amount of current kernel memory allocation.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memoryKernelUsageBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The amount of memory that doesn&#39;t correspond to anything on disk: stacks, heaps, and anonymous memory maps.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memoryResidentSizeBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The total amount of memory the container is allowed to use.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memorySizeLimitBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The soft limit of memory usage equivalent to the memory reservation of the container.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memorySoftLimitBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The total amount of memory the container is using, including swap.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memorySwapLimitBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>This metric is calculated as the percentage of <code>memorySwapUsageBytes</code> over <code>memorySwapLimitBytes</code>, if the limit exists.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memorySwapLimitUsagePercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The amount of swap memory the container is using. This memory doesn&#39;t include non-swap memory.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memorySwapOnlyUsageBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The amount of memory swap the container is using, including swap.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memorySwapUsageBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>This metric doesn&#39;t account for swap usage.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memoryUsageBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>This metric is calculated as the <code>memoryUsageBytes</code> percentage over <code>memorySizeLimitBytes</code>, if the limit exists.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "memoryUsageLimitPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The Docker container name.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "name",
        "units": null
      },
      {
        "definition": "<p>Total number of received bytes.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkRxBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Number of received bytes per second.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkRxBytesPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>Total number of received packets dropped.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkRxDropped",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of received packets dropped per second.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkRxDroppedPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>Total number of received packets with error.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkRxError",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of received packets with error per second.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkRxErrorsPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>Total number of received packets.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkRxPackets",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of received packets with error per second.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkRxPacketsPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>Number of transmitted bytes per second.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkTxBytesPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>Total number of transmitted packets dropped.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkTxDropped",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of transmitted packets dropped per second.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkTxDroppedPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>Total number of transmitted packets with error.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkTxErrors",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of transmitted packets with error per second.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkTxErrorsPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>Total number of transmitted packets.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkTxPackets",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of transmitted packets per second.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networkTxPacketsPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>Total number of bytes transmitted.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "networksTxBytes",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of times the container was restarted.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "restartCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>It can be: created, restarting, running, removing, paused, exited, or dead.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "state",
        "units": null
      },
      {
        "definition": "<p>Holds the current container state.</p>\n",
        "events": [
          "ContainerSample"
        ],
        "name": "status",
        "units": null
      },
      {
        "definition": "<p>The number of times that alert conditions violated warning thresholds, causing warning violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "warningViolationCount",
        "units": {
          "label": "count"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Infrastructure"
      }
    ],
    "definition": "<p>This event is reported by the New Relic Infrastructure agent. It collects data from all the Docker containers on the host (which may or may not be running). It includes the container&#39;s ID, name, image, image name, and metrics about CPU, memory and networking. We take a snapshot of this data every 15 seconds for each container and package it into this event, which is then sent to New Relic. This data appears on the Containers UI page.</p>\n",
    "name": "ContainerSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>A URL for the changelog, or if it is not linkable, a list of changes.</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "changelog",
        "units": null
      },
      {
        "definition": "<p>The commit identifier (for example, the Git commit SHA).</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "commit",
        "units": null
      },
      {
        "definition": "<p>A URL pointing back to the system generating the deployment. This field can hold any URL.</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "deepLink",
        "units": null
      },
      {
        "definition": "<p>Unique identifier we generate when a marker is created. Alphanumeric IDs are from our newer NerdGraph change tracking feature. Numeric IDs are from our legacy REST API-based feature.</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "deploymentId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The type of the deployment (for example, &#39;BASIC&#39;, &#39;BLUE-GREEN&#39;, &#39;CANARY&#39;, &#39;OTHER&#39;, &#39;ROLLING&#39;, or &#39;SHADOW&#39;).</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "deploymentType",
        "units": null
      },
      {
        "definition": "<p>A description of the deployment.</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "description",
        "units": null
      },
      {
        "definition": "<p>The globally unique identifier for the New Relic entity that this marker applies to.</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "entity.guid",
        "units": null
      },
      {
        "definition": "<p>The friendly name for the New Relic entity this marker applies to.</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "entity.name",
        "units": null
      },
      {
        "definition": "<p>String value that can be used to correlate multiple entities across a single change event.</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "groupId",
        "units": null
      },
      {
        "definition": "<p>The start time of the deployment (in milliseconds since Unix epoch).</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>Username of the deployer or bot that created this deployment.</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "user",
        "units": null
      },
      {
        "definition": "<p>The version of the deployment (for example, v1.1).</p>\n",
        "events": [
          "Deployment"
        ],
        "name": "version",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Change tracking"
      }
    ],
    "definition": "<p><code>Deployment</code> events occur for changes you decide to follow using the change tracking feature.</p>\n",
    "name": "Deployment"
  },
  {
    "attributes": [
      {
        "definition": "<p>A comma delimited list of newrelic accountIds that took part in this trace.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "accountIds",
        "units": null
      },
      {
        "definition": "<p>The total elapsed time in milliseconds of all backend services in this trace.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "backend.duration.ms",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The timestamp of the first span in this trace from a backend entity. In distributed tracing, any events that are not from client-side applications contributed to the backend duration.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "backend.timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The duration of the entire distributed trace, including both backend and client-side entities. the earliest span to the latest.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "duration.ms",
        "units": null
      },
      {
        "definition": "<p>The number of unique entities that took part in this trace.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "entityCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>A comma delimited list of entity GUIDs for entities that participated in this trace. These GUIDs are assigned by New Relic for the New Relic-monitored entity (host, application, etc.). Each GUID is stored as a Base64 encoded value.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "entityGuids",
        "units": null
      },
      {
        "definition": "<p>The number of events in this distributed trace that were identified as errors.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "errorCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The name of the trace filter used by the Infinite Tracing trace observer to select this trace.</p>\n",
        "events": [
          "DistributedTraceSummary",
          "Span"
        ],
        "name": "newRelic.traceFilter.type",
        "units": null
      },
      {
        "definition": "<p>The New Relic account ID that the root entity of this trace reports data to.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "root.entity.accountId",
        "units": null
      },
      {
        "definition": "<p>The entity GUID associated with the root entity of this trace.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "root.entity.guid",
        "units": null
      },
      {
        "definition": "<p>The name of the root entity of this trace.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "root.entity.name",
        "units": null
      },
      {
        "definition": "<p>The elapsed time in milliseconds of the root span of this trace. The root of a distributed trace is the first span, and will have a null value for parent.id.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "root.span.duration.ms",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The unique identifier of the root span of this trace. The root of a distributed trace is the first span, and it has a null value for parent.id.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "root.span.id",
        "units": null
      },
      {
        "definition": "<p>The name of the root span of this trace.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "root.span.name",
        "units": null
      },
      {
        "definition": "<p>The timestamp of the root span of this trace. The root of a distributed trace is the first span, and will have a null value for parent.id.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "root.span.timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The number of events in this distributed trace. Events in a distributed trace can have several event types, including Span, Transaction, and TransactionError.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "spanCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The timestamp of the root span in this distributed trace.</p>\n",
        "events": [
          "DistributedTraceSummary"
        ],
        "name": "timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "DistributedTraceSummary",
          "MobileRequest",
          "MobileRequestError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "trace.id",
        "units": {
          "label": "ID"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Distributed Tracing"
      }
    ],
    "definition": "<p>This event contains summary data about a distributed trace and provides an aggregated view of distributed tracing data. DistributedTraceSummary events are generated by New Relic and are triggered by distributed tracing data from agents or the Trace API. This event only appears in the parent account.</p>\n",
    "name": "DistributedTraceSummary"
  },
  {
    "attributes": [
      {
        "definition": "<p>A New Relic category used to organize events in the UI. For example: automation, notification, and service.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "category",
        "units": null
      },
      {
        "definition": "<p>A simple classification of the type of change made to the entity: added, modified, or removed.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "changeType",
        "units": null
      },
      {
        "definition": "<p>The fully specified name of the item that changed. This is constructed by taking the source and adding one or more additional path elements that uniquely identify the item that changed.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "changedPath",
        "units": null
      },
      {
        "definition": "<p>Delta refers to a recorded change in the system. The deltaId is a number used by New Relic to organize incoming inventory change data.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "deltaId",
        "units": null
      },
      {
        "definition": "<p>The unique ID of the event, generated by New Relic.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "eventId",
        "units": null
      },
      {
        "definition": "<p>The type of infrastructure event. Each format type includes attributes that may be used to render the event in the UI.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "format",
        "units": null
      },
      {
        "definition": "<p>The new agent status: disconnected or connected.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "newStatus",
        "units": null
      },
      {
        "definition": "<p>If a change is made to the entity, this attribute contains the new value of the inventory that was changed. This will have no value if no change has been made. The value will display approximately 4K bytes of data.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "newValue",
        "units": null
      },
      {
        "definition": "<p>If a change is made to the entity, this attribute contains the old value of the inventory that was changed. This will be blank if no change has been made.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "oldValue",
        "units": null
      },
      {
        "definition": "<p>For integrations that use generic event types (like the DatastoreSample event), the provider value specifies the source of the data (the service, or a sub-category of data from that service).</p>\n<p>Some <a href=\"/docs/using-new-relic/welcome-new-relic/getting-started/glossary#event\">events</a> are generic and are used by several integrations. For example, the <code>DatastoreSample</code> event is used by several integrations, including the <a href=\"/docs/integrations/amazon-integrations/aws-integrations-list/aws-dynamodb-monitoring-integration\">AWS DynamoDB integration</a> and the <a href=\"/docs/integrations/amazon-integrations/aws-integrations-list/aws-rds-monitoring-integration\">AWS RDS integration</a>. In these cases, the <code>provider</code> attribute value represents the source of that attribute. This will usually be the service that data comes from or, for integrations that use several provider values, a certain sub-category of data from that service.</p>\n<p>When a provider value is present for a generic event, that event will have additional integration-specific attributes attached to it.</p>\n<p>Here’s an example of a NRQL query that returns the attributes present for a <code>DatastoreSample</code> event reported by the AWS RDS integration:</p>\n<p>SELECT * from DatastoreSample where provider = &#39;RdsDbCluster&#39;</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "provider",
        "units": null
      },
      {
        "definition": "<p>The fully specified origin of this inventory item. This is typically in the form category/plugin, where plugin is the generic word used for the tool that gathered this data.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "source",
        "units": null
      },
      {
        "definition": "<p>A summary of the change that happened. Uses a human-friendly string, such as Agent disconnected.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "summary",
        "units": null
      },
      {
        "definition": "<p>The type of change to the violation: For example: open or closed.</p>\n",
        "events": [
          "InfrastructureEvent"
        ],
        "name": "violationUpdateType",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Infrastructure"
      },
      {
        "name": "CloudTrail"
      }
    ],
    "definition": "<p>InfrastructureEvent describes changes (deltas) that occur in a system&#39;s live state. When an inventory or system state is added, removed, or changed, Infrastructure will produce an InfrastructureEvent that logs that activity.</p>\n",
    "name": "InfrastructureEvent"
  },
  {
    "attributes": [
      {
        "definition": "<p>The text of the HTML element that was clicked when a browser interaction started. Added to <code>BrowserInteraction</code> and any <code>AjaxRequest</code>, <code>JavaScriptError</code> and <code>BrowserTiming</code> events that occurred during that interaction.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "actionText",
        "units": null
      },
      {
        "definition": "<p>The identification number for the reporting browser agent.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application that handled the request as shown in browser monitoring.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The organization that owns the Autonomous System Number. Often an ISP, sometimes a private company or institution.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnOrganization",
        "units": null
      },
      {
        "definition": "<p>A unique value generated for each browser interaction captured by the New Relic agent.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "browserInteractionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>An unique identifier generated for a stack trace. The browserStackHash for a stack trace is different across different browsers. An identical stack trace will generate the same identifier.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "browserStackHash",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the browser initiated the page load. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The type of device that loaded the page: mobile, tablet, or desktop.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageView"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>The domain portion of the request URL.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError",
          "PageView",
          "PageViewTiming"
        ],
        "name": "domain",
        "units": null
      },
      {
        "definition": "<p>The unique identifier of the monitor referenced in New Relic One.</p>\n",
        "events": [
          "JavaScriptError",
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "entityGuid",
        "units": null
      },
      {
        "definition": "<p>The error type of the JavaScript Error object. Examples: ReferenceError, SyntaxError, and UncaughtException.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "errorClass",
        "units": null
      },
      {
        "definition": "<p>The error message that was delivered.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "errorMessage",
        "units": null
      },
      {
        "definition": "<p>A value to indicate whether or not this was the first JS error in the session. Example: true.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "firstErrorInSession",
        "units": null
      },
      {
        "definition": "<p>The synthetic monitoring account from which you are running the monitor.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError"
        ],
        "name": "monitorAccountId",
        "units": null
      },
      {
        "definition": "<p>A unique number identifying a particular monitor.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError",
          "SyntheticCheck"
        ],
        "name": "monitorId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The ID of a single synthetic monitor run, which began at a specific time and originated from a specific location.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError"
        ],
        "name": "monitorJobId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The URL of the page that was loaded for the PageView, for example: <a href=\"http://www.newrelic.com\">http://www.newrelic.com</a>. This URL does not include query parameters.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "pageUrl",
        "units": null
      },
      {
        "definition": "<p>A unique value generated for each interaction with the page. You can use this value to group interactions together.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError"
        ],
        "name": "parentEventId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The specific administrative division within a country where the <code>PageView</code> event occurred. In the United States, regions correspond to state codes, such as WA or NY. Outside the United States, a country&#39;s regions correspond to numerical codes.</p>\n<p>In the United States, regions correspond to <a href=\"http://pe.usps.gov/text/pub28/28apb.htm\">state codes</a> ; for example, <code>WA</code> or <code>NY</code>. Outside the United States, a country&#39;s regions correspond to <a href=\"https://www.maxmind.com/download/geoip/misc/region_codes.csv\">numerical codes</a> .</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>The releases in which the app was updated. Example: {\\&quot;jQuery\\&quot;:\\&quot;v3.1.1\\&quot;,\\&quot;multiverse\\&quot;:\\&quot;96e9ac7\\&quot;}.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "releaseIds",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The URI of the requested resource.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "requestUri",
        "units": null
      },
      {
        "definition": "<p>A unique identifier for a single session. The session is tracked in browser storage using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#web_storage_concepts_and_usage\">Web Storage API</a>, subject to each browser&#39;s implementation and handling. The session will automatically reset or refresh after a set period of inactivity or a pre-defined duration limit, whichever is less.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "session",
        "units": null
      },
      {
        "definition": "<p>Allows for linking together end user actions from session traces and querying across browser events. Not all browser events will have this. For example, PageView events complete before the first session trace harvest. Also, initial page loads from BrowserInteraction won&#39;t always include this. </p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageViewTiming"
        ],
        "name": "sessionTraceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier generated by the Browser agent for a stack trace. The stackHash for a stack trace is the same across different browsers. An identical stack trace will generate the same identifier.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "stackHash",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A collection of the active stack frames when the error occurred.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "stackTrace",
        "units": null
      },
      {
        "definition": "<p>A compressed version of the stackTrace attribute.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "stackTraceGzip",
        "units": null
      },
      {
        "definition": "<p>The time that the error occurred, in Unix time.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The full metric name of the transaction in which the error occurred, or Unknown if the error occurs outside of a transaction.</p>\n",
        "events": [
          "JavaScriptError"
        ],
        "name": "transactionName",
        "units": null
      },
      {
        "definition": "<p>The browser’s name, such as Chrome and Firefox, obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentName",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported operating system, such as Windows or Linux, that it is running on. This is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentOS",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported software version, which is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentVersion",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Browser agent"
      }
    ],
    "definition": "<p>As JavaScript errors are triggered, we capture details as events. The JavaScriptError event contains information to help you segment errors to understand how they impact performance.</p>\n",
    "name": "JavaScriptError"
  },
  {
    "attributes": [
      {
        "definition": "<p>Maximal number of currently used inflight request limit of the apiserver per request kind Mutating in the last second (requires k8s v1.23+).</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "apiserverCurrentInflightRequestsMutating",
        "units": null
      },
      {
        "definition": "<p>Maximal number of currently used inflight request limit of the apiserver per request <code>ReadOnly</code> kind in the last second (requires k8s v1.23+).</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "apiserverCurrentInflightRequestsReadOnly",
        "units": null
      },
      {
        "definition": "<p>This is a delta counter for each request verb (e.g. GET, WATCH, LIST, CREATE) and their response codes. The delta is between the current and the last polled value.</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "apiserverRequestDelta_verb_VERB_code_CODE",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Rate of apiserver requests per minute, broken out for each verb and HTTP response code.</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "apiserverRequestRate_verb_VERB_code_CODE",
        "units": null
      },
      {
        "definition": "<p>Number of stored objects at the time of last check, split by kind (requires k8s 1.23+; replaces <code>etcdObjectCounts</code>).</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "apiserverStorageObjects_resource_RESOURCE-KIND",
        "units": null
      },
      {
        "definition": "<p>Number of stored objects at the time of last check, split by kind (alpha; deprecated in Kubernetes 1.22; replaced by <code>apiserverStorageObjects</code>).</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "etcdObjectCounts_resource_RESOURCE_KIND",
        "units": null
      },
      {
        "definition": "<p>Number of goroutines that currently exist.</p>\n",
        "events": [
          "K8sApiServerSample",
          "K8sControllerManagerSample",
          "K8sEtcdSample",
          "K8sSchedulerSample"
        ],
        "name": "goGoroutines",
        "units": null
      },
      {
        "definition": "<p>Number of OS threads created.</p>\n",
        "events": [
          "K8sApiServerSample",
          "K8sControllerManagerSample",
          "K8sEtcdSample",
          "K8sSchedulerSample"
        ],
        "name": "goThreads",
        "units": null
      },
      {
        "definition": "<p>Difference of the user and system CPU time spent, in seconds.</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "processCpuSecondsDelta",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Resident memory size, in bytes.</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "processResidentMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Difference of the number of HTTP requests, partitioned by method and code.</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "restClientRequestsDelta_code_CODE_method_METHOD",
        "units": null
      },
      {
        "definition": "<p>Rate of the number of HTTP requests, partitioned by method and code.</p>\n",
        "events": [
          "K8sApiServerSample"
        ],
        "name": "restClientRequestsRate_code_CODE_method_METHOD",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes API server data.</p>\n",
    "name": "K8sApiServerSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Kubernetes version that the cluster is running on.</p>\n",
        "events": [
          "K8sClusterSample"
        ],
        "name": "clusterK8sVersion",
        "units": null
      },
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes cluster data.</p>\n",
    "name": "K8sClusterSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Delta change of elapsed enforcement period intervals.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerCpuCfsPeriodsDelta",
        "units": null
      },
      {
        "definition": "<p>Total number of elapsed enforcement period intervals.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerCpuCfsPeriodsTotal",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Delta change of throttled period intervals.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerCpuCfsThrottledPeriodsDelta",
        "units": null
      },
      {
        "definition": "<p>Total number of throttled period intervals.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerCpuCfsThrottledPeriodsTotal",
        "units": null
      },
      {
        "definition": "<p>Delta change of duration the container has been throttled, in seconds.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerCpuCfsThrottledSecondsDelta",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Total time duration the container has been throttled, in seconds.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerCpuCfsThrottledSecondsTotal",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Unique ID associated with the container. If you are running Docker, this is the Docker container id.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerID",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the image that the container is running.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerImage",
        "units": null
      },
      {
        "definition": "<p>Unique ID associated with the image that the container is running.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerImageID",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Total size of memory mapped files used by this container, in bytes.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerMemoryMappedFileBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Name associated with the container.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerName",
        "units": null
      },
      {
        "definition": "<p>Number of &quot;out of memory&quot; events observed for the container (requires k8s v1.24+).</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "containerOOMEventsDelta",
        "units": null
      },
      {
        "definition": "<p>Percentage of CPU cores actually used by the container with respect to the CPU limit specified. This percentage is based on this calculation: (<code>cpuUsedCores</code> / <code>cpuLimitCores</code>) * 100.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "cpuCoresUtilization",
        "units": null
      },
      {
        "definition": "<p>Integer representing limit CPU cores defined for the container in the pod specification.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "cpuLimitCores",
        "units": null
      },
      {
        "definition": "<p>Requested CPU cores defined for the container in the pod specification.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "cpuRequestedCores",
        "units": null
      },
      {
        "definition": "<p>CPU cores actually used by the container.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "cpuUsedCores",
        "units": null
      },
      {
        "definition": "<p>Name of the DaemonSet the container is associated with.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "daemonsetName",
        "units": null
      },
      {
        "definition": "<p>Name of the deployment to be used as an identifier.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "deploymentName",
        "units": null
      },
      {
        "definition": "<p>Boolean. Whether or not the container&#39;s readiness check succeeded.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "isReady",
        "units": null
      },
      {
        "definition": "<p>Name of the Job the container is associated with.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "jobName",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your container, so you can filter and query for specific containers. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Integer representing limit bytes of memory defined for the container in the pod specification.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "memoryLimitBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Integer. Requested bytes of memory defined for the container in the pod specification.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "memoryRequestedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Integer. Bytes of memory actually used by the container.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "memoryUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Percentage of memory actually used by the container with respect to the memory limit specified.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "memoryUtilization",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>Integer. Bytes of memory in the working set.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "memoryWorkingSetBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Percentage of working set memory actually used by the container with respect to the memory limit specified.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "memoryWorkingSetUtilization",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the container belongs to.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>Host IP address the container is running on.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "nodeIP",
        "units": null
      },
      {
        "definition": "<p>Host name that the pod is running on.</p>\n",
        "events": [
          "K8sContainerSample",
          "K8sNodeSample",
          "K8sPodSample"
        ],
        "name": "nodeName",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Name of the pod that the container is in, to be used as an identifier.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "podName",
        "units": null
      },
      {
        "definition": "<p>Provides a reason why the container is in the current status.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "reason",
        "units": null
      },
      {
        "definition": "<p>Name of the ReplicaSet the container is associated with.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "replicasetName",
        "units": null
      },
      {
        "definition": "<p>Percentage of CPU cores actually used by the container with respect to the CPU request specified.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "requestedCpuCoresUtilization",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>Percentage of memory actually used by the container with respect to the memory request specified.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "requestedMemoryUtilization",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>Percentage of working set memory actually used by the container with respect to the memory request specified.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "requestedMemoryWorkingSetUtilization",
        "units": null
      },
      {
        "definition": "<p>Number of times the container has been restarted.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "restartCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Delta change of number of times the container has been restarted.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "restartCountDelta",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Name of the StatefulSet the container is associated with.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "statefulsetName",
        "units": null
      },
      {
        "definition": "<p>Current status of the container. Value can be <code>Running</code>, <code>Terminated</code>, or <code>Unknown</code>.</p>\n",
        "events": [
          "K8sContainerSample"
        ],
        "name": "status",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes container data.</p>\n",
    "name": "K8sContainerSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Number of goroutines that currently exist.</p>\n",
        "events": [
          "K8sApiServerSample",
          "K8sControllerManagerSample",
          "K8sEtcdSample",
          "K8sSchedulerSample"
        ],
        "name": "goGoroutines",
        "units": null
      },
      {
        "definition": "<p>Number of OS threads created.</p>\n",
        "events": [
          "K8sApiServerSample",
          "K8sControllerManagerSample",
          "K8sEtcdSample",
          "K8sSchedulerSample"
        ],
        "name": "goThreads",
        "units": null
      },
      {
        "definition": "<p>Gauge of if the reporting system is master of the relevant lease, <code>0</code> indicates backup, <code>1</code> indicates master.</p>\n",
        "events": [
          "K8sControllerManagerSample"
        ],
        "name": "leaderElectionMasterStatus",
        "units": null
      },
      {
        "definition": "<p>Delta change of node evictions that happened since current instance of NodeController started (requires k8s v1.24+).</p>\n",
        "events": [
          "K8sControllerManagerSample"
        ],
        "name": "nodeCollectorEvictionsDelta",
        "units": null
      },
      {
        "definition": "<p>Difference of the user and system CPU time spent in seconds.</p>\n",
        "events": [
          "K8sControllerManagerSample"
        ],
        "name": "processCpuSecondsDelta",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Resident memory size, in bytes.</p>\n",
        "events": [
          "K8sControllerManagerSample"
        ],
        "name": "processResidentMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Difference of the total number of adds handled by workqueue.</p>\n",
        "events": [
          "K8sControllerManagerSample"
        ],
        "name": "workqueueAddsDelta_name_WORK_QUEUE_NAME",
        "units": null
      },
      {
        "definition": "<p>Current depth of workqueue.</p>\n",
        "events": [
          "K8sControllerManagerSample"
        ],
        "name": "workqueueDepth_name_WORK_QUEUE_NAME",
        "units": null
      },
      {
        "definition": "<p>Difference of the total number of retries handled by workqueue.</p>\n",
        "events": [
          "K8sControllerManagerSample"
        ],
        "name": "workqueueRetriesDelta_name_WORK-QUEUE-NAME",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes controller manager data.</p>\n",
    "name": "K8sControllerManagerSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Whether or not to allow the jobs created by this CronJob to run concurrently.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "concurrencyPolicy",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the CronJob was created.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>The name of the CronJob.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "cronjobName",
        "units": null
      },
      {
        "definition": "<p>Whether the CronJob has currently running jobs.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "isActive",
        "units": null
      },
      {
        "definition": "<p>Whether the CronJob is currently suspended.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "isSuspended",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your CronJob so you can filter and query for specific CronJobs. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>The last time the CronJob successfully scheduled a job.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "lastScheduledTime",
        "units": null
      },
      {
        "definition": "<p>The resource version representing a specific version of the Cronjob.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "metadataResourceVersion",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the CronJob belongs to.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>Next time the Cronjob should be scheduled. The time after <code>lastScheduleTime</code>, or after the Cronjob&#39;s creation time if it&#39;s never been scheduled. Use this to determine if the job is delayed.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "nextScheduledTime",
        "units": null
      },
      {
        "definition": "<p>The schedule which the CronJob uses to run jobs.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "schedule",
        "units": null
      },
      {
        "definition": "<p>The deadline in seconds for starting the job if it misses scheduled time for any reason.</p>\n",
        "events": [
          "K8sCronjobSample"
        ],
        "name": "specStartingDeadlineSeconds",
        "units": {
          "label": "seconds (s)"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes CronJob data.</p>\n",
    "name": "K8sCronjobSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the DaemonSet was created.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>Name associated with the DaemonSet.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "daemonsetName",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your DaemonSet, so you can filter and query for specific DaemonSet. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Sequence number representing a specific generation of the desired state.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "metadataGeneration",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the DaemonSet belongs to.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and available.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "podsAvailable",
        "units": null
      },
      {
        "definition": "<p>The number of nodes that should be running the daemon pod.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "podsDesired",
        "units": null
      },
      {
        "definition": "<p>The number of nodes running a daemon pod but are not supposed to.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "podsMisscheduled",
        "units": null
      },
      {
        "definition": "<p>Total number of replicas that are currently missing (number of desired replicas, podsDesired, minus the number of ready replicas, podsReady).</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "podsMissing",
        "units": null
      },
      {
        "definition": "<p>The number of nodes that should be running the daemon pod and have one or more of the daemon pod running and ready.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "podsReady",
        "units": null
      },
      {
        "definition": "<p>The number of nodes running at least one daemon pod and are supposed to.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "podsScheduled",
        "units": null
      },
      {
        "definition": "<p>The number of nodes that should be running the daemon pod and have none of the daemon pod running and available.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "podsUnavailable",
        "units": null
      },
      {
        "definition": "<p>The total number of nodes that are running updated daemon pod.</p>\n",
        "events": [
          "K8sDaemonsetSample"
        ],
        "name": "podsUpdatedScheduled",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes <code>DaemonSet</code> data.</p>\n",
    "name": "K8sDaemonsetSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the deployment was created.</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>Name of the deployment to be used as an identifier.</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "deploymentName",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your deployment, so you can filter and query for specific deployments. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the deployment belongs to.</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>Number of replicas that are currently available.</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "podsAvailable",
        "units": null
      },
      {
        "definition": "<p>Number of replicas that you defined in the deployment.</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "podsDesired",
        "units": null
      },
      {
        "definition": "<p>Total number of replicas that are missing (number of desired replicas, podsDesired, minus the total number of replicas, podsTotal).</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "podsMissing",
        "units": null
      },
      {
        "definition": "<p>Total number of replicas that are currently running.</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "podsTotal",
        "units": null
      },
      {
        "definition": "<p>Number of replicas that are currently unavailable.</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "podsUnavailable",
        "units": null
      },
      {
        "definition": "<p>Number of replicas that have been updated to achieve the desired state of the deployment.</p>\n",
        "events": [
          "K8sDeploymentSample"
        ],
        "name": "podsUpdated",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes deployment data.</p>\n",
    "name": "K8sDeploymentSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Number of addresses available in endpoint.</p>\n",
        "events": [
          "K8sEndpointSample"
        ],
        "name": "addressAvailable",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of addresses not ready in endpoint.</p>\n",
        "events": [
          "K8sEndpointSample"
        ],
        "name": "addressNotReady",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the endpoint was created.</p>\n",
        "events": [
          "K8sEndpointSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>Name associated with the endpoint.</p>\n",
        "events": [
          "K8sEndpointSample"
        ],
        "name": "endpointName",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your endpoint, so you can filter and query for specific endpoints. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sEndpointSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the endpoint belongs to.</p>\n",
        "events": [
          "K8sEndpointSample"
        ],
        "name": "namespaceName",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes endpoint data.</p>\n",
    "name": "K8sEndpointSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Total size of the underlying database physically allocated, in bytes.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdMvccDbTotalSizeInBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Rate of the total number of bytes received from gRPC clients.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdNetworkClientGrpcReceivedBytesRate",
        "units": null
      },
      {
        "definition": "<p>Rate of the total number of bytes sent to gRPC clients.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdNetworkClientGrpcSentBytesRate",
        "units": null
      },
      {
        "definition": "<p>Whether or not a leader exists. <code>1</code> is existence, <code>0</code> is not.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdServerHasLeader",
        "units": null
      },
      {
        "definition": "<p>Difference of the number of leader changes seen.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdServerLeaderChangesSeenDelta",
        "units": null
      },
      {
        "definition": "<p>Difference of the total number of consensus proposals applied.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdServerProposalsAppliedDelta",
        "units": null
      },
      {
        "definition": "<p>Rate of the total number of consensus proposals applied.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdServerProposalsAppliedRate",
        "units": null
      },
      {
        "definition": "<p>Difference of the total number of consensus proposals committed.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdServerProposalsCommittedDelta",
        "units": null
      },
      {
        "definition": "<p>Rate of the total number of consensus proposals committed.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdServerProposalsCommittedRate",
        "units": null
      },
      {
        "definition": "<p>Difference of the total number of failed proposals seen.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdServerProposalsFailedDelta",
        "units": null
      },
      {
        "definition": "<p>Rate of the total number of failed proposals seen.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdServerProposalsFailedRate",
        "units": null
      },
      {
        "definition": "<p>The current number of pending proposals to commit.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "etcdServerProposalsPending",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of goroutines that currently exist.</p>\n",
        "events": [
          "K8sApiServerSample",
          "K8sControllerManagerSample",
          "K8sEtcdSample",
          "K8sSchedulerSample"
        ],
        "name": "goGoroutines",
        "units": null
      },
      {
        "definition": "<p>Number of OS threads created.</p>\n",
        "events": [
          "K8sApiServerSample",
          "K8sControllerManagerSample",
          "K8sEtcdSample",
          "K8sSchedulerSample"
        ],
        "name": "goThreads",
        "units": null
      },
      {
        "definition": "<p>Difference of the user and system CPU time spent in seconds.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "processCpuSecondsDelta",
        "units": null
      },
      {
        "definition": "<p>Percentage open file descriptors with respect to the maximum number that can be opened.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "processFdsUtilization",
        "units": null
      },
      {
        "definition": "<p>Maximum number of open file descriptors.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "processMaxFds",
        "units": null
      },
      {
        "definition": "<p>Number of open file descriptors.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "processOpenFds",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Resident memory size, in bytes.</p>\n",
        "events": [
          "K8sEtcdSample"
        ],
        "name": "processResidentMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes etcd data.</p>\n",
    "name": "K8sEtcdSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Current number of replicas of pods managed by this autoscaler.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "currentReplicas",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Desired number of replicas of pods managed by this autoscaler.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "desiredReplicas",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Boolean representing whether or not the autoscaler is able to fetch and update scales, as well as whether or not any backoff-related conditions would prevent scaling.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "isAble",
        "units": null
      },
      {
        "definition": "<p>Boolean representing whether or not the autoscaler is enabled (if it&#39;s able to calculate the desired scales).</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "isActive",
        "units": null
      },
      {
        "definition": "<p>Boolean representing whether or not the autoscaler is capped, either up or down, by the maximum or minimum replicas configured.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "isLimited",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your HPA, so you can filter and query for specific autoscaler. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Number of Kubernetes labels converted to Prometheus labels.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "labels",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than <code>minReplicas</code>.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "maxReplicas",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The generation observed by the HorizontalPodAutoscaler controller.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "metadataGeneration",
        "units": null
      },
      {
        "definition": "<p>Lower limit for the number of pods that can be set by the autoscaler, <code>1</code> by default.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "minReplicas",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The metric specifications used by this autoscaler when calculating the desired replica count.</p>\n",
        "events": [
          "K8sHpaSample"
        ],
        "name": "targetMetric",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes horizontal pod autoscaler data.</p>\n",
    "name": "K8sHpaSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>The number of actively running Job pods.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "activePods",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the Job was completed.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "completedAt",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the Job was created.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>Whether the job has failed its execution.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "failed",
        "units": null
      },
      {
        "definition": "<p>The number of pods which reached Phase Failed.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "failedPods",
        "units": null
      },
      {
        "definition": "<p>The reason a pod reached Phase Failed.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "failedPodsReason",
        "units": null
      },
      {
        "definition": "<p>Whether the job has completed its execution.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "isComplete",
        "units": null
      },
      {
        "definition": "<p>The name of the Job.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "jobName",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your Job, so you can filter and query for specific Jobs. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the Job belongs to.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>Information about the Job&#39;s owner.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "ownerIsController",
        "units": null
      },
      {
        "definition": "<p>The type of Kubernetes workload that created the Job (e.g. CronJob).</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "ownerKind",
        "units": null
      },
      {
        "definition": "<p>The name of the Kubernetes workload that created the Job.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "ownerName",
        "units": null
      },
      {
        "definition": "<p>The duration in seconds relative to the startTime that the Job may be active before the system tries to terminate it.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "specActiveDeadlineSeconds",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The desired number of successfully finished pods the Job should be run with.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "specCompletions",
        "units": null
      },
      {
        "definition": "<p>The maximum desired number of pods the Job should run at any given time.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "specParallelism",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the Job was acknowledged by the Job Manager.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "startedAt",
        "units": null
      },
      {
        "definition": "<p>The number of pods which reached Phase Succeeded.</p>\n",
        "events": [
          "K8sJobSample"
        ],
        "name": "succeededPods",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes Job data.</p>\n",
    "name": "K8sJobSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Timestamp of the namespace when it was created.</p>\n",
        "events": [
          "K8sNamespaceSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your namespace, so you can filter and query for specific namespaces. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sNamespaceSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace to be used as an identifier.</p>\n",
        "events": [
          "K8sNamespaceSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>Indicates whether the namespace is being filtered. The value can be <code>true</code> or <code>false</code>.</p>\n",
        "events": [
          "K8sNamespaceSample"
        ],
        "name": "nrFiltered",
        "units": null
      },
      {
        "definition": "<p>Current status of the namespace. The value can be <code>Active</code> or <code>Terminated</code>.</p>\n",
        "events": [
          "K8sNamespaceSample"
        ],
        "name": "status",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes namespace data.</p>\n",
    "name": "K8sNamespaceSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Node allocatable CPU cores.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "allocatableCpuCores",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Percentage of CPU cores actually used with respect to the CPU cores allocatable.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "allocatableCpuCoresUtilization",
        "units": null
      },
      {
        "definition": "<p>Node allocatable ephemeral-storage bytes.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "allocatableEphemeralStorageBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Node allocatable memory bytes.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "allocatableMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Percentage of bytes of memory in the working set with respect to the node allocatable memory.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "allocatableMemoryUtilization",
        "units": null
      },
      {
        "definition": "<p>Node allocatable pods.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "allocatablePods",
        "units": null
      },
      {
        "definition": "<p>Node CPU capacity.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "capacityCpuCores",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Node ephemeral-storage capacity.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "capacityEphemeralStorageBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Node memory capacity (in bytes).</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "capacityMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Pod capacity of the node.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "capacityPods",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Status of the current observed node condition. The reported conditions can vary depending on your Kubernetes flavor and installed operators.</p>\n<p>Examples of common conditions are: Ready, DiskPressure, MemoryPressure, PIDPressure and NetworkUnavailable.  Condition values can be <code>1</code> (true), <code>0</code> (false), or <code>-1</code> (unknown).</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "condition.CONDITION_NAME=CONDITION_VALUE",
        "units": null
      },
      {
        "definition": "<p>Total amount of CPU cores requested from all containers on a node.</p>\n<p>This metric includes CPU cores requested for containers that are no longer running. To see CPU cores requested from only running containers, filter for <code>status = &#39;Running&#39;</code>, or refer to the metric <a href=\"/attribute-dictionary/?event=K8sContainerSample&attribute=cpuRequestedCores\"><code>cpuRequestedCores</code> from the <code>K8sContainerSample</code> data type</a>. </p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "cpuRequestedCores",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Node CPU usage measured in core milliseconds.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "cpuUsedCoreMilliseconds",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>Node CPU usage measured in cores.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "cpuUsedCores",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Bytes available in the node filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "fsAvailableBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Total capacity of the node filesystem in bytes.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "fsCapacityBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Percentage of used bytes in the node filesystem with respect to the capacity.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "fsCapacityUtilization",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>Total number of inodes in the node filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "fsInodes",
        "units": null
      },
      {
        "definition": "<p>Free inodes in the node filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "fsInodesFree",
        "units": null
      },
      {
        "definition": "<p>Used inodes in the node filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "fsInodesUsed",
        "units": null
      },
      {
        "definition": "<p>Used bytes in the node filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "fsUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Labels associated with your node, so you can filter and query for specific nodes. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Bytes of memory available in the node.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "memoryAvailableBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Number of major page faults per second in the node.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "memoryMajorPageFaultsPerSecond",
        "units": null
      },
      {
        "definition": "<p>Number of page faults in the node.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "memoryPageFaults",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Total amount of requested memory.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "memoryRequestedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Bytes of rss memory.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "memoryRssBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Bytes of memory used.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "memoryUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Bytes of memory in the working set.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "memoryWorkingSetBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Number of errors per second while receiving/transmitting over the network.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "net.errorCountPerSecond",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of bytes per second received over the network.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "net.rxBytesPerSecond",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Number of bytes per second transmitted over the network.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "net.txBytesPerSecond",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Host name that the pod is running on.</p>\n",
        "events": [
          "K8sContainerSample",
          "K8sNodeSample",
          "K8sPodSample"
        ],
        "name": "nodeName",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Bytes available to the container runtime filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "runtimeAvailableBytes",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Total capacity assigned to the container runtime filesystem in bytes.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "runtimeCapacityBytes",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Total number of inodes in the container runtime filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "runtimeInodes",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Free inodes in the container runtime filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "runtimeInodesFree",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Used inodes in the container runtime filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "runtimeInodesUsed",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Used bytes in the container runtime filesystem.</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "runtimeUsedBytes",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Status of node schedulability of new pods. Its value can be <code>0</code> (false) or <code>1</code> (true).</p>\n",
        "events": [
          "K8sNodeSample"
        ],
        "name": "unschedulable",
        "units": {
          "label": "count"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes node data.</p>\n",
    "name": "K8sNodeSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the pod was created in epoch seconds.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>Name of the Kubernetes object that created the pod, for example, <code>newrelic-infra</code>.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "createdBy",
        "units": null
      },
      {
        "definition": "<p>Kind of Kubernetes object that created the pod, for example, <code>DaemonSet</code>.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "createdKind",
        "units": null
      },
      {
        "definition": "<p>Name of the DaemonSet the Pod is associated with.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "daemonsetName",
        "units": null
      },
      {
        "definition": "<p>Name of the deployment to be used as an identifier.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "deploymentName",
        "units": null
      },
      {
        "definition": "<p>Boolean representing whether or not the pod is ready to serve requests.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "isReady",
        "units": null
      },
      {
        "definition": "<p>Boolean representing whether or not the pod has been scheduled to run on a node.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "isScheduled",
        "units": null
      },
      {
        "definition": "<p>Name of the Job the Pod is associated with.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "jobName",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your pod, so you can filter and query for specific pods. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Details related to the last pod status change.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "message",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the pod belongs to.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>Number of errors per second while receiving/transmitting over the network.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "net.errorCountPerSecond",
        "units": {
          "label": "second (s)"
        }
      },
      {
        "definition": "<p>Number of errors per second.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "net.errorsPerSecond",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Number of bytes per second received over the network.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "net.rxBytesPerSecond",
        "units": null
      },
      {
        "definition": "<p>Number of bytes per second transmitted over the network.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "net.txBytesPerSecond",
        "units": null
      },
      {
        "definition": "<p>Host IP address that the pod is running on.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "nodeIP",
        "units": null
      },
      {
        "definition": "<p>Host name that the pod is running on.</p>\n",
        "events": [
          "K8sContainerSample",
          "K8sNodeSample",
          "K8sPodSample"
        ],
        "name": "nodeName",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>IP address of the pod. If it doesn&#39;t have an IP, it&#39;ll be empty.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "podIP",
        "units": null
      },
      {
        "definition": "<p>Name of the pod to be used as an identifier.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "podName",
        "units": null
      },
      {
        "definition": "<p>Reason why the pod is in the current status.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "reason",
        "units": null
      },
      {
        "definition": "<p>Name of the ReplicaSet the Pod is associated with.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "replicasetName",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the pod started running in epoch seconds.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "startTime",
        "units": null
      },
      {
        "definition": "<p>Name of the StatefulSet the Pod is associated with.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "statefulsetName",
        "units": null
      },
      {
        "definition": "<p>Current status of the pod. Value can be <code>Pending</code>, <code>Running</code>, <code>Succeeded</code>, <code>Failed</code>, <code>Unknown</code>.</p>\n",
        "events": [
          "K8sPodSample"
        ],
        "name": "status",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes pod data.</p>\n",
    "name": "K8sPodSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the ReplicaSet was created.</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>Name of the deployment to be used as an identifier.</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "deploymentName",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the ReplicaSet belongs to.</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>Integer representing generation observed by the ReplicaSet.</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "observedGeneration",
        "units": null
      },
      {
        "definition": "<p>Number of replicas that you defined in the deployment.</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "podsDesired",
        "units": null
      },
      {
        "definition": "<p>Number of pods that have labels that match the ReplicaSet pod template labels.</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "podsFullyLabeled",
        "units": null
      },
      {
        "definition": "<p>Total number of replicas that are currently missing (number of desired replicas, podsDesired, minus the number of ready replicas, podsReady).</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "podsMissing",
        "units": null
      },
      {
        "definition": "<p>Number of replicas that are ready for this ReplicaSet.</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "podsReady",
        "units": null
      },
      {
        "definition": "<p>Total number of replicas that are currently running.</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "podsTotal",
        "units": null
      },
      {
        "definition": "<p>Name of the ReplicaSet to be used as an identifier.</p>\n",
        "events": [
          "K8sReplicasetSample"
        ],
        "name": "replicasetName",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes <code>ReplicaSet</code> data.</p>\n",
    "name": "K8sReplicasetSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Number of goroutines that currently exist.</p>\n",
        "events": [
          "K8sApiServerSample",
          "K8sControllerManagerSample",
          "K8sEtcdSample",
          "K8sSchedulerSample"
        ],
        "name": "goGoroutines",
        "units": null
      },
      {
        "definition": "<p>Number of OS threads created.</p>\n",
        "events": [
          "K8sApiServerSample",
          "K8sControllerManagerSample",
          "K8sEtcdSample",
          "K8sSchedulerSample"
        ],
        "name": "goThreads",
        "units": null
      },
      {
        "definition": "<p>The number of observed HTTP requests events.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "httpRequestDurationMicroseconds_handler_HANDLER_count",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The HTTP request latencies in microseconds, per quantile.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "httpRequestDurationMicroseconds_handler_HANDLER_quantile_QUANTILE",
        "units": null
      },
      {
        "definition": "<p>The sum of the HTTP request latencies, in microseconds.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "httpRequestDurationMicroseconds_handler_HANDLER_sum",
        "units": null
      },
      {
        "definition": "<p>Gauge of if the reporting system is master of the relevant lease, <code>0</code> indicates <code>backup</code>, <code>1</code> indicates <code>master</code>.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "leaderElectionMasterStatus",
        "units": null
      },
      {
        "definition": "<p>Difference of the user and system CPU time spent in seconds.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "processCpuSecondsDelta",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Percentage open file descriptors with respect to the maximum number that can be opened.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "processFdsUtilization",
        "units": null
      },
      {
        "definition": "<p>Maximum number of open file descriptors.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "processMaxFds",
        "units": null
      },
      {
        "definition": "<p>Number of open file descriptors.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "processOpenFds",
        "units": null
      },
      {
        "definition": "<p>Resident memory size, in bytes.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "processResidentMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Difference of the number of HTTP requests, partitioned by status code, method, and host.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "restClientRequestsDelta_code_CODE_host_HOST_method_METHOD",
        "units": null
      },
      {
        "definition": "<p>Rate of the number of HTTP requests, partitioned by status code, method, and host.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "restClientRequestsRate_code_CODE_host_HOST_method_METHOD",
        "units": null
      },
      {
        "definition": "<p>Number of pending pods in the active queue (requires k8s v1.23+).</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerPendingPodsActive",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of pending pods in the backoff queue (requires k8s v1.23+).</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerPendingPodsBackoff",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of pending pods in the unschedulable queue (requires k8s v1.23+).</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerPendingPodsUnschedulable",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of selected preemption victims.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerPodPreemptionVictims",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Difference of the total preemption attempts in the cluster until now.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerPreemptionAttemptsDelta",
        "units": null
      },
      {
        "definition": "<p>Difference of the number of attempts to schedule pods, by the result. <code>unschedulable</code> means a pod could not be scheduled, while <code>error</code> means an internal scheduler problem.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerScheduleAttemptsDelta_result_RESULT",
        "units": null
      },
      {
        "definition": "<p>Rate of the number of attempts to schedule pods, by the result. <code>unschedulable</code> means a pod could not be scheduled, while <code>error</code> means an internal scheduler problem.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerScheduleAttemptsRate_result_RESULT",
        "units": null
      },
      {
        "definition": "<p>The number of observed events of schedulings split by sub-parts of the scheduling operation.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerSchedulingDurationSeconds_operation_OPERATION_count",
        "units": null
      },
      {
        "definition": "<p>Scheduling latency in seconds split by sub-parts of the scheduling operation.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerSchedulingDurationSeconds_operation_OPERATION_quantile_QUANTILE",
        "units": null
      },
      {
        "definition": "<p>The sum of scheduling latency in seconds split by sub-parts of the scheduling operation.</p>\n",
        "events": [
          "K8sSchedulerSample"
        ],
        "name": "schedulerSchedulingDurationSeconds_operation_OPERATION_sum",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes scheduler data.</p>\n",
    "name": "K8sSchedulerSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>The internal cluster IP, if <code>Spectype</code> is <code>ClusterIP</code>.</p>\n",
        "events": [
          "K8sServiceSample"
        ],
        "name": "clusterIP",
        "units": null
      },
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the service was created.</p>\n",
        "events": [
          "K8sServiceSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>The external name value, if <code>Spectype</code> is <code>ExternalName</code>.</p>\n",
        "events": [
          "K8sServiceSample"
        ],
        "name": "externalName",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your service, so you can filter and query for specific service. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sServiceSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>The IP of the external load balancer, if <code>Spectype</code> is <code>LoadBalancer</code>.</p>\n",
        "events": [
          "K8sServiceSample"
        ],
        "name": "loadBalancerIP",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the service belongs to.</p>\n",
        "events": [
          "K8sServiceSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>The label selector that this service targets.</p>\n",
        "events": [
          "K8sServiceSample"
        ],
        "name": "selector.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Name associated with the service.</p>\n",
        "events": [
          "K8sServiceSample"
        ],
        "name": "serviceName",
        "units": null
      },
      {
        "definition": "<p>Type of the service.</p>\n",
        "events": [
          "K8sServiceSample"
        ],
        "name": "specType",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes service data.</p>\n",
    "name": "K8sServiceSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Name that you assigned to the cluster when you installed the Kubernetes integration.</p>\n",
        "events": [
          "K8sClusterSample",
          "K8sDaemonsetSample",
          "K8sDeploymentSample",
          "K8sEndpointSample",
          "K8sHpaSample",
          "K8sNamespaceSample",
          "K8sPodSample",
          "K8sReplicasetSample",
          "K8sServiceSample",
          "K8sStatefulsetSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Timestamp of when the <code>StatefulSet</code> was created.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "createdAt",
        "units": null
      },
      {
        "definition": "<p>Indicates the version of the <code>StatefulSet</code> used to generate pods in the sequence. Value range: between <code>0</code> and <code>podsCurrent</code>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "currentRevision",
        "units": null
      },
      {
        "definition": "<p>Labels associated with your <code>StatefulSet</code>, so you can filter and query for specific <code>StatefulSet</code>. By default they are not collected, so you need to enable them in the KSM chart by configuring the <a href=\"https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml#L291-L298\">metricLabelsAllowlist</a>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "label.LABEL_NAME",
        "units": null
      },
      {
        "definition": "<p>Sequence number representing a specific generation of the desired state for the <code>StatefulSet</code>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "metadataGeneration",
        "units": null
      },
      {
        "definition": "<p>Name of the namespace that the <code>StatefulSet</code> belongs to.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>The generation observed by the <code>StatefulSet</code> controller.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "observedGeneration",
        "units": null
      },
      {
        "definition": "<p>The number of current replicas per <code>StatefulSet</code>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "podsCurrent",
        "units": null
      },
      {
        "definition": "<p>Number of desired pods for a <code>StatefulSet</code>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "podsDesired",
        "units": null
      },
      {
        "definition": "<p>Total number of replicas that are currently missing (number of desired replicas, podsDesired, minus the number of ready replicas, podsReady).</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "podsMissing",
        "units": null
      },
      {
        "definition": "<p>The number of ready replicas per <code>StatefulSet</code>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "podsReady",
        "units": null
      },
      {
        "definition": "<p>The number of replicas per <code>StatefulSet</code>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "podsTotal",
        "units": null
      },
      {
        "definition": "<p>The number of updated replicas per <code>StatefulSet</code>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "podsUpdated",
        "units": null
      },
      {
        "definition": "<p>Name associated with the <code>StatefulSet</code>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "statefulsetName",
        "units": null
      },
      {
        "definition": "<p>Indicates the version of the StatefulSet used to generate pods in the sequence. Value range: between <code>podsDesired-podsUpdated</code> and <code>podsDesired</code>.</p>\n",
        "events": [
          "K8sStatefulsetSample"
        ],
        "name": "updateRevision",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes <code>StatefulSet</code> data.</p>\n",
    "name": "K8sStatefulsetSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Cluster where the volume is configured.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "clusterName",
        "units": null
      },
      {
        "definition": "<p>Capacity available of the volume, in bytes.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "fsAvailableBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Capacity of the volume, in bytes.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "fsCapacityBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Total inodes of the volume.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "fsInodes",
        "units": null
      },
      {
        "definition": "<p>inodes available in the volume.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "fsInodesFree",
        "units": null
      },
      {
        "definition": "<p>inodes used in the volume.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "fsInodesUsed",
        "units": null
      },
      {
        "definition": "<p>Usage of the volume, in bytes.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "fsUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Usage of the volume in percentage.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "fsUsedPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>Namespace where the volume is configured.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "namespaceName",
        "units": null
      },
      {
        "definition": "<p>If this is a persistent volume, this value is set to <code>true</code>.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "persistent",
        "units": null
      },
      {
        "definition": "<p>The pod that the volume is attached to. The Kubernetes monitoring integration lists volumes that are attached to a pod.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "podName",
        "units": null
      },
      {
        "definition": "<p>Name that you assigned to the Persistent Volume Claim at creation.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "pvcName",
        "units": null
      },
      {
        "definition": "<p>Namespace where the Persistent Volume Claim is configured.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "pvcNamespace",
        "units": null
      },
      {
        "definition": "<p>Name that you assigned to the volume at creation.</p>\n",
        "events": [
          "K8sVolumeSample"
        ],
        "name": "volumeName",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Kubernetes"
      }
    ],
    "definition": "<p>This event contains Kubernetes volume data.</p>\n",
    "name": "K8sVolumeSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>The ID of the <code>LlmChatCompletionSummary</code> event that a message event is connected to. </p>\n",
        "events": [
          "LlmChatCompletionMessage"
        ],
        "name": "completion_id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A string value that describes the contents of a message.</p>\n",
        "events": [
          "LlmChatCompletionMessage"
        ],
        "name": "content",
        "units": null
      },
      {
        "definition": "<p>An agent-generated identifier for the event.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the APM agent that collected the data.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "ingest_source",
        "units": null
      },
      {
        "definition": "<p>Boolean set to <code>True</code> if a message is the result of a chat completion. The attribute is omitted if <code>False</code>, like in cases where the message is the result of an input. </p>\n",
        "events": [
          "LlmChatCompletionMessage"
        ],
        "name": "is_response",
        "units": {
          "label": "Boolean"
        }
      },
      {
        "definition": "<p>The model that returned the response. May or may not match the value for <code>request.model</code>. </p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "response.model",
        "units": null
      },
      {
        "definition": "<p>A string value that describes the source of the message. This varies depending on the LLM vendor, but could have values that represent prompt engineering, the user, or a response from the LLM itself. </p>\n",
        "events": [
          "LlmChatCompletionMessage"
        ],
        "name": "role",
        "units": null
      },
      {
        "definition": "<p>An index associated with each message, including the prompt and responses. Begins at 0. </p>\n",
        "events": [
          "LlmChatCompletionMessage"
        ],
        "name": "sequence",
        "units": null
      },
      {
        "definition": "<p>The identifier for the span. </p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "span_id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The integer value returned from <code>llm_token_count_callback</code>. Omitted if no value is returned.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmEmbedding"
        ],
        "name": "token_count",
        "units": null
      },
      {
        "definition": "<p>The identifier for the trace. </p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "trace_id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the vendor that provided the model.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "vendor",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "APM"
      }
    ],
    "definition": "<p>An event that corresponds to each message (sent and received) from a chat completion call. These messages include those created by the user, assistant, and system.</p>\n",
    "name": "LlmChatCompletionMessage"
  },
  {
    "attributes": [
      {
        "definition": "<p>Total time for the chat or embedding call to complete. </p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "duration",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>If the agent detects an error during the creation call, it sets the value to <code>True</code>. Omitted if the agent doesn&#39;t detect an error. </p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "error",
        "units": {
          "label": "Boolean"
        }
      },
      {
        "definition": "<p>An agent-generated identifier for the event.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the APM agent that collected the data.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "ingest_source",
        "units": null
      },
      {
        "definition": "<p>An integer value for the maximum number of tokens that can be generated during a chat completion. The value is typically set from a hardcoded configuration. </p>\n",
        "events": [
          "LlmChatCompletionSummary"
        ],
        "name": "request.max_tokens",
        "units": null
      },
      {
        "definition": "<p>The model that processed the request. May or may not match the value for <code>response.model.</code></p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "request.model",
        "units": null
      },
      {
        "definition": "<p>An integer value that represents how random or deterministic an output response should be. The threshold for random and deterministic values can vary with vendor and model, but more deterministic responses will be closer to 0. If the number is higher, then it is more random. </p>\n",
        "events": [
          "LlmChatCompletionSummary"
        ],
        "name": "request.temperature",
        "units": null
      },
      {
        "definition": "<p>The ID associated with the request, which is typically available in the response headers.</p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "request_id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A string value containing the reason a model stopped generating tokens. </p>\n",
        "events": [
          "LlmChatCompletionSummary"
        ],
        "name": "response.choices.finish_reason",
        "units": null
      },
      {
        "definition": "<p>The model that returned the response. May or may not match the value for <code>request.model</code>. </p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "response.model",
        "units": null
      },
      {
        "definition": "<p>An integer value for the number of messages in a completed chat exchange. This includes messages from the system, user, and AI assistant</p>\n",
        "events": [
          "LlmChatCompletionSummary"
        ],
        "name": "response.number_of_messages",
        "units": null
      },
      {
        "definition": "<p>The unique identifier for your organization that can be used in API requests. </p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "response.organization",
        "units": null
      },
      {
        "definition": "<p>The identifier for the span. </p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "span_id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The identifier for the trace. </p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "trace_id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the vendor that provided the model.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "vendor",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "APM"
      }
    ],
    "definition": "<p>An event that captures high level data about the creation of a chat completion for request and response messages.  </p>\n",
    "name": "LlmChatCompletionSummary"
  },
  {
    "attributes": [
      {
        "definition": "<p>Total time for the chat or embedding call to complete. </p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "duration",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>If the agent detects an error during the creation call, it sets the value to <code>True</code>. Omitted if the agent doesn&#39;t detect an error. </p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "error",
        "units": {
          "label": "Boolean"
        }
      },
      {
        "definition": "<p>An agent-generated identifier for the event.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the APM agent that collected the data.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "ingest_source",
        "units": null
      },
      {
        "definition": "<p>The text string passed to the embedding creation call.</p>\n",
        "events": [
          "LlmEmbedding"
        ],
        "name": "input",
        "units": null
      },
      {
        "definition": "<p>The model that processed the request. May or may not match the value for <code>response.model.</code></p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "request.model",
        "units": null
      },
      {
        "definition": "<p>The ID associated with the request, which is typically available in the response headers.</p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "request_id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The model that returned the response. May or may not match the value for <code>request.model</code>. </p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "response.model",
        "units": null
      },
      {
        "definition": "<p>The unique identifier for your organization that can be used in API requests. </p>\n",
        "events": [
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "response.organization",
        "units": null
      },
      {
        "definition": "<p>The identifier for the span. </p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "span_id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The integer value returned from <code>llm_token_count_callback</code>. Omitted if no value is returned.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmEmbedding"
        ],
        "name": "token_count",
        "units": null
      },
      {
        "definition": "<p>The identifier for the trace. </p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "trace_id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the vendor that provided the model.</p>\n",
        "events": [
          "LlmChatCompletionMessage",
          "LlmChatCompletionSummary",
          "LlmEmbedding"
        ],
        "name": "vendor",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "APM"
      }
    ],
    "definition": "<p>An event that captures data specific to the creation of an embedding. </p>\n",
    "name": "LlmEmbedding"
  },
  {
    "attributes": [
      {
        "definition": "<p>The end of the time range associated with the metric, in Unix time, in milliseconds. This is calculated by adding the metric interval to the timestamp of the metric (timestamp + interval.ms).</p>\n",
        "events": [
          "Metric"
        ],
        "name": "endTimestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The length of the time window.</p>\n",
        "events": [
          "Metric"
        ],
        "name": "interval.ms",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>Name of the metric.</p>\n",
        "events": [
          "Metric"
        ],
        "name": "metricName",
        "units": null
      },
      {
        "definition": "<p>The source of this data. For example: metricAPI.</p>\n",
        "events": [
          "Metric"
        ],
        "name": "newrelic.source",
        "units": null
      },
      {
        "definition": "<p>The start time for the metric, in Unix time.</p>\n",
        "events": [
          "Metric"
        ],
        "name": "timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Metrics"
      }
    ],
    "definition": "<p>Represents a metric data point (a measurement over a range of time, or a sample at a specific point in time) with multiple attributes attached, which allow for in-depth analysis and querying. This metric data comes from our Metric API, our Telemetry SDKs, network performance monitoring, and some of our open-source exporters/integrations.</p>\n",
    "name": "Metric"
  },
  {
    "attributes": [
      {
        "definition": "<p>The network over which the app transferred data, such as Wi-Fi, Verizon, or Sprint.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "carrier",
        "units": null
      },
      {
        "definition": "<p>The type of data: session, crash, or interaction.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileSession"
        ],
        "name": "category",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the device ran the application. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The specific type of the device: iPhone 8, iPad Pro, etc. Duplicate of <code>deviceType</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "device",
        "units": null
      },
      {
        "definition": "<p>The category of the device, such as iPhone or Tablet.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceGroup",
        "units": null
      },
      {
        "definition": "<p>The manufacturer of the device, such as Motorola or HTC.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceManufacturer",
        "units": null
      },
      {
        "definition": "<p>The model number of the device, such as XT1039 or SM-G900F.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceModel",
        "units": null
      },
      {
        "definition": "<p>The device&#39;s name.</p>\n",
        "events": [
          "Mobile",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceName",
        "units": null
      },
      {
        "definition": "<p>The specific type of device: iPhone 8, iPad Pro, etc. Duplicate of <code>device</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned at the time of app installation by New Relic. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Duplicate of <code>uuid</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>For interaction category events only.</p>\n<p>An iOS interaction starts automatically when a view controller&#39;s <code>viewDidLoad</code> or <code>viewDidAppear</code> method is called, which will terminate any active interactions. An Android interaction starts when an activity or fragment&#39;s <code>onCreate</code> method is called.</p>\n<p>A &quot;healthy&quot; interaction trace ends itself after .5 seconds of inactivity, where inactivity is defined by a lack of instrumented method calls. If there is never .5 seconds of inactivity, the trace will terminate after one minute.</p>\n<p>An interaction does not end when the view/activity is done loading. As long as there is activity from an instrumented class/method, the interaction will stay open. This means async tasks or <code>dispatch_async</code> calls that run after the view/activity ends will increase the duration of the interaction.</p>\n",
        "events": [
          "Mobile"
        ],
        "name": "interactionDuration",
        "units": null
      },
      {
        "definition": "<p>The last interaction before a crash or harvest event, if one is present.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "lastInteraction",
        "units": null
      },
      {
        "definition": "<p>For interaction category events only. This is the label of the interaction associated with the event. It is by default assigned by New Relic. For example: ApplicationsListFragment or Display iOS_Example.MasterViewController.</p>\n",
        "events": [
          "Mobile"
        ],
        "name": "name",
        "units": null
      },
      {
        "definition": "<p>For Android only. The specific build of the Android OS.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException"
        ],
        "name": "osBuild",
        "units": null
      },
      {
        "definition": "<p>The specific region within a country where the monitored app is located. In the United States, regions are states. The regionCode is based on IP address and may not always match your region.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>The UTC based timestamp for when the event was sent to New Relic. This is different from the attribute ‘timestamp’, which is when the event began.</p>\n",
        "events": [
          "Mobile"
        ],
        "name": "reportedTimestampMs",
        "units": {
          "label": "milliseconds(ms)"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the beginning of the mobile session to the time the event occurred.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timeSinceLoad",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The UTC epoch time at which an event began.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timestamp",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Mobile"
      }
    ],
    "definition": "<p>A Mobile event is created when a crash occurs, when an interaction ends, or when the harvest cycle is triggered. The harvest cycle typically occurs every 600 seconds (10 minutes), but this can vary depending on the app&#39;s activity. Events are created during the session and reported when event harvest cycle has ended. Recommendation: Upgrade to the most recent mobile monitoring agent version to take full advantage of the new event types.</p>\n",
    "name": "Mobile"
  },
  {
    "attributes": [
      {
        "definition": "<p>Indicates the technical build number of the app binary. As a developer, you can use this attribute to identify specific builds of your app.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appBuild",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier for a monitored app, based on the app token. For example: 35091.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the monitored app. For example: My Mobile App - iOS.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>The perceptible state of the app (foreground versus background) based on interpretation of the returned <code>importance</code> field.</p>\n",
        "events": [
          "MobileApplicationExit"
        ],
        "name": "appState",
        "units": null
      },
      {
        "definition": "<p>The version number of the monitored app. For example: 2.2.9.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersion",
        "units": null
      },
      {
        "definition": "<p>An internal identifier New Relic uses to order lists of multiple instances of app versions (<code>appVersion</code>).</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The processor architecture of the device. For example: armv7 or arm64.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash"
        ],
        "name": "architecture",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The telecom owner of the ASN.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "asnOwner",
        "units": null
      },
      {
        "definition": "<p>The network over which the app transferred data, such as Wi-Fi, Verizon, or Sprint.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "carrier",
        "units": null
      },
      {
        "definition": "<p>The type of data: session, crash, or interaction.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileSession"
        ],
        "name": "category",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the device ran the application. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The human-readable description of the process&#39;s death, given by Android runtime. This could be null.</p>\n<p>Note: Android provides no guarantees that the format is stable across devices or Android releases.</p>\n",
        "events": [
          "MobileApplicationExit"
        ],
        "name": "description",
        "units": null
      },
      {
        "definition": "<p>The specific type of the device: iPhone 8, iPad Pro, etc. Duplicate of <code>deviceType</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "device",
        "units": null
      },
      {
        "definition": "<p>The category of the device, such as iPhone or Tablet.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceGroup",
        "units": null
      },
      {
        "definition": "<p>The manufacturer of the device, such as Motorola or HTC.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceManufacturer",
        "units": null
      },
      {
        "definition": "<p>The model number of the device, such as XT1039 or SM-G900F.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceModel",
        "units": null
      },
      {
        "definition": "<p>The specific type of device: iPhone 8, iPad Pro, etc. Duplicate of <code>device</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned at the time of app installation by New Relic. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Duplicate of <code>uuid</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>This is the recorded process time of death, in milliseconds as returned by <code>System.currentTimeMillis()</code>.</p>\n",
        "events": [
          "MobileApplicationExit"
        ],
        "name": "exitTimestamp",
        "units": null
      },
      {
        "definition": "<p>The relative priority of the process at termination.</p>\n",
        "events": [
          "MobileApplicationExit"
        ],
        "name": "importance",
        "units": null
      },
      {
        "definition": "<p>The last interaction before a crash or harvest event, if one is present.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "lastInteraction",
        "units": null
      },
      {
        "definition": "<p>The total amount of memory, in MB, used by the application. Updated every 60 seconds.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "memUsageMb",
        "units": {
          "label": "megabytes (MB)"
        }
      },
      {
        "definition": "<p>The New Relic agent running on the application. For example: the iOSAgent or the androidAgent. </p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileSession"
        ],
        "name": "newRelicAgent",
        "units": null
      },
      {
        "definition": "<p>The version number of the agent running on the application. For example: 4.232.0. Duplicate of <code>newRelicAgentVersion</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "newRelicVersion",
        "units": null
      },
      {
        "definition": "<p>For Android only. The specific build of the Android OS.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException"
        ],
        "name": "osBuild",
        "units": null
      },
      {
        "definition": "<p>The simplified version number of the app&#39;s host operating system, such as iOS 11, as compared to iOS 11.0.4.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osMajorVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the app&#39;s host operating system, for example, iOS or Android.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osName",
        "units": null
      },
      {
        "definition": "<p>The exact version number of the app&#39;s host operating system, such as iOS 11.0.4, as compared to iOS 11.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osVersion",
        "units": null
      },
      {
        "definition": "<p>The platform type of the mobile monitoring agent, such as native or Cordova.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "platform",
        "units": null
      },
      {
        "definition": "<p>The name of the process.</p>\n",
        "events": [
          "MobileApplicationExit"
        ],
        "name": "processName",
        "units": null
      },
      {
        "definition": "<p>The underlying reason for the application exit (numeric).</p>\n",
        "events": [
          "MobileApplicationExit"
        ],
        "name": "reason",
        "units": null
      },
      {
        "definition": "<p>The specific region within a country where the monitored app is located. In the United States, regions are states. The regionCode is based on IP address and may not always match your region.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>For Android only. The Android Runtime version where the exception/crash was generated.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException"
        ],
        "name": "runTime",
        "units": null
      },
      {
        "definition": "<p>The length of time for which the user used the application in seconds. If the session crashes, sessionDuration is not captured (although other events and attributes are still recorded).</p>\n<p>For sessions longer than the configured event harvest cycle, events in the Interaction and Custom event categories are sent to New Relic while the session is ongoing, and therefore do not have <code>sessionDuration</code> attributes, but they do have <code>timeSinceLoad</code> attributes. Events recorded near the end of the session may include the duration.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileSession"
        ],
        "name": "sessionDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>A unique identifier for a single user session. A new sessionId is created each time the app is brought into the foreground.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "sessionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the beginning of the mobile session to the time the event occurred.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timeSinceLoad",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The UTC epoch time at which an event began.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>Indictates previous version number only if this is the first launch after app upgrade.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileSession"
        ],
        "name": "upgradeFrom",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned by New Relic for a specific app on a particular device. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Dupliate of <code>deviceUuid</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "uuid",
        "units": {
          "label": "ID"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Mobile"
      }
    ],
    "definition": "<p>A <code>MobileApplicationExit</code> event is generated when an app terminates, either due to a crash or other reasons such as low memory, ANRs, etc. Currently, this event is reported only for Android mobile applications. It leverages Android’s <code>ApplicationExitInfo</code> API to monitor and report on the different reasons for your app’s termination.</p>\n<p>This event provides valuable insights into the circumstances surrounding the app&#39;s termination and includes attributes such as <code>reason</code>, <code>description</code>, etc. For example, to understand the different reasons for your app exit, you would look at the <code>reason</code> attribute. For all ANRs, the reason would be <code>6</code>, for crashes it would be <code>4</code>, and so on, as described in the <a href=\"https://developer.android.com/reference/android/app/ApplicationExitInfo\">Android documentation</a>. For a human readable description for your app exit, try looking at the <code>description</code> attribute.</p>\n",
    "name": "MobileApplicationExit"
  },
  {
    "attributes": [
      {
        "definition": "<p>Indicates the technical build number of the app binary. As a developer, you can use this attribute to identify specific builds of your app.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appBuild",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier for a monitored app, based on the app token. For example: 35091.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the monitored app. For example: My Mobile App - iOS.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>The version number of the monitored app. For example: 2.2.9.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersion",
        "units": null
      },
      {
        "definition": "<p>An internal identifier New Relic uses to order lists of multiple instances of app versions (<code>appVersion</code>).</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The processor architecture of the device. For example: armv7 or arm64.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash"
        ],
        "name": "architecture",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The telecom owner of the ASN.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "asnOwner",
        "units": null
      },
      {
        "definition": "<p>The unique string used to identify the application.</p>\n",
        "events": [
          "MobileCrash",
          "MobileSession"
        ],
        "name": "bundleId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The network over which the app transferred data, such as Wi-Fi, Verizon, or Sprint.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "carrier",
        "units": null
      },
      {
        "definition": "<p>The type of data: session, crash, or interaction.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileSession"
        ],
        "name": "category",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the device ran the application. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The exception associated with the crash, if one is present. For example: java.lang.NullPointerException.</p>\n<p>Native crashes exceptions are associated with <a href=\"https://github.com/newrelic/android-agent-ndk/blob/main/agent-ndk/src/main/java/com/newrelic/agent/android/ndk/NativeException.kt\">com.newrelic.agent.android.ndk.NativeException</a> classes.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "crashException",
        "units": null
      },
      {
        "definition": "<p>The New Relic-generated fingerprint used to uniquely identify the crash and other crashes identical to this one.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "crashFingerprint",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The crashing class, file name, method, and line number if the crash is symbolicated. If not symbolicated, a memory address within the application binary (iOS), or obfuscated class, method, and line number (Android). Platform specific algorithms are applied to the stack to determine the crashing frame.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "crashLocation",
        "units": null
      },
      {
        "definition": "<p>The class name in which the crash occurred. Requires symbolication.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "crashLocationClass",
        "units": null
      },
      {
        "definition": "<p>The file in which the crash occurred.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "crashLocationFile",
        "units": null
      },
      {
        "definition": "<p>The line number in which the crash occurred. Requires symbolication.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "crashLocationLineNumber",
        "units": null
      },
      {
        "definition": "<p>The method name in which the crash occurred. Requires symbolication.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "crashLocationMethod",
        "units": null
      },
      {
        "definition": "<p>The message associated with the crash, if one is present.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "crashMessage",
        "units": null
      },
      {
        "definition": "<p>The specific type of the device: iPhone 8, iPad Pro, etc. Duplicate of <code>deviceType</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "device",
        "units": null
      },
      {
        "definition": "<p>The category of the device, such as iPhone or Tablet.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceGroup",
        "units": null
      },
      {
        "definition": "<p>The manufacturer of the device, such as Motorola or HTC.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceManufacturer",
        "units": null
      },
      {
        "definition": "<p>The model number of the device, such as XT1039 or SM-G900F.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceModel",
        "units": null
      },
      {
        "definition": "<p>The device&#39;s name.</p>\n",
        "events": [
          "Mobile",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceName",
        "units": null
      },
      {
        "definition": "<p>The specific type of device: iPhone 8, iPad Pro, etc. Duplicate of <code>device</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned at the time of app installation by New Relic. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Duplicate of <code>uuid</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The root filesystem and the external filesystem space available, in bytes, separated by a comma. For example: 50491392,6523789312 or 0,1495339008.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "diskAvailable",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The client interactions with the application that led to the crash.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "interactionHistory",
        "units": null
      },
      {
        "definition": "<p>A boolean value indicating whether or not this was the first occurrence of the crash.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "isFirstOccurrence",
        "units": null
      },
      {
        "definition": "<p>The last interaction before a crash or harvest event, if one is present.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "lastInteraction",
        "units": null
      },
      {
        "definition": "<p>The total amount of memory, in MB, used by the application. Updated every 60 seconds.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "memUsageMb",
        "units": {
          "label": "megabytes (MB)"
        }
      },
      {
        "definition": "<p>The total amount of memory, in MB, used by the application. Updated every 60 seconds.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "memoryUsage",
        "units": {
          "label": "megabytes (MB)"
        }
      },
      {
        "definition": "<p>The model of the device. This is the same as the session-level deviceModel attribute.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "modelNumber",
        "units": null
      },
      {
        "definition": "<p>The type of network that the device was on at the time of crash, such as wifi or LTE.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "networkStatus",
        "units": null
      },
      {
        "definition": "<p>The version number of the agent running on the application. For example: 4.232.0. Duplicate of <code>newRelicAgentVersion</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "newRelicVersion",
        "units": null
      },
      {
        "definition": "<p>The ID for this instance of the crash.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "occurrenceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The orientation of the device, such as landscape or portrait.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "orientation",
        "units": null
      },
      {
        "definition": "<p>For Android only. The specific build of the Android OS.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException"
        ],
        "name": "osBuild",
        "units": null
      },
      {
        "definition": "<p>The simplified version number of the app&#39;s host operating system, such as iOS 11, as compared to iOS 11.0.4.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osMajorVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the app&#39;s host operating system, for example, iOS or Android.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osName",
        "units": null
      },
      {
        "definition": "<p>The exact version number of the app&#39;s host operating system, such as iOS 11.0.4, as compared to iOS 11.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osVersion",
        "units": null
      },
      {
        "definition": "<p>The parent process that launched the crashing process.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "parentProcess",
        "units": null
      },
      {
        "definition": "<p>The parent identification number (PID) of the parent process.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "parentProcessId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The platform type of the mobile monitoring agent, such as native or Cordova.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "platform",
        "units": null
      },
      {
        "definition": "<p>The PID of the previously running process on the device.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "processId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the previously running process.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "processName",
        "units": null
      },
      {
        "definition": "<p>The path to the binary.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "processPath",
        "units": null
      },
      {
        "definition": "<p>The specific region within a country where the monitored app is located. In the United States, regions are states. The regionCode is based on IP address and may not always match your region.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>The UTC timestamp for when the event was received by New Relic. (This is different from timestamp, which is when the MobileSession event began that crashed.)</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "reportedTimestampMs",
        "units": null
      },
      {
        "definition": "<p>For Android only. The Android Runtime version where the exception/crash was generated.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException"
        ],
        "name": "runTime",
        "units": null
      },
      {
        "definition": "<p>The size of the screen for the device, grouped into three categories: normal, large, xlarge.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "screenResolution",
        "units": null
      },
      {
        "definition": "<p>A boolean value indicating whether or not that session crashed.</p>\n",
        "events": [
          "MobileCrash",
          "MobileSession"
        ],
        "name": "sessionCrashed",
        "units": null
      },
      {
        "definition": "<p>A unique identifier for a single user session. A new sessionId is created each time the app is brought into the foreground.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "sessionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A boolean value indicating whether or not the crash was properly symbolicated.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "symbolicated",
        "units": null
      },
      {
        "definition": "<p>The time, in milliseconds, since the interaction before a crash event.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "timeSinceLastInteraction",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The UTC epoch time at which an event began.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The array of build UUIDs for applications and libraries.</p>\n",
        "events": [
          "MobileCrash"
        ],
        "name": "userImageUuids",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier assigned by New Relic for a specific app on a particular device. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Dupliate of <code>deviceUuid</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "uuid",
        "units": {
          "label": "ID"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Mobile"
      }
    ],
    "definition": "<p>The MobileCrash event is created when an app crashes. MobileCrash includes attributes such as crash line number, class, and crash message.</p>\n",
    "name": "MobileCrash"
  },
  {
    "attributes": [
      {
        "definition": "<p>Indicates the technical build number of the app binary. As a developer, you can use this attribute to identify specific builds of your app.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appBuild",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier for a monitored app, based on the app token. For example: 35091.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the monitored app. For example: My Mobile App - iOS.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>The version number of the monitored app. For example: 2.2.9.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersion",
        "units": null
      },
      {
        "definition": "<p>An internal identifier New Relic uses to order lists of multiple instances of app versions (<code>appVersion</code>).</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The telecom owner of the ASN.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "asnOwner",
        "units": null
      },
      {
        "definition": "<p>The network over which the app transferred data, such as Wi-Fi, Verizon, or Sprint.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "carrier",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the device ran the application. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The specific type of the device: iPhone 8, iPad Pro, etc. Duplicate of <code>deviceType</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "device",
        "units": null
      },
      {
        "definition": "<p>The category of the device, such as iPhone or Tablet.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceGroup",
        "units": null
      },
      {
        "definition": "<p>The manufacturer of the device, such as Motorola or HTC.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceManufacturer",
        "units": null
      },
      {
        "definition": "<p>The model number of the device, such as XT1039 or SM-G900F.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceModel",
        "units": null
      },
      {
        "definition": "<p>The device&#39;s name.</p>\n",
        "events": [
          "Mobile",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceName",
        "units": null
      },
      {
        "definition": "<p>The specific type of device: iPhone 8, iPad Pro, etc. Duplicate of <code>device</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned at the time of app installation by New Relic. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Duplicate of <code>uuid</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The build uuid of the application binary in which the exception was caught. </p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionAppBuildUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unsymbolicated, platform-specific cause of the exception.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionCause",
        "units": null
      },
      {
        "definition": "<p>New Relic defined location of an exception. Contains a combination of exception file name, class, line number, and method.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionLocation",
        "units": null
      },
      {
        "definition": "<p>The class that generated the exception. Only present if symbolication succeeded.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionLocationClass",
        "units": null
      },
      {
        "definition": "<p>The class that generated the exception. Only present if symbolication succeeded.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionLocationFile",
        "units": null
      },
      {
        "definition": "<p>For iOS agent only. The library offset of the library that generated the exception. Only present if symbolication succeeded. </p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionLocationLibraryOffset",
        "units": null
      },
      {
        "definition": "<p>Comes from the exception: The line number where the exception was generated. Only present if symbolication succeeded. </p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionLocationLine",
        "units": null
      },
      {
        "definition": "<p>The method that generated the exception. Only present if symbolication succeeded.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionLocationMethod",
        "units": null
      },
      {
        "definition": "<p>The unsymbolicated message from the exception. It can be user-generated or a generic system message. For Android, this is the Throwable message.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionMessage",
        "units": null
      },
      {
        "definition": "<p>The unsymbolicated exception type.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "exceptionName",
        "units": null
      },
      {
        "definition": "<p>The New Relic-generated identifier used to group like exceptions.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "fingerprint",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unique ID of the exception event.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "handledExceptionUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The last interaction before a crash or harvest event, if one is present.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "lastInteraction",
        "units": null
      },
      {
        "definition": "<p>For iOS agent only. The library name where the exception was generated. </p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "libraryName",
        "units": null
      },
      {
        "definition": "<p>For iOS agent only. The library start address where the exception was generated.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "libraryStartAddr",
        "units": null
      },
      {
        "definition": "<p>The total amount of memory, in MB, used by the application. Updated every 60 seconds.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "memUsageMb",
        "units": {
          "label": "megabytes (MB)"
        }
      },
      {
        "definition": "<p>The version number of the agent running on the application. For example: 4.232.0. Duplicate of <code>newRelicAgentVersion</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "newRelicVersion",
        "units": null
      },
      {
        "definition": "<p>Agent-reported epoch timestamp of the handled exception.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "occurrenceTimestamp",
        "units": null
      },
      {
        "definition": "<p>For Android only. The specific build of the Android OS.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException"
        ],
        "name": "osBuild",
        "units": null
      },
      {
        "definition": "<p>The simplified version number of the app&#39;s host operating system, such as iOS 11, as compared to iOS 11.0.4.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osMajorVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the app&#39;s host operating system, for example, iOS or Android.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osName",
        "units": null
      },
      {
        "definition": "<p>The exact version number of the app&#39;s host operating system, such as iOS 11.0.4, as compared to iOS 11.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osVersion",
        "units": null
      },
      {
        "definition": "<p>The platform type of the mobile monitoring agent, such as native or Cordova.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "platform",
        "units": null
      },
      {
        "definition": "<p>The specific region within a country where the monitored app is located. In the United States, regions are states. The regionCode is based on IP address and may not always match your region.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>For Android only. The Android Runtime version where the exception/crash was generated.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException"
        ],
        "name": "runTime",
        "units": null
      },
      {
        "definition": "<p>A unique identifier for a single user session. A new sessionId is created each time the app is brought into the foreground.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "sessionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the beginning of the mobile session to the time the event occurred.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timeSinceLoad",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Epoch timestamp of the handled exception. This exception timestamp represents the time New Relic created the event, if it&#39;s older than two days or some other unexpected time.</p>\n",
        "events": [
          "MobileHandledException"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned by New Relic for a specific app on a particular device. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Dupliate of <code>deviceUuid</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "uuid",
        "units": {
          "label": "ID"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Mobile"
      }
    ],
    "definition": "<p>MobileHandledException is sent when an exception is caught and is used for non-fatal exceptions reported to New Relic using the recordHandledException API for Android or iOS.</p>\n",
    "name": "MobileHandledException"
  },
  {
    "attributes": [
      {
        "definition": "<p>Indicates the technical build number of the app binary. As a developer, you can use this attribute to identify specific builds of your app.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appBuild",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier for a monitored app, based on the app token. For example: 35091.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the monitored app. For example: My Mobile App - iOS.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>The version number of the monitored app. For example: 2.2.9.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersion",
        "units": null
      },
      {
        "definition": "<p>An internal identifier New Relic uses to order lists of multiple instances of app versions (<code>appVersion</code>).</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The telecom owner of the ASN.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "asnOwner",
        "units": null
      },
      {
        "definition": "<p>Optional: If the application received a response from the requestUrl, the size of that response in bytes.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "bytesReceived",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Optional: If the application sent a request to the requestUrl, the size of that request in bytes.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "bytesSent",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The network over which the app transferred data, such as Wi-Fi, Verizon, or Sprint.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "carrier",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The type of connection which the device was using, such as 2G or 3G.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "connectionType",
        "units": null
      },
      {
        "definition": "<p>The country from which the device ran the application. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The specific type of the device: iPhone 8, iPad Pro, etc. Duplicate of <code>deviceType</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "device",
        "units": null
      },
      {
        "definition": "<p>The category of the device, such as iPhone or Tablet.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceGroup",
        "units": null
      },
      {
        "definition": "<p>The manufacturer of the device, such as Motorola or HTC.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceManufacturer",
        "units": null
      },
      {
        "definition": "<p>The model number of the device, such as XT1039 or SM-G900F.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceModel",
        "units": null
      },
      {
        "definition": "<p>The device&#39;s name.</p>\n",
        "events": [
          "Mobile",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceName",
        "units": null
      },
      {
        "definition": "<p>The display size of the device: Small, normal, large, xlarge.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "deviceSize",
        "units": null
      },
      {
        "definition": "<p>The specific type of device: iPhone 8, iPad Pro, etc. Duplicate of <code>device</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned at the time of app installation by New Relic. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Duplicate of <code>uuid</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Optional: The time to complete the request, measured in fractional seconds.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "duration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The unique identifier for the segment. This is equivalent to spanID in OpenTracing semantics.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError",
          "Span"
        ],
        "name": "guid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The last interaction before a crash or harvest event, if one is present.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "lastInteraction",
        "units": null
      },
      {
        "definition": "<p>The total amount of memory, in MB, used by the application. Updated every 60 seconds.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "memUsageMb",
        "units": {
          "label": "megabytes (MB)"
        }
      },
      {
        "definition": "<p>The version number of the agent running on the application. For example: 4.232.0. Duplicate of <code>newRelicAgentVersion</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "newRelicVersion",
        "units": null
      },
      {
        "definition": "<p>The simplified version number of the app&#39;s host operating system, such as iOS 11, as compared to iOS 11.0.4.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osMajorVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the app&#39;s host operating system, for example, iOS or Android.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osName",
        "units": null
      },
      {
        "definition": "<p>The exact version number of the app&#39;s host operating system, such as iOS 11.0.4, as compared to iOS 11.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osVersion",
        "units": null
      },
      {
        "definition": "<p>The platform type of the mobile monitoring agent, such as native or Cordova.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "platform",
        "units": null
      },
      {
        "definition": "<p>The specific region within a country where the monitored app is located. In the United States, regions are states. The regionCode is based on IP address and may not always match your region.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>The domain that the application attempted to access when the event occurred.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestDomain",
        "units": null
      },
      {
        "definition": "<p>The New Relic-generated identifier used to group like request events.</p>\n",
        "events": [
          "MobileRequest"
        ],
        "name": "requestFingerprint",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The REST method (GET, PUT, POST, etc.) that the application attempted when the event occurred.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestMethod",
        "units": null
      },
      {
        "definition": "<p>The path that the application attempted to access when the event occurred.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestPath",
        "units": null
      },
      {
        "definition": "<p>The URL that the application attempted to access when the event occurred.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestUrl",
        "units": null
      },
      {
        "definition": "<p>A unique identifer for the request event.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time between the request and the response in fractional seconds.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "responseTime",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>A unique identifier for a single user session. A new sessionId is created each time the app is brought into the foreground.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "sessionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Optional: The HTTP status code for the HTTP event.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "statusCode",
        "units": null
      },
      {
        "definition": "<p>The time, in seconds, from the beginning of the mobile session to the time the event occurred.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timeSinceLoad",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The UTC epoch time at which an event began.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "DistributedTraceSummary",
          "MobileRequest",
          "MobileRequestError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "trace.id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "MobileRequest",
          "MobileRequestError",
          "Span"
        ],
        "name": "traceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier assigned by New Relic for a specific app on a particular device. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Dupliate of <code>deviceUuid</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "uuid",
        "units": {
          "label": "ID"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Mobile"
      }
    ],
    "definition": "<p>A MobileRequest event is created when an HTTP request successfully completes, resulting in a response code below 400.</p>\n",
    "name": "MobileRequest"
  },
  {
    "attributes": [
      {
        "definition": "<p>Indicates the technical build number of the app binary. As a developer, you can use this attribute to identify specific builds of your app.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appBuild",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier for a monitored app, based on the app token. For example: 35091.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the monitored app. For example: My Mobile App - iOS.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>The version number of the monitored app. For example: 2.2.9.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersion",
        "units": null
      },
      {
        "definition": "<p>An internal identifier New Relic uses to order lists of multiple instances of app versions (<code>appVersion</code>).</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The telecom owner of the ASN.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "asnOwner",
        "units": null
      },
      {
        "definition": "<p>Optional: If the application received a response from the requestUrl, the size of that response in bytes.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "bytesReceived",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Optional: If the application sent a request to the requestUrl, the size of that request in bytes.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "bytesSent",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The network over which the app transferred data, such as Wi-Fi, Verizon, or Sprint.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "carrier",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The type of connection which the device was using, such as 2G or 3G.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "connectionType",
        "units": null
      },
      {
        "definition": "<p>The country from which the device ran the application. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The specific type of the device: iPhone 8, iPad Pro, etc. Duplicate of <code>deviceType</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "device",
        "units": null
      },
      {
        "definition": "<p>The category of the device, such as iPhone or Tablet.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceGroup",
        "units": null
      },
      {
        "definition": "<p>The manufacturer of the device, such as Motorola or HTC.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceManufacturer",
        "units": null
      },
      {
        "definition": "<p>The model number of the device, such as XT1039 or SM-G900F.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceModel",
        "units": null
      },
      {
        "definition": "<p>The device&#39;s name.</p>\n",
        "events": [
          "Mobile",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceName",
        "units": null
      },
      {
        "definition": "<p>The display size of the device: Small, normal, large, xlarge.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "deviceSize",
        "units": null
      },
      {
        "definition": "<p>The specific type of device: iPhone 8, iPad Pro, etc. Duplicate of <code>device</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned at the time of app installation by New Relic. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Duplicate of <code>uuid</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Optional: The time to complete the request, measured in fractional seconds.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "duration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Either HTTPError or NetworkFailure, depending on whether the error is a result of a failed request to a host or a failure on the cellular network.</p>\n",
        "events": [
          "MobileRequestError"
        ],
        "name": "errorType",
        "units": null
      },
      {
        "definition": "<p>The unique identifier for the segment. This is equivalent to spanID in OpenTracing semantics.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError",
          "Span"
        ],
        "name": "guid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The last interaction before a crash or harvest event, if one is present.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "lastInteraction",
        "units": null
      },
      {
        "definition": "<p>The total amount of memory, in MB, used by the application. Updated every 60 seconds.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "memUsageMb",
        "units": {
          "label": "megabytes (MB)"
        }
      },
      {
        "definition": "<p>The error message associated with the iOS NSURL Error code. See networkErrorCode for more information.</p>\n",
        "events": [
          "MobileRequestError"
        ],
        "name": "networkError",
        "units": null
      },
      {
        "definition": "<p>If the error is a network error, this is the iOS network error code. For Android applications, this is the mapped value.</p>\n",
        "events": [
          "MobileRequestError"
        ],
        "name": "networkErrorCode",
        "units": null
      },
      {
        "definition": "<p>The version number of the agent running on the application. For example: 4.232.0. Duplicate of <code>newRelicAgentVersion</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "newRelicVersion",
        "units": null
      },
      {
        "definition": "<p>The simplified version number of the app&#39;s host operating system, such as iOS 11, as compared to iOS 11.0.4.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osMajorVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the app&#39;s host operating system, for example, iOS or Android.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osName",
        "units": null
      },
      {
        "definition": "<p>The exact version number of the app&#39;s host operating system, such as iOS 11.0.4, as compared to iOS 11.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osVersion",
        "units": null
      },
      {
        "definition": "<p>The platform type of the mobile monitoring agent, such as native or Cordova.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "platform",
        "units": null
      },
      {
        "definition": "<p>The specific region within a country where the monitored app is located. In the United States, regions are states. The regionCode is based on IP address and may not always match your region.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>The domain that the application attempted to access when the event occurred.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestDomain",
        "units": null
      },
      {
        "definition": "<p>The New Relic-generated identifier used to group like request error events.</p>\n",
        "events": [
          "MobileRequestError"
        ],
        "name": "requestErrorFingerprint",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The REST method (GET, PUT, POST, etc.) that the application attempted when the event occurred.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestMethod",
        "units": null
      },
      {
        "definition": "<p>The path that the application attempted to access when the event occurred.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestPath",
        "units": null
      },
      {
        "definition": "<p>The URL that the application attempted to access when the event occurred.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestUrl",
        "units": null
      },
      {
        "definition": "<p>A unique identifer for the request event.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "requestUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Optional: The response that is sent from the requestDomain for the HTTP error, up to 4096 bytes.</p>\n",
        "events": [
          "MobileRequestError"
        ],
        "name": "responseBody",
        "units": null
      },
      {
        "definition": "<p>The time between the request and the response in fractional seconds.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "responseTime",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>A unique identifier for a single user session. A new sessionId is created each time the app is brought into the foreground.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "sessionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Optional: The HTTP status code for the HTTP event.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError"
        ],
        "name": "statusCode",
        "units": null
      },
      {
        "definition": "<p>The time, in seconds, from the beginning of the mobile session to the time the event occurred.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timeSinceLoad",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The UTC epoch time at which an event began.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "DistributedTraceSummary",
          "MobileRequest",
          "MobileRequestError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "trace.id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "MobileRequest",
          "MobileRequestError",
          "Span"
        ],
        "name": "traceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier assigned by New Relic for a specific app on a particular device. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Dupliate of <code>deviceUuid</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "uuid",
        "units": {
          "label": "ID"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Mobile"
      }
    ],
    "definition": "<p>A MobileRequestError is used for HTTP errors or network failures. HTTP errors are HTTP requests that have a status code greater than 400. A network failure is a HTTP request that results in no response. The event is sent when the HTTP request completes.</p>\n",
    "name": "MobileRequestError"
  },
  {
    "attributes": [
      {
        "definition": "<p>Indicates the technical build number of the app binary. As a developer, you can use this attribute to identify specific builds of your app.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appBuild",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique identifier for a monitored app, based on the app token. For example: 35091.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the monitored app. For example: My Mobile App - iOS.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>The version number of the monitored app. For example: 2.2.9.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersion",
        "units": null
      },
      {
        "definition": "<p>An internal identifier New Relic uses to order lists of multiple instances of app versions (<code>appVersion</code>).</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "appVersionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The telecom owner of the ASN.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "asnOwner",
        "units": null
      },
      {
        "definition": "<p>The unique string used to identify the application.</p>\n",
        "events": [
          "MobileCrash",
          "MobileSession"
        ],
        "name": "bundleId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The network over which the app transferred data, such as Wi-Fi, Verizon, or Sprint.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "carrier",
        "units": null
      },
      {
        "definition": "<p>The type of data: session, crash, or interaction.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileSession"
        ],
        "name": "category",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the device ran the application. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The specific type of the device: iPhone 8, iPad Pro, etc. Duplicate of <code>deviceType</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "device",
        "units": null
      },
      {
        "definition": "<p>The category of the device, such as iPhone or Tablet.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceGroup",
        "units": null
      },
      {
        "definition": "<p>The manufacturer of the device, such as Motorola or HTC.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceManufacturer",
        "units": null
      },
      {
        "definition": "<p>The model number of the device, such as XT1039 or SM-G900F.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceModel",
        "units": null
      },
      {
        "definition": "<p>The device&#39;s name.</p>\n",
        "events": [
          "Mobile",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceName",
        "units": null
      },
      {
        "definition": "<p>The specific type of device: iPhone 8, iPad Pro, etc. Duplicate of <code>device</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned at the time of app installation by New Relic. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Duplicate of <code>uuid</code>.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "deviceUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Indicates true only if the current session is the first session after app install.</p>\n",
        "events": [
          "MobileSession"
        ],
        "name": "install",
        "units": null
      },
      {
        "definition": "<p>The last interaction before a crash or harvest event, if one is present.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "lastInteraction",
        "units": null
      },
      {
        "definition": "<p>The total amount of memory, in MB, used by the application. Updated every 60 seconds.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "memUsageMb",
        "units": {
          "label": "megabytes (MB)"
        }
      },
      {
        "definition": "<p>The New Relic agent running on the application. For example: the iOSAgent or the androidAgent. </p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileSession"
        ],
        "name": "newRelicAgent",
        "units": null
      },
      {
        "definition": "<p>The version number of the agent running on the application. For example: 4.232.0. Duplicate of <code>newRelicAgentVersion</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "newRelicVersion",
        "units": null
      },
      {
        "definition": "<p>The simplified version number of the app&#39;s host operating system, such as iOS 11, as compared to iOS 11.0.4.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osMajorVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the app&#39;s host operating system, for example, iOS or Android.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osName",
        "units": null
      },
      {
        "definition": "<p>The exact version number of the app&#39;s host operating system, such as iOS 11.0.4, as compared to iOS 11.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "osVersion",
        "units": null
      },
      {
        "definition": "<p>The platform type of the mobile monitoring agent, such as native or Cordova.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "platform",
        "units": null
      },
      {
        "definition": "<p>The specific region within a country where the monitored app is located. In the United States, regions are states. The regionCode is based on IP address and may not always match your region.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>A boolean value indicating whether or not that session crashed.</p>\n",
        "events": [
          "MobileCrash",
          "MobileSession"
        ],
        "name": "sessionCrashed",
        "units": null
      },
      {
        "definition": "<p>The length of time for which the user used the application in seconds. If the session crashes, sessionDuration is not captured (although other events and attributes are still recorded).</p>\n<p>For sessions longer than the configured event harvest cycle, events in the Interaction and Custom event categories are sent to New Relic while the session is ongoing, and therefore do not have <code>sessionDuration</code> attributes, but they do have <code>timeSinceLoad</code> attributes. Events recorded near the end of the session may include the duration.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileSession"
        ],
        "name": "sessionDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>A unique identifier for a single user session. A new sessionId is created each time the app is brought into the foreground.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "sessionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time, in seconds, from the beginning of the mobile session to the time the event occurred.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timeSinceLoad",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The UTC epoch time at which an event began.</p>\n",
        "events": [
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>Indictates previous version number only if this is the first launch after app upgrade.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileSession"
        ],
        "name": "upgradeFrom",
        "units": null
      },
      {
        "definition": "<p>A unique identifier assigned by New Relic for a specific app on a particular device. It is only reset if a user deletes and then reinstalls the app. For example: B8B0BC30-0235-11E4-9191-0800200C9A66. Dupliate of <code>deviceUuid</code>.</p>\n",
        "events": [
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession"
        ],
        "name": "uuid",
        "units": {
          "label": "ID"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Mobile"
      }
    ],
    "definition": "<p>A MobileSession event is sent when an app is closed, backgrounded, or when 10 minutes of active use has elapsed. This is the source of the general session data used by the other mobile monitoring events. MobileSession captures attributes such as device type, device OS, and geographical information.</p>\n",
    "name": "MobileSession"
  },
  {
    "attributes": [
      {
        "definition": "<p>The name of the agent (Infrastructure).</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "agentName",
        "units": null
      },
      {
        "definition": "<p>The version of the New Relic Infrastructure agent.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "agentVersion",
        "units": null
      },
      {
        "definition": "<p>The number of times that alert conditions violated critical thresholds, causing critical violations and opening incidents. If this attribute does not exist on the sample, it has zero violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "criticalViolationCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>New Relic&#39;s unique ID number for the entity that is reporting data. This is used by New Relic to distinguish between customers and their entities.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "entityID",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The fully qualified (DNS) hostname.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "fullHostname",
        "units": null
      },
      {
        "definition": "<p>The unique hardware address of the interface.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "hardwareAddress",
        "units": null
      },
      {
        "definition": "<p>The short version of the entity&#39;s name.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "hostname",
        "units": null
      },
      {
        "definition": "<p>The interface name as reported by the operating system.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "interfaceName",
        "units": null
      },
      {
        "definition": "<p>The IP version 4 address.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "ipV4Address",
        "units": null
      },
      {
        "definition": "<p>The IP version 6 address.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "ipV6Address",
        "units": null
      },
      {
        "definition": "<p>The Linux kernel version, in string format.</p>\n<p>This attribute is available only for systems on a Linux platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "kernelVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the Linux distribution the server is using.</p>\n<p>This attribute is available only for systems on a Linux platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "linuxDistribution",
        "units": null
      },
      {
        "definition": "<p>The operating system on which the agent is installed.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "operatingSystem",
        "units": null
      },
      {
        "definition": "<p>The number of bytes per second received during the sampling period.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "receiveBytesPerSecond",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The number of received packets per second dropped during the sampling period.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "receiveDroppedPerSecond",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of receive errors per second on the interface during the sampling period.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "receiveErrorsPerSecond",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of packets per second (as defined by OS) received during the sampling period.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "receivePacketsPerSecond",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The state of the entity: either up or down.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "state",
        "units": null
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The number of bytes sent per second during the sampling period.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "transmitBytesPerSecond",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The number of dropped send packets per second during the sampling period.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "transmitDroppedPerSecond",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of send errors per second on the interface during the sampling period.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "transmitErrorsPerSecond",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of packets per second as defined by OS) sent during this sampling period.</p>\n",
        "events": [
          "NetworkSample"
        ],
        "name": "transmitPacketsPerSecond",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of times that alert conditions violated warning thresholds, causing warning violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "warningViolationCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The Windows family indicates whether the OS is a server or desktop targeted system.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsFamily",
        "units": null
      },
      {
        "definition": "<p>The full product name of the installed version of Windows.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsPlatform",
        "units": null
      },
      {
        "definition": "<p>The combined Windows version and build-number string of the OS.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsVersion",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Infrastructure"
      }
    ],
    "definition": "<p>NetworkSample event captures the descriptive and state information for each network device associated with a server. It includes the device&#39;s interface and address information, as well as current usage data. New Relic samples this data every 10 seconds for each attached network interface and packages it into a NetworkSample event, then sends the raw data to New Relic&#39;s collectors every 60 seconds.</p>\n",
    "name": "NetworkSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>The <a href=\"/docs/accounts/install-new-relic/account-setup/account-id/\">ID of the account</a> where the violation occurred.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "accountId",
        "units": null
      },
      {
        "definition": "<p>The active condition&#39;s aggregation window.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "aggregationDuration",
        "units": null
      },
      {
        "definition": "<p>If applicable, what caused the incident to close. Available values:</p>\n<ul>\n<li><code>CONDITION_DELETED</code>: condition deleted.</li>\n<li><code>CONDITION_DISABLED</code> condition disabled.</li>\n<li><code>CONDITION_MODIFIED</code> condition <a href=\"/docs/alerts-applied-intelligence/new-relic-alerts/alert-conditions/create-nrql-alert-conditions/#evaluation-resets\">edited</a></li>\n<li><code>EVALUATOR</code>: natural close because the metric has ceased to breach the threshold.</li>\n<li><code>EXPIRED</code>:  incident closed due to TTL.</li>\n<li><code>INCIDENT_WORKFLOW_INTEGRATION</code>: a third party closed the issue or incident through an API call.</li>\n<li><code>LABEL_BINDINGS_CHANGED </code>:  label was removed from the target, causing it to no longer be covered by the condition. This only applies to APM/Mobile/Browser/Infrastructure conditions.</li>\n<li><code>LOSS_OF_SIGNAL</code>: signal was lost, and incident was closed based on loss of signal settings.</li>\n<li><code>MAINTENANCE</code>: New Relic was performing maintenance and we closed the incident as part of it.</li>\n<li><code>POLICY_DELETED</code>: policy was deleted.</li>\n<li><code>TARGET_REMOVED</code>: the target was removed from the condition. </li>\n<li><code>USER</code>: closed manually by a user.</li>\n</ul>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "closeCause",
        "units": null
      },
      {
        "definition": "<p>The timestamp when the incident was closed.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIssue"
        ],
        "name": "closeTime",
        "units": null
      },
      {
        "definition": "<p>If true, open violations on the signal are closed if the signal is lost. Default is false. To use this field, an <code>expirationDuration</code> must be specified.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "closeViolationsOnExpiration",
        "units": null
      },
      {
        "definition": "<p>The ID of the condition that triggered the violation.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "conditionId",
        "units": null
      },
      {
        "definition": "<p>The name of the condition that triggered the violation.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "conditionName",
        "units": null
      },
      {
        "definition": "<p>The timestamp when the targeted metric started to breach the active condition’s threshold.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "degradationTime",
        "units": null
      },
      {
        "definition": "<p>The contents of the active condition’s <code>Violation Description</code> field. </p>\n<p>NRQL or Infrastructure conditions only.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "description",
        "units": null
      },
      {
        "definition": "<p>The GUID, assigned by New Relic, for the New Relic-monitored entity (host, application, etc.). This value is stored as a Base64 encoded value.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIncidentExternal",
          "NrAiSignal",
          "Span"
        ],
        "name": "entity.guid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The targeted entity&#39;s name, if available.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "entity.name",
        "units": null
      },
      {
        "definition": "<p>The targeted entity&#39;s type, if available.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "entity.type",
        "units": null
      },
      {
        "definition": "<p>The active condition&#39;s evaluation offset. A time delay (in seconds) to ensure data points are placed in the correct aggregation window.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "evaluationOffsetSeconds",
        "units": null
      },
      {
        "definition": "<p>The reason the violation was opened. Available values: </p>\n<ul>\n<li><code>threshold</code> (the condition threshold was breached)</li>\n<li><code>expiration</code> (the entity&#39;s signal was lost)</li>\n<li><code>anomaly</code> (an automatic anomaly was generated)</li>\n</ul>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "evaluationType",
        "units": null
      },
      {
        "definition": "<p>The record&#39;s event type.</p>\n<p>Available values: <code>open</code> and <code>close</code>.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "event",
        "units": null
      },
      {
        "definition": "<p>The active condition&#39;s signal loss time window.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "expirationDuration",
        "units": null
      },
      {
        "definition": "<p>The unique identifier of the violation.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "incidentId",
        "units": null
      },
      {
        "definition": "<p>Shows whether the active condition was muted at the time of the incident event.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIssue"
        ],
        "name": "muted",
        "units": null
      },
      {
        "definition": "<p>The unqiue identifier of the muting rule that caused the violation to be muted.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "mutingRuleId",
        "units": null
      },
      {
        "definition": "<p>The type of data targeted by a NRQL condition. In this context, this refers to any <a href=\"/docs/query-data/nrql-new-relic-query-language/getting-started/introduction-nrql#what-you-can-query\">NRQL-queryable data type</a>.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "nrqlEventType",
        "units": null
      },
      {
        "definition": "<p>The full string of the NRQL query. Can be used for sub-string matching on <a href=\"/docs/using-new-relic/welcome-new-relic/get-started/glossary#attribute\">attributes</a> in the <code>WHERE</code> clause.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "nrqlQuery",
        "units": null
      },
      {
        "definition": "<p>The timestamp when the violation was opened.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "openTime",
        "units": null
      },
      {
        "definition": "<p>The violation threshold&#39;s operator, such as <code>=</code>, <code>&lt;</code>, or <code>&gt;</code>.</p>\n<p>For signal loss violations, this is an empty string.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "operator",
        "units": null
      },
      {
        "definition": "<p>The ID of the policy that triggered the violation.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "policyId",
        "units": null
      },
      {
        "definition": "<p>The name of the policy that triggered the violation.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "policyName",
        "units": null
      },
      {
        "definition": "<p>The incident&#39;s priority: <code>low</code>, <code>medium</code>, <code>high</code>, or <code>critical</code>. Default: <code>high</code>.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIncidentExternal",
          "NrAiIssue"
        ],
        "name": "priority",
        "units": null
      },
      {
        "definition": "<p>The timestamp when the active condition&#39;s targeted metric stops breaching the threshold.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "recoveryTime",
        "units": null
      },
      {
        "definition": "<p>The runbook URL for the condition that triggered the violation.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "runbookUrl",
        "units": null
      },
      {
        "definition": "<p>Arbitrary key-value metadata, or tags, associated with the violation. <code>tags.</code> is the prefix and <code>*</code> is the metadata/tag name. For details on how to use this, see the documentation for <a href=\"/docs/alerts/new-relic-alerts/managing-notification-channels/muting-rules-suppress-notifications\">muting rules</a> or <a href=\"/docs/alerts/new-relic-alerts/defining-conditions/alert-condition-descriptions\">alerts condition descriptions</a>.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "tags.*",
        "units": null
      },
      {
        "definition": "<p>The name of the violation’s target. This can be an entity or a query.</p>\n<p>Available for muting rules.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "targetName",
        "units": null
      },
      {
        "definition": "<p>The active condition&#39;s threshold value.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "threshold",
        "units": null
      },
      {
        "definition": "<p>The active condition&#39;s threshold time window.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "thresholdDuration",
        "units": null
      },
      {
        "definition": "<p>Shows whether <code>for at least</code> or <code>at least once in</code> occurrence values are being used in the active condition&#39;s threshold. Available values: <code>all</code> or <code>any</code>.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "thresholdOccurrences",
        "units": null
      },
      {
        "definition": "<p>The event&#39;s wall clock time using an epoch timestamp.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The incident&#39;s title.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIssue"
        ],
        "name": "title",
        "units": null
      },
      {
        "definition": "<p>The incident&#39;s type.</p>\n<p>Available values: <code>Incident</code>.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "type",
        "units": null
      },
      {
        "definition": "<p>The active condition&#39;s aggregation function.</p>\n<p>Used in APM, browser, and mobile alert condition types.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "valueFunction",
        "units": null
      },
      {
        "definition": "<p>The active condition&#39;s violation time limit setting.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "violationTimeLimitSeconds",
        "units": null
      },
      {
        "definition": "<p>Deprecated. Do not use.</p>\n",
        "events": [
          "NrAiIncident"
        ],
        "name": "violationUuId",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Alerts"
      }
    ],
    "definition": "<p>An NrAiIncident is created when violation of an alerts condition generates a violation event, which passes important information downstream.</p>\n",
    "name": "NrAiIncident"
  },
  {
    "attributes": [
      {
        "definition": "<p>The <code>aggregationTag</code> attribute has a unique suffix added to it. Any events with <code>aggregationTag</code> and the same suffix value are grouped together in an incident. A resolve event resets this aggregation grouping.</p>\n<p>When resolving an incident, make sure the resolve event includes the same aggregation tag.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "aggregationTag.*",
        "units": null
      },
      {
        "definition": "<p>A URL to a page related to the incident.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "deepLinkUrl",
        "units": null
      },
      {
        "definition": "<p>The triggering event description.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "description",
        "units": null
      },
      {
        "definition": "<p>The GUID, assigned by New Relic, for the New Relic-monitored entity (host, application, etc.). This value is stored as a Base64 encoded value.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIncidentExternal",
          "NrAiSignal",
          "Span"
        ],
        "name": "entity.guid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The incident&#39;s priority: <code>low</code>, <code>medium</code>, <code>high</code>, or <code>critical</code>. Default: <code>high</code>.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIncidentExternal",
          "NrAiIssue"
        ],
        "name": "priority",
        "units": null
      },
      {
        "definition": "<p>The runbook URL for the condition that triggered the violation.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "runbookUrl",
        "units": null
      },
      {
        "definition": "<p>The system that triggered the notification, not the entity that faulted. Required for trigger.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "source",
        "units": null
      },
      {
        "definition": "<p>Whether the event should trigger a new incident or resolve an existing one. The values can be <code>trigger</code>, <code>resolve</code>, or <code>acknowledge</code>. Required.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "state",
        "units": null
      },
      {
        "definition": "<p>Arbitrary key-value metadata, or tags, associated with the violation. <code>tag</code> is the prefix and <code>*</code> is the metadata/tag name.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "tag.*",
        "units": null
      },
      {
        "definition": "<p>The event&#39;s wall clock time using an epoch timestamp.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The triggering event title. Required for trigger.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "title",
        "units": null
      },
      {
        "definition": "<p>The version of the current format.</p>\n",
        "events": [
          "NrAiIncidentExternal"
        ],
        "name": "version",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Alerts"
      }
    ],
    "definition": "<p>An NrAiIncidentExternal event is created when a custom incident event is received via the incident event API.</p>\n",
    "name": "NrAiIncidentExternal"
  },
  {
    "attributes": [
      {
        "definition": "<p>ID of the account where incidents occurred.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "accountIds",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The timestamp when the issue was activated.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "activateTime",
        "units": null
      },
      {
        "definition": "<p>What caused the incident to close. Available values:</p>\n<ul>\n<li><p><code>CLOSED_BY_ISSUE</code>: Issue in a created state that closed naturally before activation.</p>\n</li>\n<li><p><code>CLOSED_BY_USER</code>: Issue in a created state that the user closes before activation.</p>\n</li>\n<li><p><code>CLOSE_INACTIVE</code>: Issue reached 5000 (max) incidents.</p>\n</li>\n<li><p><code>closeTtl</code>: Issue closed due to issue TTL (issue settings).</p>\n</li>\n<li><p><code>CONDITION_DELETED</code>: Condition deleted.</p>\n</li>\n<li><p><code>CONDITION_DISABLED</code>: Condition disabled.</p>\n</li>\n<li><p><code>CONDITION_MODIFIED</code>: Condition <a href=\"/docs/alerts-applied-intelligence/new-relic-alerts/alert-conditions/create-nrql-alert-conditions/#evaluation-resets\">edited</a>.</p>\n</li>\n<li><p><code>EVALUATOR</code>: Natural close because the metric has ceased to breach the threshold.</p>\n</li>\n<li><p><code>EXPIRED</code>:  Incident closed due to TTL.</p>\n</li>\n<li><p><code>INCIDENT_CLOSED</code>: The issue contains only anomalies and is closed when the last anomaly is closed.</p>\n</li>\n<li><p><code>LOSS_OF_SIGNAL</code>: Signal was lost, and incident was closed based on loss of signal settings.</p>\n</li>\n<li><p><code>POLICY_DELETED</code>: Policy was deleted.</p>\n</li>\n<li><p><code>TARGET_REMOVED</code>: The target was removed from the condition.</p>\n</li>\n<li><p><code>thirdPartyIntegration</code>: A third party closed the issue through an API call.</p>\n</li>\n<li><p><code>USER</code>: Closed manually by a user on the legacy version.</p>\n</li>\n<li><p><code>userAction</code>: Closed manually by a user.</p>\n</li>\n</ul>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "closeCause",
        "units": null
      },
      {
        "definition": "<p>The timestamp when the incident was closed.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIssue"
        ],
        "name": "closeTime",
        "units": null
      },
      {
        "definition": "<p>Indicates whether the issue was correlated (true/false).</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "correlated",
        "units": null
      },
      {
        "definition": "<p>Indicates whether the issue was a correlated candidate (true/false).</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "correlatedCandidate",
        "units": null
      },
      {
        "definition": "<p>The unique identifier of the correlation rule.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "correlationRuleIds",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the correlation rule.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "correlationRuleNames",
        "units": null
      },
      {
        "definition": "<p>The timestamp when the issue was created.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "createTime",
        "units": null
      },
      {
        "definition": "<p>Number of impacted entities.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "entitiesCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The name of the targeted entity.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "entity.names",
        "units": null
      },
      {
        "definition": "<p>The type of the targeted entity.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "entity.types",
        "units": null
      },
      {
        "definition": "<p>The event type of the record.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "event",
        "units": null
      },
      {
        "definition": "<p>Number of incidents in the issue.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "incidentCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The unique identifiers of the issue&#39;s incidents.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "incidentIds",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Indicates whether the issue is idle (true/false).</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "isIdle",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unique identifier of the issue.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "issueId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Link to the issue page.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "issueLink",
        "units": null
      },
      {
        "definition": "<p>The timestamp of the last modification.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "lastModifiedTime",
        "units": {
          "label": "millisecond (s)"
        }
      },
      {
        "definition": "<p>Shows whether the active condition was muted at the time of the incident event.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIssue"
        ],
        "name": "muted",
        "units": null
      },
      {
        "definition": "<p>The unique identifier of the parent issue.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "parentId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The incident&#39;s priority: <code>low</code>, <code>medium</code>, <code>high</code>, or <code>critical</code>. Default: <code>high</code>.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIncidentExternal",
          "NrAiIssue"
        ],
        "name": "priority",
        "units": null
      },
      {
        "definition": "<p>If applicable, the source of the issue.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "sources",
        "units": null
      },
      {
        "definition": "<p>The wall clock time of the event using an epoch timestamp.</p>\n",
        "events": [
          "NrAiIssue"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The incident&#39;s title.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIssue"
        ],
        "name": "title",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Alerts"
      }
    ],
    "definition": "<p>An <code>NrAiIssue</code> is created when a threshold of an alert condition generates an incident event, which passes important information downstream.</p>\n",
    "name": "NrAiIssue"
  },
  {
    "attributes": [
      {
        "definition": "<p>Name of the destination used to send the notification.</p>\n",
        "events": [
          "NrAiNotification"
        ],
        "name": "destinationName",
        "units": null
      },
      {
        "definition": "<p>Destination type, such as Slack, email, or Jira.</p>\n",
        "events": [
          "NrAiNotification"
        ],
        "name": "destinationType",
        "units": null
      },
      {
        "definition": "<p>Internal identifier for the notification. Mostly used for debugging purposes.</p>\n",
        "events": [
          "NrAiNotification"
        ],
        "name": "notificationId",
        "units": null
      },
      {
        "definition": "<p>If the integration allows us to create or fetch a link for the notification, this will show that link. If not, this will show the response json (for example, with webhook notifications).</p>\n",
        "events": [
          "NrAiNotification"
        ],
        "name": "notificationResult",
        "units": null
      },
      {
        "definition": "<p>Notification operation, for example, <code>Notify</code>, <code>Acknowledge</code>, <code>Close</code>.</p>\n",
        "events": [
          "NrAiNotification"
        ],
        "name": "operation",
        "units": null
      },
      {
        "definition": "<p>For webhook operations, this will show the outgoing payload.</p>\n",
        "events": [
          "NrAiNotification"
        ],
        "name": "payload",
        "units": null
      },
      {
        "definition": "<p>Whether the notification was <code>SUCCESS</code> or <code>FAIL</code>.</p>\n",
        "events": [
          "NrAiNotification"
        ],
        "name": "status",
        "units": null
      },
      {
        "definition": "<p>Time the notification was sent.</p>\n",
        "events": [
          "NrAiNotification"
        ],
        "name": "timestamp",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Alerts"
      }
    ],
    "definition": "<p>NrAiNotification shows details from every sent notification on your account, including both successful and failed notifications.</p>\n",
    "name": "NrAiNotification"
  },
  {
    "attributes": [
      {
        "definition": "<p>Count of the number of data points that were aggregated for this window.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "aggregatedDataPointsCount",
        "units": null
      },
      {
        "definition": "<p>Duration of the aggregation window of the active condition, in seconds.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "aggregationDuration",
        "units": null
      },
      {
        "definition": "<p>ID of the active condition.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "conditionId",
        "units": null
      },
      {
        "definition": "<p>The account ID containing the data being evaluated.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "dataAccountId",
        "units": null
      },
      {
        "definition": "<p>The number of data points that arrived too early to be included in the data aggregation window and were dropped from evaluation.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "earlyEventDropCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Moment when this event was created, and the end of the aggregation window.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "endTimestamp",
        "units": null
      },
      {
        "definition": "<p>The GUID, assigned by New Relic, for the New Relic-monitored entity (host, application, etc.). This value is stored as a Base64 encoded value.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIncidentExternal",
          "NrAiSignal",
          "Span"
        ],
        "name": "entity.guid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Type of the active entity. Note that <code>NA</code> indicates an infrastructure entity.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "entity.type",
        "units": null
      },
      {
        "definition": "<p>This captures any errors when evaluating the signal.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "error",
        "units": null
      },
      {
        "definition": "<p>The type of event captured in this data point.</p>\n<ul>\n<li><code>value</code>: A single value was evaluated (most common).</li>\n<li><code>expiration</code>: A signal loss is detected.</li>\n<li><code>reset</code>: Indicates a detail of the condition was changed, and <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-conditions/create-nrql-alert-conditions/#evaluation-resets\">the signal has been reset</a>.</li>\n<li><code>summary</code>: Indicates that data points were dropped for being early and/or late</li>\n<li><code>removed</code>: Indicates that a facet was removed from correlation because of a limit or ttl</li>\n</ul>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "event",
        "units": null
      },
      {
        "definition": "<p>Duration of the loss of signal of the active condition.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "expirationDuration",
        "units": null
      },
      {
        "definition": "<p>Exclusively for expiration events, it&#39;s the wall-clock time of the last data point received.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "expirationLastSeenTime",
        "units": null
      },
      {
        "definition": "<p>Gap-filling setting from the active condition.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "fillOption",
        "units": null
      },
      {
        "definition": "<p>The number of data points that arrived too late to be included in the data aggregation window and were dropped from evaluation.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "lateEventDropCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>For baseline conditions only. Indicates the number of standard deviations between the actual value and the predicted value. Formally called z-score or standard score.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "numberOfDeviations",
        "units": null
      },
      {
        "definition": "<p>For baseline conditions only. Indicates the value that our models predicted for this data point.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "predictedValue",
        "units": null
      },
      {
        "definition": "<p>For <code>removal</code> events only. Available values:</p>\n<ul>\n<li><code>facet_limit_reached</code>: The number of facets being correlated has reached the limit.</li>\n<li><code>facet_ttl_expired</code>: A facet being correlated has not been updated within the defined ttl.</li>\n</ul>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "removalCause",
        "units": null
      },
      {
        "definition": "<p>For reset events only. Available values:</p>\n<ul>\n<li><code>new</code>: It&#39;s a new signal coming online.</li>\n<li><code>expired</code>: Signal reset due to loss of signal configuration.</li>\n<li><code>conditionDisabled</code>: The user disabled the condition in the UI.</li>\n<li><code>delayedEvaluation</code>: The condition has a delayed evaluation configured. Therefore, New Relic sends resets through the system to prevent evaluation before the expected time.</li>\n<li><code>suppression</code>: Because of an ongoing incident, alerts are suppressed.</li>\n<li><code>interrupt</code>: When we detect issues, we internally interrupt our services. Issues are mainly out-of-order data points that can cause false alerts.</li>\n<li><code>conditionDeleted</code>: The user has deleted the condition in the UI.</li>\n<li><code>conditionModified</code>: The user has modified the condition in a way that requires re-registration on our side.</li>\n<li><code>policyDeleted</code>: Deleted the entire policy.</li>\n<li><code>user</code>: The user has closed the incident manually in the UI.</li>\n</ul>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "resetCause",
        "units": null
      },
      {
        "definition": "<p>New Relic’s server clock time when the data point was evaluated.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "serverTime",
        "units": null
      },
      {
        "definition": "<p>Unique identifier for this data stream.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "signalId",
        "units": null
      },
      {
        "definition": "<p>Value of the signal for this aggregation window.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "signalValue",
        "units": null
      },
      {
        "definition": "<p>For sliding windows conditions only. Duration of the slide-by interval, in seconds.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "slideBySeconds",
        "units": null
      },
      {
        "definition": "<p>Tells you how closely the signal value and the baseline prediction track each other: Standard deviation will be low when they track each other closely, and high when they don&#39;t. This attribute uses the same units as the signal.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "standardDeviation",
        "units": null
      },
      {
        "definition": "<p>All the system and custom tags that have been added to a signal.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "tags.<TagName>",
        "units": null
      },
      {
        "definition": "<p>The start of the aggregation window.</p>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The type of event being reported. Available values:</p>\n<ul>\n<li><code>signal</code>: A signal value that was evaluated.</li>\n<li><code>info</code>: Updates to a signal that do not correspond to a specific evaluation window.</li>\n</ul>\n",
        "events": [
          "NrAiSignal"
        ],
        "name": "type",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Alerts"
      }
    ],
    "definition": "<p>NrAiSignal shows details from every NRQL alert condition and every signal on your account, for every aggregation window that passes. This data is posted immediately after each aggregation window is aggregated and evaluated, so it will show you exactly what <a href=\"https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/get-started/alerts-ai-overview-page\">our alerts</a> are seeing.</p>\n",
    "name": "NrAiSignal"
  },
  {
    "attributes": [
      {
        "definition": "<p>Indicates an action that was taken in a New Relic account.</p>\n<p>The <code>actionIdentifier</code> attribute describes the action that was taken. Some <code>actionIdentifier</code> values will be prefixed by the <a href=\"/attribute-dictionary/?event=NrAuditEvent&attribute=targetType\"><code>targetType</code></a>.</p>\n<p>Some examples of <code>actionIdentifier</code> values:</p>\n<ul>\n<li>account.update_owner</li>\n<li>alerts.condition.create</li>\n<li>alerts.condition.update</li>\n<li>alerts.condition.delete</li>\n<li>alerts.condition.unarchive</li>\n<li>role.create</li>\n<li>user.add_roles</li>\n<li>user.add_to_account</li>\n<li>user.invite_to_account</li>\n<li>user.remove_from_account</li>\n<li>user.remove_roles</li>\n<li>synthetics_monitor.create</li>\n<li>synthetics_monitor.delete</li>\n</ul>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "actionIdentifier",
        "units": null
      },
      {
        "definition": "<p>ID of the API key taking action. The API key is partially obfuscated to ensure privacy of the key.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "actorAPIKey",
        "units": null
      },
      {
        "definition": "<p>Email address for the person who made the change.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "actorEmail",
        "units": null
      },
      {
        "definition": "<p>ID of the person taking action.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "actorId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The IP address for the person or API key where the action initiated.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "actorIpAddress",
        "units": null
      },
      {
        "definition": "<p>Identifies whether the action was initiated by a user (person) or with an API key that is not associated with a user.</p>\n<ul>\n<li>user: For greatest data accuracy, select user, along with actorId and actorEmail.</li>\n<li>api_key: If used, the actorId and actorEmail are not required</li>\n</ul>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "actorType",
        "units": null
      },
      {
        "definition": "<p>Human-readable description of the action taken. For example: Added <a href=\"mailto:name@company.com\">name@company.com</a> to roles Browser manager.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "description",
        "units": null
      },
      {
        "definition": "<p>Unique ID of the audit event.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The corresponding account ID for the &#39;scopeType&#39;.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "scopeId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Uses the value &#39;account&#39;.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "scopeType",
        "units": null
      },
      {
        "definition": "<p>ID of the object (targetType) that changed. For example, if the targetType is a user, this is the person&#39;s New Relic user ID.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "targetId",
        "units": null
      },
      {
        "definition": "<p>The object that changed; for example, account, role, user, alert conditions or notifications, logs, etc.</p>\n",
        "events": [
          "NrAuditEvent"
        ],
        "name": "targetType",
        "units": null
      },
      {
        "definition": "<p>Time that the event occurred or was evaluated over. Specifies a time or range of time. Examples:</p>\n<ul>\n<li>MM-DD-YYYY HH:MM:SS</li>\n<li>SINCE 2018-05-28 11:18:45</li>\n<li>UNTIL 30 minutes ago</li>\n<li>SINCE &#39;2018-06-20&#39; UNTIL today</li>\n</ul>\n",
        "events": [
          "NrAuditEvent",
          "WorkloadStatus"
        ],
        "name": "timestamp",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Account Usage"
      }
    ],
    "definition": "<p>An NrAuditEvent is created by New Relic services to record configuration changes made in New Relic products. The data gathered for this event includes the type of account change, actor (user or API key) that made the change, a human-readable description of the action taken, and a timestamp for the change.</p>\n",
    "name": "NrAuditEvent"
  },
  {
    "attributes": [
      {
        "definition": "<p>The number of bytes ingested by the consuming account via either an agent, a custom event API, or another integration.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "BytesIngested",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The number of core users.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "CoreUsers",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of full platform users.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "FullUsers",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The amount of data ingested by the consuming account.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "GigabytesIngested",
        "units": {
          "label": "gigabyte (GB)"
        }
      },
      {
        "definition": "<p>ID of the New Relic account that&#39;s directly responsible for the stored data, as determined from the license key.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "consumingAccountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the New Relic account directly responsible for the stored data, as determined from the license key.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "consumingAccountName",
        "units": null
      },
      {
        "definition": "<p>The amount of consumption converted to the unit of pricing. For example, for Data Platform, consumption is equal to GigabytesIngested. For Full Stack Observability, consumption is equal to FullUsers. This attribute is useful if you want to see consumption faceted by productLine or other attribute.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "consumption",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>A cost estimate based on your usage. This is an estimate, not an actual invoiced amount. To be deprecated in May of 2022. </p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "estimatedCost",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The ID of the parent account (also known as the master account) that&#39;s either responsible for stored events or that is the parent of the consuming account.</p>\n<p>When a parent account is the consuming account, <code>masterAccountId</code> is the <code>consumingAccountId</code>. This attribute is present even for accounts that don&#39;t have a parent account. This is to ensure continued reporting if the account is later made a parent account.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "masterAccountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the parent account (also known as the master account) that&#39;s either responsible for stored events, or that is the parent of the consuming account.</p>\n<p>When a parent account is the consuming account, <code>masterAccountName</code> is the same as <code>consumingAccountName</code>. This attribute is present even for accounts that don&#39;t have a parent account. This is to ensure continued reporting if the account is later made a parent account.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "masterAccountName",
        "units": null
      },
      {
        "definition": "<p>Consolidates multiple categories of usage into a single metric. Helpful when faceting by productLine.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "metric",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The month and year during which the consumption occurred. Example: August 2020.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "month",
        "units": null
      },
      {
        "definition": "<p>The timestamp of the month during which the consumption occurred.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "monthTimestamp",
        "units": null
      },
      {
        "definition": "<p>The New Relic product the usage data is from. Use this attribute to identify / filter for product specific usage data.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "productLine",
        "units": null
      },
      {
        "definition": "<p>UNIX timestamp (seconds since epoch) of the day and time when event generation was initiated.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The underlying NrUsage metric that resulted in the consumption. For example, GigabytesIngested consumption may be made up of ApmEventBytes, BrowserEventBytes, CustomEventBytes and other NrUsage metrics.</p>\n",
        "events": [
          "NrConsumption"
        ],
        "name": "usageMetric",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Account Usage"
      }
    ],
    "definition": "<p>This event records usage every hour, and is the equivalent of &quot;real-time&quot; usage. Use this event to observe usage trends over time. The values in this event are estimates and may not correspond exactly with your invoice. For aggregate views of usage across an entire billing period, use NrMTDConsumption.</p>\n",
    "name": "NrConsumption"
  },
  {
    "attributes": [
      {
        "definition": "<p>ID reported by the agent to uniquely identify the host for which this usage event is reported.</p>\n<p>This value can come from several sources in the application&#39;s environment, but commonly is the value returned by the gethostname Linux syscall. In Docker environments, this attribute can take on the value (sometimes truncated) of the Docker container ID. agentHostname is one of three possible providers for the hostId value.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "agentHostname",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Bytes of RAM available to the host, as detected by the New Relic agent from the host OS.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmAgentMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Number of logical CPU cores available to the host, as detected by the New Relic agent from the host OS.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmAgentProcessorCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Version of the New Relic APM agent running in the application instance reporting this usage.</p>\n<p>Present only for events where usageType equals Application. To update your agent version, see <a href=\"/docs/agents/manage-apm-agents/installation/update-new-relic-agent\">Update the New Relic agent</a>.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmAgentVersion",
        "units": null
      },
      {
        "definition": "<p>ID uniquely identifying the application that is reporting this usage, as it appears in the APM product. Present only for events where usageType equals Application.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmAppId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>ID uniquely identifying the application instance (the process running the New Relic APM agent).</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmAppInstanceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the application reporting this usage, as it appears in the APM product. Present only for events where usageType equals Application.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmAppName",
        "units": null
      },
      {
        "definition": "<p>Size of the host, for CU-based billing purposes.</p>\n<p>Calculated as apmProcessorCount plus (apmMemoryBytes/(1024^3)), or the number of processors plus memory (GiB).</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmBillingInstanceSize",
        "units": null
      },
      {
        "definition": "<p>Bytes of RAM available to the host, as defined by the cloud provider for the host&#39;s instance type.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmCloudDerivedMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Number of logical processors available to the host, as defined by the cloud provider for the host&#39;s instance type.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmCloudDerivedProcessorCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Describes the algorithm used to calculate the host size for CU usage.</p>\n<p>Values include:</p>\n<ul>\n<li>agent_collected_calculated_data: Use the host size data collected by the agent from the OS environment.</li>\n<li>cloud_provider_data: Use the host size data from the cloud provider.</li>\n<li>missing_data: Some host size data was missing. This could be due to an older agent that doesn&#39;t support reporting CPU and memory sizes, or an agent and OS combination for which CPU and memory sizes are not supported. This will result in the default host size (16) being applied.</li>\n</ul>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmComputeUnitRule",
        "units": null
      },
      {
        "definition": "<p>Number of compute units (CUs) recorded for the given host.</p>\n<p>CUs are calculated as apmHoursUsed multiplied by apmBillingInstanceSize. For more information, see <a href=\"https://docs.newrelic.com/docs/accounts/accounts/subscription-pricing/compute-unit-cu-pricing-vs-host-based-pricing-apm-infrastructure\">Compute unit pricing</a>.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmComputeUnits",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of unique container IDs associated with this host. Present only for events where usageType equals Host.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmContainerCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of hours for which usage was recorded for the given entity.</p>\n<p>When an entity is connected to New Relic for any amount of time within a given hour, that hour is counted toward usage. When calculating monthly APM host usage, the calculation for equivalent hosts for a month assumes that a standard month has 750 hours: `apmHoursUsed / 750`.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmHoursUsed",
        "units": null
      },
      {
        "definition": "<p>Name of the language that the usage-reporting application is written in, as reported by the New Relic agent.</p>\n<p>Examples: ruby, java, python. Present only for events where usageType equals Application.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmLanguage",
        "units": null
      },
      {
        "definition": "<p>Bytes of RAM available to the host. Used to calculate apmBillingInstanceSize.</p>\n<p>The value of one of these attributes will be used: apmCloudDerivedMemoryBytes, apmAgentMemoryBytes.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Number of logical processors available to the host, used to calculate apmBillingInstanceSize.</p>\n<p>The value of one of these attributes will be used: apmCloudDerivedProcessorCount, apmAgentProcessorCount.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "apmProcessorCount",
        "units": null
      },
      {
        "definition": "<p>Linux boot ID of host for which this usage is reported, which is unique for each boot lifetime of each Linux operating system instance.</p>\n<p>Will only be present when the New Relic agent is one of the following versions: Go: 1.11 or higher Java: 3.42.0 or higher .NET: 6.19.330.0 or higher Node.js: 2.1.0 or higher PHP: 7.5.0.199 or higher Python: 2.90.0.75 or higher Ruby: 4.4.0.336 or higher bootId is one of three possible providers for the hostId value.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "bootId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>ID uniquely identifying the application reporting this usage, as it appears in the Browser product. Deprecated.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "browserAppId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Number of page views for an application for that 24-hour period.</p>\n<p>For more on how events are generated, see <a href=\"https://docs.newrelic.com/docs/accounts/new-relic-account-usage/infrastructure-usage/infrastructure-subscription-usage-attributes-queries\">Data generation</a>. Page views for both Pro and Lite Browser agents are counted.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "browserPageViewCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>ID uniquely identifying the cloud host instance (example: an AWS EC2 instance) for which this usage is reported.</p>\n<p>(For example, for an AWS EC2 instance, the value would look like i-1234abcd5678ef900.) This is used to uniquely identify the host if the apmComputeUnitRule is cloud_provider_data. This will not be present if no cloud provider was detected by the agent. Agents with these versions will detect cloud provider data for AWS: Go: 1.11 or higher Java: 3.18.0 or higher .NET: 5.1.72.0 or higher Node.js: 1.21.0 or higher PHP: 5.5.0 or higher Python: 2.54.0.41 or higher Ruby: 3.12.1.298 or higher cloudInstanceId is one of three possible providers for the hostId value.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "cloudInstanceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Size of the cloud instance for this host for CU-based APM billing purposes.</p>\n<p>This is calculated according to the formula for apmBillingInstanceSize, using the CPU and memory sizes associated with the instance type defined by the cloud provider. Will not be present if no cloud provider was detected by the agent.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "cloudInstanceSize",
        "units": null
      },
      {
        "definition": "<p>Instance type of the host as defined by the cloud provider and detected by the agent.</p>\n<p>For example: c4.2xlarge. This will not be present if no cloud provider was detected by the agent.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "cloudInstanceType",
        "units": null
      },
      {
        "definition": "<p>Name of the cloud provider for this host. Example values: aws, azure. This will not be present if no cloud provider was detected by the agent.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "cloudProvider",
        "units": null
      },
      {
        "definition": "<p>Name of the zone that a cloud provider host is located in.</p>\n<p>For example: eu-central-1b. This will not be present if no cloud provider was detected by the agent.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "cloudZone",
        "units": null
      },
      {
        "definition": "<p>ID of the New Relic account that&#39;s directly responsible for the stored data, as determined from the license key.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "consumingAccountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the New Relic account directly responsible for the stored data, as determined from the license key.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "consumingAccountName",
        "units": null
      },
      {
        "definition": "<p>ID of the Docker or other Linux container in which the application instance is running.</p>\n<p>This will not be present if a container was not detected by the agent. Present only for events where usageType equals Application. This attribute is not used to uniquely identify hosts for billing purposes.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "containerId",
        "units": null
      },
      {
        "definition": "<p>ID used to uniquely identify the host for which this usage is reported.</p>\n<p>Any given hour of APM usage for this host will be counted only once when calculating apmHoursUsed. There are several possible host identifiers reported by the New Relic agent. The attributes, if present, will be chosen to use in this order of precedence: cloudInstanceId, bootId, agentHostname.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "hostId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Bytes of RAM available to the host, used to calculate infrastructureBillingInstanceSize.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "infrastructureAgentMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Number of logical CPU cores available to the host, used to calculate infrastructureBillingInstanceSize.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "infrastructureAgentProcessorCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Version of the Infrastructure agent running on the host reporting this usage.</p>\n<p>If multiple agents are reporting from the same host, the version from the first agent seen in a given hour will be used.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "infrastructureAgentVersion",
        "units": null
      },
      {
        "definition": "<p>Size of the host, for CU billing purposes. Calculated as: number of processors multiplied by memory in gibibytes (GiB).</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "infrastructureBillingInstanceSize",
        "units": {
          "label": "gibibyte (Gib)"
        }
      },
      {
        "definition": "<p>Bytes of RAM available to the host, as reported by the cloud provider, used to calculate infrastructureBillingInstanceSize.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "infrastructureCloudDerivedMemoryBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Number of logical CPU cores available to the host, as reported by the cloud provider, used to calculate infrastructureBillingInstanceSize.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "infrastructureCloudDerivedProcessorCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Describes the algorithm used to calculate the host size for CU usage.</p>\n<p>Values include: agent_collected_calculated_data: Use the host size data collected by the agent from the OS environment. cloud_provider_data: Use the host size data from the cloud provider. missing_data: Some host size data was missing. This could be due to an agent and operating system combination for which CPU and memory sizes are not supported. This will result in the default host size (16) being applied.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "infrastructureComputeUnitRule",
        "units": null
      },
      {
        "definition": "<p>Number of compute units (CUs) recorded for the given host.</p>\n<p>CUs are calculated as: infrastructureHoursUsed multiplied by infrastructureBillingInstanceSize. For more about compute unit calculation, see <a href=\"https://docs.newrelic.com/docs/accounts/accounts/subscription-pricing/compute-unit-cu-pricing-vs-host-based-pricing-apm-infrastructure\">Compute unit pricing</a>.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "infrastructureComputeUnits",
        "units": null
      },
      {
        "definition": "<p>Number of hours for which usage was recorded for the given host. When a host is connected to New Relic for any amount of time within a given hour, that hour is counted toward usage.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "infrastructureHoursUsed",
        "units": null
      },
      {
        "definition": "<p>The type of event. For example: Transaction, MobileCrash, or SystemSample. Event namespaces are associated with a specific data retention period.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "insightsEventNamespace",
        "units": null
      },
      {
        "definition": "<p>Count of all events of the given insightsEventNamespace stored for the retention period included with a paid non-Insights product subscription.</p>\n<p>For example, APM Pro subscriptions include several days&#39; retention of Transaction events. This attribute represents a count of events existing in storage as measured on a given day, and not a count of the events added to storage during a given day. Summing this attribute over a period of more than a day may not give you what you expect; for example, it will not yield the total volume of events written to storage in that period.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "insightsIncludedEventCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of hours for which events of the given insightsEventNamespace are stored but are not counted toward your paid Insights Pro subscription.</p>\n<p>For more information about the data reported in nrDailyUsage, see <a href=\"https://docs.newrelic.com/docs/accounts/new-relic-account-usage/insights-usage/insights-usage-attributes-queries\">Insights usage: Attributes and queries</a>.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "insightsIncludedRetentionInHours",
        "units": null
      },
      {
        "definition": "<p>New Relic product (Insights, APM, Browser, Mobile, etc.) that corresponds to the given insightsEventNamespace.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "insightsNrProduct",
        "units": null
      },
      {
        "definition": "<p>Count of all events stored for the given insightsEventNamespace as of the given day.</p>\n<p>Sum of insightsIncludedEventCount and the number of events stored beyond the retention period included with a paid non-Insights product subscription. This attribute represents a count of events existing in storage as measured on a given day, and not a count of the events added to storage during a given day. Summing this attribute over a period of more than a day may not give you what you expect; for example, it will not yield the total volume of events written to storage in that period.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "insightsTotalEventCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Number of hours for which events of the given insightsEventNamespace are stored.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "insightsTotalRetentionInHours",
        "units": null
      },
      {
        "definition": "<p>This is True if the calculated host size was greater than 16 and therefore capped.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "instanceSizeCapped",
        "units": null
      },
      {
        "definition": "<p>Boolean. true means the application is the primary app. false means the app is one of several apps that an agent reports data for. Deprecated.</p>\n<p>For more on multiple app names in APM and Browser, see <a href=\"https://docs.newrelic.com/docs/agents/manage-apm-agents/app-naming/use-multiple-names-app\">Use multiple names for an app</a>. The sum of events where this attribute is true will give an accurate total of page views when you are using the multiple app names feature. Counting events where this attribute is false will result in over-counting of usage.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "isPrimaryApp",
        "units": null
      },
      {
        "definition": "<p>The ID of the parent account (also known as the master account) that&#39;s either responsible for stored events or that is the parent of the consuming account.</p>\n<p>When a parent account is the consuming account, <code>masterAccountId</code> is the <code>consumingAccountId</code>. This attribute is present even for accounts that don&#39;t have a parent account. This is to ensure continued reporting if the account is later made a parent account.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "masterAccountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the parent account (also known as the master account) that&#39;s either responsible for stored events, or that is the parent of the consuming account.</p>\n<p>When a parent account is the consuming account, <code>masterAccountName</code> is the same as <code>consumingAccountName</code>. This attribute is present even for accounts that don&#39;t have a parent account. This is to ensure continued reporting if the account is later made a parent account.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "masterAccountName",
        "units": null
      },
      {
        "definition": "<p>This is True if the APM agent reports no CPU count.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "missingCpuData",
        "units": null
      },
      {
        "definition": "<p>This is True if the APM agent reports no memory count.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "missingRamData",
        "units": null
      },
      {
        "definition": "<p>ID uniquely identifying the application reporting this usage, as it appears in the Mobile product.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "mobileAppId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the application reporting this usage, as it appears in the Mobile product.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "mobileAppName",
        "units": null
      },
      {
        "definition": "<p>Number of unique users (device IDs) counted during the current calendar month to date for a Mobile app.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "mobileUniqueUsersPerMonth",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Partner ID of the New Relic customer partnership associated with the account responsible for the stored events.</p>\n<p>This attribute is only present if the consuming account is associated with a New Relic customer partnership.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "partnershipId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the New Relic customer partnership associated with the account responsible for the stored events.</p>\n<p>This attribute is only present if the consuming account is associated with a customer partnership.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "partnershipName",
        "units": null
      },
      {
        "definition": "<p>The New Relic product the usage data is from. Use this attribute to identify / filter for product specific usage data.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "productLine",
        "units": null
      },
      {
        "definition": "<p>ID of the child account (also known as the sub-account) responsible for the stored event. When present, <code>subAccountId</code> is the same as <code>consumingAccountId</code>.</p>\n<p>This attribute is only present if the consuming account is a child account (not a parent account).</p>\n",
        "events": [
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "subAccountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the child account (also known as the sub-account) responsible for stored events. When present, this is the same as <code>consumingAccountName</code>.</p>\n<p>This attribute is only present if the consuming account is a child account (not a parent account).</p>\n",
        "events": [
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "subAccountName",
        "units": null
      },
      {
        "definition": "<p>Number of failed checks that ran on the given day for the given synthetic monitor and location.</p>\n<p>Failed checks count toward subscription usage for synthetics. Only checks with syntheticsType not equal to SIMPLE count toward billable subscription usage.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "syntheticsFailedCheckCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Location the check ran in.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "syntheticsLocation",
        "units": null
      },
      {
        "definition": "<p>Human-readable label for the location of the check.</p>\n<p>For more information about the data reported in nrDailyUsage, see <a href=\"https://docs.newrelic.com/docs/accounts/new-relic-account-usage/insights-usage/insights-usage-attributes-queries\">Insights usage: Attributes and queries</a>.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "syntheticsLocationLabel",
        "units": null
      },
      {
        "definition": "<p>Unique ID of the monitor.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "syntheticsMonitorId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the monitor.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "syntheticsMonitorName",
        "units": null
      },
      {
        "definition": "<p>Number of successful checks that ran on the given day for the given synthetic monitor and location.</p>\n<p>Only checks with syntheticsType not equal to SIMPLE count toward billable subscription usage.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "syntheticsSuccessCheckCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The type of Synthetics monitor. Possible values: SIMPLE, BROWSER, SCRIPT_BROWSER, SCRIPT_API.</p>\n<p>For more information, see <a href=\"https://docs.newrelic.com/docs/synthetics/new-relic-synthetics/getting-started/types-synthetics-monitors\">Types of synthetic monitors</a>.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "syntheticsType",
        "units": null
      },
      {
        "definition": "<p>Human-readable label for syntheticsType. Possible values: Ping, Simple Browser, Scripted Browser, Scripted API.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "syntheticsTypeLabel",
        "units": null
      },
      {
        "definition": "<p>UNIX timestamp (seconds since epoch) of the day and time when event generation was initiated.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>For APM, this value can be either Application or Host, depending on the type of entity this event records usage for (other New Relic products will have different values for usageType).</p>\n<p>Events with both values are recorded so that usage data can be analyzed in several ways. For Application: the event represents usage for a single unique application instance for that day. For Host: the event represents usage for a single unique host for that day. Only Host entities are used to calculate billable usage. Application entities are useful for comparing usage between applications, but are not used for billing or contract purposes.</p>\n",
        "events": [
          "NrDailyUsage"
        ],
        "name": "usageType",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Account Usage"
      }
    ],
    "definition": "<p>Once per day, New Relic products generate a NrDailyUsage event. Use the productLine attribute to identify and filter for the specific product&#39;s usage.</p>\n",
    "name": "NrDailyUsage"
  },
  {
    "attributes": [
      {
        "definition": "<p>The first six characters of the API key used for the request that generated an error.</p>\n",
        "events": [
          "NrIntegrationError"
        ],
        "name": "apiKeyPrefix",
        "units": null
      },
      {
        "definition": "<p>The category of the error (for example, <code>EventApiException</code> for custom events). </p>\n",
        "events": [
          "NrIntegrationError"
        ],
        "name": "category",
        "units": null
      },
      {
        "definition": "<p>The HTTP status code associated with the transaction. Some agents use <code>httpResponseCode</code>, which is equivalent.</p>\n",
        "events": [
          "NrIntegrationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "http.statusCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The HTTP response code associated with the transaction. Some agents use <code>http.statusCode</code>, which is equivalent.</p>\n",
        "events": [
          "NrIntegrationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "httpResponseCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>Contents of the error message.</p>\n",
        "events": [
          "NrIntegrationError"
        ],
        "name": "message",
        "units": null
      },
      {
        "definition": "<p>The error&#39;s name (for example, <code>EventValidationException</code> for custom events). </p>\n",
        "events": [
          "NrIntegrationError"
        ],
        "name": "name",
        "units": null
      },
      {
        "definition": "<p>The name of the feature experiencing errors. For example: <code>Event API</code>, <code>Metrics</code>, or <code>Distributed tracing</code>. </p>\n",
        "events": [
          "NrIntegrationError"
        ],
        "name": "newRelicFeature",
        "units": null
      },
      {
        "definition": "<p>The UUID returned by the API for the request that generated an error.</p>\n",
        "events": [
          "NrIntegrationError"
        ],
        "name": "requestId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The HTTP response code associated with the transaction.</p>\n",
        "events": [
          "NrIntegrationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.status",
        "units": {
          "label": "enum"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Account Usage"
      }
    ],
    "definition": "<p>The NrIntegrationError event captures error messages related to data ingest, such as exceeding limits or malformed data. </p>\n",
    "name": "NrIntegrationError"
  },
  {
    "attributes": [
      {
        "definition": "<p>The number of bytes ingested by the consuming account via either an agent, a custom event API, or another integration.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "BytesIngested",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The number of core users.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "CoreUsers",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of billable core users.</p>\n",
        "events": [
          "NrMTDConsumption"
        ],
        "name": "CoreUsersBillable",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of billable full platform users.</p>\n",
        "events": [
          "NrMTDConsumption"
        ],
        "name": "FullPlatformUsersBillable",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of full platform users within the free limit (if available).</p>\n",
        "events": [
          "NrMTDConsumption"
        ],
        "name": "FullPlatformUsersFree",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of full platform users.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "FullUsers",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of billable full platform users.</p>\n",
        "events": [
          "NrMTDConsumption"
        ],
        "name": "FullUsersBillable",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of full platform users within the free limit (if available).</p>\n",
        "events": [
          "NrMTDConsumption"
        ],
        "name": "FullUsersFree",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The amount of data ingested by the consuming account.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "GigabytesIngested",
        "units": {
          "label": "gigabyte (GB)"
        }
      },
      {
        "definition": "<p>The number of gigabytes ingested by the consuming account that exceed the free limit and are considered billable.</p>\n",
        "events": [
          "NrMTDConsumption"
        ],
        "name": "GigabytesIngestedBillable",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The amount of billable consumption in the unit of pricing. For example, for Data Platform, billableConsumption is equal to GigabytesIngestedBillable. For Full Stack Observability, billableConsumption is equal to FullUsersBillable. Estimated cost is equal to billableConsumption multiplied by the unit price of the metric.</p>\n",
        "events": [
          "NrMTDConsumption"
        ],
        "name": "billableConsumption",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The amount of consumption converted to the unit of pricing. For example, for Data Platform, consumption is equal to GigabytesIngested. For Full Stack Observability, consumption is equal to FullUsers. This attribute is useful if you want to see consumption faceted by productLine or other attribute.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "consumption",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>A cost estimate based on your usage. This is an estimate, not an actual invoiced amount. To be deprecated in May of 2022. </p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "estimatedCost",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The amount of consumption that is within the consuming account&#39;s free limit.</p>\n",
        "events": [
          "NrMTDConsumption"
        ],
        "name": "freeConsumption",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The total amount of consumption included in the free limit. After consumption exceeds this amount billableConsumption begins to accumulate.</p>\n",
        "events": [
          "NrMTDConsumption"
        ],
        "name": "freeLimit",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The ID of the parent account (also known as the master account) that&#39;s either responsible for stored events or that is the parent of the consuming account.</p>\n<p>When a parent account is the consuming account, <code>masterAccountId</code> is the <code>consumingAccountId</code>. This attribute is present even for accounts that don&#39;t have a parent account. This is to ensure continued reporting if the account is later made a parent account.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "masterAccountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Consolidates multiple categories of usage into a single metric. Helpful when faceting by productLine.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "metric",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The month and year during which the consumption occurred. Example: August 2020.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "month",
        "units": null
      },
      {
        "definition": "<p>The timestamp of the month during which the consumption occurred.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption"
        ],
        "name": "monthTimestamp",
        "units": null
      },
      {
        "definition": "<p>The New Relic product the usage data is from. Use this attribute to identify / filter for product specific usage data.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "productLine",
        "units": null
      },
      {
        "definition": "<p>UNIX timestamp (seconds since epoch) of the day and time when event generation was initiated.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "timestamp",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Account Usage"
      }
    ],
    "definition": "<p>This event tracks your New Relic usage (data and billable users) and estimated cost across an entire calendar month. It generates aggregate values from the <code>NrConsumption</code> event.</p>\n",
    "name": "NrMTDConsumption"
  },
  {
    "attributes": [
      {
        "definition": "<p>Used in conjunction with “type” to determine whether usage is aggregated based on sum (sum all usage per hour) or max (take max usage per hour).</p>\n",
        "events": [
          "NrUsage"
        ],
        "name": "aggregationFunction",
        "units": null
      },
      {
        "definition": "<p>The unique numeric identifier assigned by New Relic for the service/app that generated the transaction.</p>\n",
        "events": [
          "NrUsage",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>ID of the New Relic account that&#39;s directly responsible for the stored data, as determined from the license key.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "consumingAccountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the New Relic account directly responsible for the stored data, as determined from the license key.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "consumingAccountName",
        "units": null
      },
      {
        "definition": "<p>The aggregation window (for example, 1 hour or 1 day).</p>\n",
        "events": [
          "NrUsage"
        ],
        "name": "durationMs",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The ID of the parent account (also known as the master account) that&#39;s either responsible for stored events or that is the parent of the consuming account.</p>\n<p>When a parent account is the consuming account, <code>masterAccountId</code> is the <code>consumingAccountId</code>. This attribute is present even for accounts that don&#39;t have a parent account. This is to ensure continued reporting if the account is later made a parent account.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "masterAccountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the parent account (also known as the master account) that&#39;s either responsible for stored events, or that is the parent of the consuming account.</p>\n<p>When a parent account is the consuming account, <code>masterAccountName</code> is the same as <code>consumingAccountName</code>. This attribute is present even for accounts that don&#39;t have a parent account. This is to ensure continued reporting if the account is later made a parent account.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "masterAccountName",
        "units": null
      },
      {
        "definition": "<p>Consolidates multiple categories of usage into a single metric. Helpful when faceting by productLine.</p>\n",
        "events": [
          "NrConsumption",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "metric",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>When the event was processed by the usage pipeline.</p>\n",
        "events": [
          "NrUsage"
        ],
        "name": "processedTime",
        "units": null
      },
      {
        "definition": "<p>The New Relic product the usage data is from. Use this attribute to identify / filter for product specific usage data.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "productLine",
        "units": null
      },
      {
        "definition": "<p>ID of the child account (also known as the sub-account) responsible for the stored event. When present, <code>subAccountId</code> is the same as <code>consumingAccountId</code>.</p>\n<p>This attribute is only present if the consuming account is a child account (not a parent account).</p>\n",
        "events": [
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "subAccountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the child account (also known as the sub-account) responsible for stored events. When present, this is the same as <code>consumingAccountName</code>.</p>\n<p>This attribute is only present if the consuming account is a child account (not a parent account).</p>\n",
        "events": [
          "NrDailyUsage",
          "NrUsage"
        ],
        "name": "subAccountName",
        "units": null
      },
      {
        "definition": "<p>UNIX timestamp (seconds since epoch) of the day and time when event generation was initiated.</p>\n",
        "events": [
          "NrConsumption",
          "NrDailyUsage",
          "NrMTDConsumption",
          "NrUsage"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>Used with “aggregationFunction” to determine whether aggregation is based on count (sum all usage per hour) or gauge (take max usage per hour).</p>\n",
        "events": [
          "NrUsage"
        ],
        "name": "type",
        "units": null
      },
      {
        "definition": "<p>The amount of usage. The unit varies, depending on the metric field.</p>\n",
        "events": [
          "NrUsage"
        ],
        "name": "usage",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Account Usage"
      }
    ],
    "definition": "<p>This event records usage every hour and is used to see usage reported per product.</p>\n",
    "name": "NrUsage"
  },
  {
    "attributes": [
      {
        "definition": "<p>The total time that it took for the query to execute.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "durationMs",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The number of events, if any, that were inspected while executing the query.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "inspectedCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The New Relic capability where the query originated.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "productCapability",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The NRQL query string that was executed.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "query",
        "units": null
      },
      {
        "definition": "<p>The event type specified in the <code>FROM</code> clause of the query. A query with a <code>FROM</code> clause can return more than one event type.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "query.eventType",
        "units": null
      },
      {
        "definition": "<p>The count of data points scanned, if any, to return the query result.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "scannedEvents",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The API key used to execute the query for &#39;query-api&#39; sources.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "source.apiKeyId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The dashboard ID that executed this query for &#39;dashboard&#39; sources. This value can be entered into the <a href=\"/docs/query-your-data/explore-query-data/dashboards/introduction-dashboards/#dashboards-search\">dashboard search bar</a> to display that dashboard.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "source.dashboardId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The Grafana dashboard where the query originated for &#39;prometheus-api&#39; sources.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "source.grafana.dashboardId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The panel on the Grafana dashboard where the query originated for &#39;prometheus-api&#39; sources.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "source.grafana.panelId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>String description of the feature or tool the query originates from. Available values:</p>\n<ul>\n<li>apm: Application performance monitoring</li>\n<li>dashboard: Dashboards displayed on the New Relic platform</li>\n<li>Distributed tracing: Distributed tracing</li>\n<li>errors-inbox: Errors inbox</li>\n<li>infrastructure: Infrastructure monitoring</li>\n<li>metrics-explorer: Metrics explorer</li>\n<li>nerdgraph: NerdGraph, our GraphQL API</li>\n<li>nerdpack: A New Relic application or visualization</li>\n<li>New Relic user interface: A New Relic curated UI</li>\n<li>nrql-console: NRQL console</li>\n<li>prometheus-api: Queries via the Prometheus integration</li>\n<li>query-api: Insights query API</li>\n<li>query-builder: Query builder</li>\n<li>service-levels: Service levels</li>\n<li>other: Source not specified</li>\n</ul>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "source.name",
        "units": null
      },
      {
        "definition": "<p>The unique identifier of the Nerdpack that executed the query, for &#39;nerdpack&#39; sources.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "source.nerdpackUuid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The PromQL query string that was translated into the NRQL query that was executed, for &#39;prometheus-api&#39; sources.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "source.promql.query",
        "units": null
      },
      {
        "definition": "<p>The URL of the UI page that executed this query.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "source.url",
        "units": null
      },
      {
        "definition": "<p>The ID of the dashboard widget that executed the query, for &#39;dashboard&#39; sources.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "source.widgetId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Indicates the successful or unsuccessful execution of the query. Available values:</p>\n<ul>\n<li><code>successful</code>: Query executed successfully.</li>\n<li><code>error</code>: Query failed to execute due to an error.</li>\n<li><code>cancelled</code>: Query execution stopped before fully completed.</li>\n<li><code>limited - congestion</code>: Query dropped due to internal New Relic system congestion.</li>\n<li><code>limited - inspected count</code>: Query dropped due to your account being over its inspected count resource limits.</li>\n<li><code>limited - memory estimation</code>: Query dropped as its estimated memory consumption exceeded system constraints. Reducing the complexity of this query could increase the probability of successful execution.</li>\n<li><code>limited</code>: Query dropped, no reason available.</li>\n<li><code>timedout</code>: Query timed out before execution completed and did not return results. Try reducing the scope of the query by changing the time window or reducing the number of EventTypes in the FROM clause.</li>\n</ul>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "status",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The difference in minutes between the <code>SINCE</code> and <code>UNTIL</code> clauses of the query. Often, the longer the time window, the longer the query will run and the more events will be inspected.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "timeWindowMinutes",
        "units": {
          "label": "minutes (min)"
        }
      },
      {
        "definition": "<p>The UNIX timestamp (milliseconds since epoch) of the date and time when the query was executed.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The email address of the user who executed the query.</p>\n",
        "events": [
          "NrdbQuery"
        ],
        "name": "user",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Account Usage"
      }
    ],
    "definition": "<p>Each time a query is executed on behalf of a user in your account an NrdbQuery event is published. Events contain the full query string, information about when and where it originated, and how it performed.</p>\n",
    "name": "NrdbQuery"
  },
  {
    "attributes": [
      {
        "definition": "<p>The name of the PageAction, as defined by you in your code.</p>\n",
        "events": [
          "PageAction"
        ],
        "name": "actionName",
        "units": null
      },
      {
        "definition": "<p>The ID of your application, as recorded by New Relic.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application that handled the request as shown in browser monitoring.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The organization that owns the Autonomous System Number. Often an ISP, sometimes a private company or institution.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnOrganization",
        "units": null
      },
      {
        "definition": "<p>The height of the end user&#39;s browser window at the time when the PageAction occurred.</p>\n",
        "events": [
          "PageAction"
        ],
        "name": "browserHeight",
        "units": null
      },
      {
        "definition": "<p>The width of the end user&#39;s browser window at the time when the PageAction occurred.</p>\n",
        "events": [
          "PageAction"
        ],
        "name": "browserWidth",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the browser initiated the page load. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The URL on which the PageAction is occurring. This URL may be different from the Page URL.</p>\n",
        "events": [
          "PageAction"
        ],
        "name": "currentUrl",
        "units": null
      },
      {
        "definition": "<p>The type of device that loaded the page: either mobile, tablet, or desktop.</p>\n",
        "events": [
          "PageAction",
          "PageViewTiming"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>The name of the invoked web transaction. For example: Controller/customers/show.</p>\n",
        "events": [
          "PageAction",
          "PageView"
        ],
        "name": "name",
        "units": null
      },
      {
        "definition": "<p>The URL of the page that was loaded for the PageView, for example: <a href=\"http://www.newrelic.com\">http://www.newrelic.com</a>. This URL does not include query parameters.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "pageUrl",
        "units": null
      },
      {
        "definition": "<p>The URL of the page that loaded before the PageAction occurred.</p>\n",
        "events": [
          "PageAction"
        ],
        "name": "referrerUrl",
        "units": null
      },
      {
        "definition": "<p>The specific administrative division within a country where the <code>PageView</code> event occurred. In the United States, regions correspond to state codes, such as WA or NY. Outside the United States, a country&#39;s regions correspond to numerical codes.</p>\n<p>In the United States, regions correspond to <a href=\"http://pe.usps.gov/text/pub28/28apb.htm\">state codes</a> ; for example, <code>WA</code> or <code>NY</code>. Outside the United States, a country&#39;s regions correspond to <a href=\"https://www.maxmind.com/download/geoip/misc/region_codes.csv\">numerical codes</a> .</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>A unique identifier for a single session. The session is tracked in browser storage using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#web_storage_concepts_and_usage\">Web Storage API</a>, subject to each browser&#39;s implementation and handling. The session will automatically reset or refresh after a set period of inactivity or a pre-defined duration limit, whichever is less.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "session",
        "units": null
      },
      {
        "definition": "<p>Allows for linking together end user actions from session traces and querying across browser events. Not all browser events will have this. For example, PageView events complete before the first session trace harvest. Also, initial page loads from BrowserInteraction won&#39;t always include this. </p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageViewTiming"
        ],
        "name": "sessionTraceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time (in seconds) elapsed from when the page was requested to when the PageAction was created.</p>\n",
        "events": [
          "PageAction"
        ],
        "name": "timeSinceLoad",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The browser’s name, such as Chrome and Firefox, obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentName",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported operating system, such as Windows or Linux, that it is running on. This is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentOS",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported software version, which is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentVersion",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Browser agent"
      }
    ],
    "definition": "<p>The Browser PageAction event is the result of the addPageAction API call that sends a user-defined name and optional attributes, along with several default attributes, such as app and geographic data. It is used to capture any event that is not already tracked automatically by the Browser agent, such as clicking a Subscribe button or accessing a tutorial.</p>\n",
    "name": "PageAction"
  },
  {
    "attributes": [
      {
        "definition": "<p>The ID of your application, as recorded by New Relic.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application that handled the request as shown in browser monitoring.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The organization that owns the Autonomous System Number. Often an ISP, sometimes a private company or institution.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnOrganization",
        "units": null
      },
      {
        "definition": "<p>The backend response time in seconds.</p>\n<p>Includes app server (webAppDuration) and network time (networkDuration), as well as queue time if available. Representative of Time to First Byte. Derived from the Navigation Timing API as responseStart minus navigationStart.</p>\n",
        "events": [
          "PageView"
        ],
        "name": "backendDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The transaction name (page view group) as it appears in New Relic Browser.</p>\n",
        "events": [
          "PageView",
          "PageViewTiming"
        ],
        "name": "browserTransactionName",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The time to establish a connection with the server in seconds (inclusive of secureHandshakeDuration). Derived from the Navigation Timing API as connectEnd minus connectStart.</p>\n",
        "events": [
          "PageView"
        ],
        "name": "connectionSetupDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The country from which the browser initiated the page load. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>The type of device that loaded the page: mobile, tablet, or desktop.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageView"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>The time to resolve the DNS record for the top-level resource (in seconds). Derived from the Navigation Timing API as domainLookupEnd minus domainLookupStart.</p>\n",
        "events": [
          "PageView"
        ],
        "name": "dnsLookupDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The time it takes to parse the HTML into a DOM and retrieve or execute synchronous scripts.</p>\n<p>Often includes time for scripts and static assets to be retrieved. Derived from the Navigation Timing API as domContentLoadedEventEnd minus responseStart.</p>\n",
        "events": [
          "PageView"
        ],
        "name": "domProcessingDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The domain portion of the request URL.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError",
          "PageView",
          "PageViewTiming"
        ],
        "name": "domain",
        "units": null
      },
      {
        "definition": "<p>The browser response time in seconds. Derived from the Navigation Timing API as loadEventEnd minus navigationStart.</p>\n",
        "events": [
          "PageView"
        ],
        "name": "duration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p><code>firstContentfulPaint</code> is the point when the browser renders the first bit of content from the DOM, which may be text, an image, SVG, or a &lt;canvas&gt; element.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a> contains detailed information about its <code>Paint Timing</code> API and <code>firstContentfulPaint</code>.</p>\n<p>See <a href=\"/docs/browser/new-relic-browser/getting-started/compatibility-requirements-new-relic-browser#browser-types\">Compatibility and requirements for New Relic Browser</a> for additional information about <code>firstContentfulPaint</code> browser compatibility.</p>\n",
        "events": [
          "BrowserInteraction",
          "PageView"
        ],
        "name": "firstContentfulPaint",
        "units": null
      },
      {
        "definition": "<p><code>firstPaint</code> marks the point when the browser renders anything that is visually different from what was on the screen prior to navigation. This includes non-default background paint and the enclosing box of an iframe.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a> contains detailed information about its <code>Paint Timing</code> API and <code>firstPaint</code>.</p>\n<p>See <a href=\"/docs/browser/new-relic-browser/getting-started/compatibility-requirements-new-relic-browser#browser-types\">Compatibility and requirements for New Relic Browser</a> for additional information about <code>firstPaint</code> browser compatibility.</p>\n",
        "events": [
          "BrowserInteraction",
          "PageView"
        ],
        "name": "firstPaint",
        "units": null
      },
      {
        "definition": "<p>The name of the invoked web transaction. For example: Controller/customers/show.</p>\n",
        "events": [
          "PageAction",
          "PageView"
        ],
        "name": "name",
        "units": null
      },
      {
        "definition": "<p>The total time spent in redirects as well as in requesting and receiving HTML (in seconds). If webAppDuration (server side timing information) is not available, time on the server will be included in this duration.</p>\n",
        "events": [
          "PageView"
        ],
        "name": "networkDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The page rendering phase is the time between DOM completion (<code>domContentLoadedEventEnd</code>) and the window load event (<code>loadEventEnd</code>), in seconds. This phase measures browser-side processing and display of the page content.</p>\n",
        "events": [
          "PageView"
        ],
        "name": "pageRenderingDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The URL of the page that was loaded for the PageView, for example: <a href=\"http://www.newrelic.com\">http://www.newrelic.com</a>. This URL does not include query parameters.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "pageUrl",
        "units": null
      },
      {
        "definition": "<p>The total time the request waits for a service to initiate (in seconds).</p>\n",
        "events": [
          "PageView"
        ],
        "name": "queueDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The specific administrative division within a country where the <code>PageView</code> event occurred. In the United States, regions correspond to state codes, such as WA or NY. Outside the United States, a country&#39;s regions correspond to numerical codes.</p>\n<p>In the United States, regions correspond to <a href=\"http://pe.usps.gov/text/pub28/28apb.htm\">state codes</a> ; for example, <code>WA</code> or <code>NY</code>. Outside the United States, a country&#39;s regions correspond to <a href=\"https://www.maxmind.com/download/geoip/misc/region_codes.csv\">numerical codes</a> .</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>A subset of connectionSetupDuration, the time to establish a TLS connection with the server. Derived from the Navigation Timing API as connectEnd minus secureConnectionStart (in seconds).</p>\n",
        "events": [
          "PageView"
        ],
        "name": "secureHandshakeDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>A unique identifier for a single session. The session is tracked in browser storage using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#web_storage_concepts_and_usage\">Web Storage API</a>, subject to each browser&#39;s implementation and handling. The session will automatically reset or refresh after a set period of inactivity or a pre-defined duration limit, whichever is less.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "session",
        "units": null
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The browser’s name, such as Chrome and Firefox, obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentName",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported operating system, such as Windows or Linux, that it is running on. This is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentOS",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported software version, which is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentVersion",
        "units": null
      },
      {
        "definition": "<p>The total server-side response time for the top-level resource of the <code>PageView</code> (in seconds) as measured by the APM agent.</p>\n<p>This does not include network time to transmit the request or receive the response, or server-side request queueing time. The webAppDuration is measured by the APM agent and must be injected into the browser monitoring script before the request is fully finished. Its end point is slightly before the end point used to calculate the duration attribute on Transactions, so webAppDuration will be slightly less than the duration attribute on Transactions in practice.</p>\n",
        "events": [
          "PageView"
        ],
        "name": "webAppDuration",
        "units": {
          "label": "seconds (s)"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Browser agent"
      }
    ],
    "definition": "<p>PageView events occur when a user navigates to (loads) a new page. It tracks geographic and timing data for each browser page load.</p>\n",
    "name": "PageView"
  },
  {
    "attributes": [
      {
        "definition": "<p>The ID of your application, as recorded by New Relic.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application that handled the request as shown in browser monitoring.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLatitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnLongitude",
        "units": null
      },
      {
        "definition": "<p>The organization that owns the Autonomous System Number. Often an ISP, sometimes a private company or institution.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "asnOrganization",
        "units": null
      },
      {
        "definition": "<p>The transaction name (page view group) as it appears in New Relic Browser.</p>\n",
        "events": [
          "PageView",
          "PageViewTiming"
        ],
        "name": "browserTransactionName",
        "units": null
      },
      {
        "definition": "<p>The city in which the event occurred, such as Portland or Seattle.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "Mobile",
          "MobileApplicationExit",
          "MobileCrash",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "city",
        "units": null
      },
      {
        "definition": "<p>The country from which the browser initiated the page load. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "countryCode",
        "units": null
      },
      {
        "definition": "<p>An important, user-centric metric for measuring visual stability because it helps quantify how often users experience unexpected layout shifts—a low CLS helps ensure that the page is delightful. </p>\n<p>For more information, see the <a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details/#interactivity-metrics\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "cumulativeLayoutShift",
        "units": null
      },
      {
        "definition": "<p>The type of device that loaded the page: either mobile, tablet, or desktop.</p>\n",
        "events": [
          "PageAction",
          "PageViewTiming"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>The domain portion of the request URL.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError",
          "PageView",
          "PageViewTiming"
        ],
        "name": "domain",
        "units": null
      },
      {
        "definition": "<p>This is the ID, if specified, of the <code>largestContentfulPaint</code> element. This value will only be reported with the LCP metric. This value can be null or empty and is captured from the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/LargestContentfulPaint/id\"><code>LargestContentfulPaint.id</code> property</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "elementId",
        "units": null
      },
      {
        "definition": "<p>This is the reported size of the <code>largestContentfulPaint</code> element. This value will only be reported with the LCP metric and is captured from the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/LargestContentfulPaint/size\"><code>LargestContentfulPaint.size</code> property</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "elementSize",
        "units": null
      },
      {
        "definition": "<p>This is the tag name of the <code>largestContentfulPaint</code> element. This value will only be reported with the LCP metric and is captured from the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\"><code>LargestContentfulPaint.element.tagName</code> property</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "elementTagName",
        "units": null
      },
      {
        "definition": "<p>This is the request url of the <code>largestContentfulPaint</code> element, if the element is an image. This value will only be reported with the LCP metric. The value is captured from the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/LargestContentfulPaint/url\"><code>LargestContentfulPaint.url</code> property</a> (if present).</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "elementUrl",
        "units": null
      },
      {
        "definition": "<p>The first contentful paint timing rounded down to the nearest second. This attribute only occurs when the value of the <code>timingName</code> attribute is <code>firstContentfulPaint</code>.</p>\n<p>For more information, see the <a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details/#interactivity-metrics\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "firstContentfulPaint",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The first input delay measures the duration from the first interaction to the moment the web application responds. The duration is rounded down to the nearest millisecond. This attribute only occurs when the value of the <code>timingName</code> attribute is <code>firstInteraction</code>.</p>\n<p>The <code>firstInputDelay</code> goes one step beyond <code>firstInteraction</code>. It measures how long the user has to wait until their action is registered and they receive the expected response from the browser.</p>\n<p>For more information, see the <a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details/#interactivity-metrics\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "firstInputDelay",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>First interaction is a timing that captures when customers begin to engage with a website, such as clicking a button or typing in a box. The first interaction timing is rounded down to the nearest second. This attribute only occurs when the value of the <code>timingName</code> attribute is <code>firstInteraction</code>.</p>\n<p>Events are handled at the document level with <code>addEventListener()</code>. Clicking an empty page will cause an interaction to fire. Valid event <code>type</code> values include:</p>\n<ul>\n<li><code>pointerdown</code></li>\n<li><code>mousedown</code></li>\n<li><code>click</code></li>\n<li><code>keydown</code></li>\n<li><code>touchstart</code></li>\n</ul>\n<p>Note that this attribute represents the time of the event; to know which event triggered it, use <code>interactionType</code>.</p>\n<p>For more information, see the <a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details/#interactivity-metrics\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "firstInteraction",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The first paint timing rounded down to the nearest second. Occurs when the <code>timingName</code> value is firstPaint.</p>\n<p>For more information, see the <a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details/#interactivity-metrics\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "firstPaint",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>A core web vitals metric that assesses responsiveness, or how quickly a web page visually responds to user actions like clicks or taps. A low INP means the page was consistently able to respond quickly to all or nearly all user interactions.</p>\n<p>For more information, see the <a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details/#interactivity-metrics\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "interactionToNextPaint",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The event type of the first interaction that occurs on the web application. The type can be one of the following:</p>\n<ul>\n<li><code>pointerdown</code></li>\n<li><code>mousedown</code></li>\n<li><code>click</code></li>\n<li><code>keydown</code></li>\n<li><code>touchstart</code></li>\n</ul>\n<p>This attribute only occurs when the value of the <code>timingName</code> attribute is <code>firstInteraction</code>. For more information, see the <a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "interactionType",
        "units": null
      },
      {
        "definition": "<p>This metric reports the render time of the largest content element visible in the viewport, which is a more accurate way to measure when the main content of a page is loaded and useful.</p>\n<p>For more information, see the <a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details/#interactivity-metrics\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "largestContentfulPaint",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Generated for every <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Long_task\">long task</a> entry that the <code>PerformanceLongTaskTiming</code> API observes throughout the life of the page.</p>\n<p>For more information, see the <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details/#interactivity-metrics\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "longTask",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>This is the estimated effective bandwidth in megabits per second at the time the PageViewTiming event was captured. This value will only be reported with the <code>largestContentfulPaint</code> and <code>firstInteraction</code> events on compatible browsers.</p>\n<p>The value is captured from the NetworkInformation API. For a full browser compatibility table and description see the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\">MDN web docs</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "networkDownlink",
        "units": null
      },
      {
        "definition": "<p>This is the effective connection type (&#39;slow-2g&#39;, &#39;2g&#39;, &#39;3g&#39; or &#39;4g&#39;), of the current network connection at the time the PageViewTiming event was captured. This value will only be reported with the <code>largestContentfulPaint</code> and <code>firstInteraction</code> events on compatible browsers.</p>\n<p>The value is captured from the NetworkInformation API. For a full browser compatibility table and description see MDN Web Docs: <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/effectiveType\">NetworkInformation.effectiveType</a>. See also <a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Effective_connection_type\">Effective connection type</a> for a description of each type.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "networkEffectiveType",
        "units": null
      },
      {
        "definition": "<p>This is the estimated round trip time, in milliseconds, of the current network connection at the time the PageViewTiming event was captured. This value will only be reported with the <code>largestContentfulPaint</code> and <code>firstInteraction</code> events on compatible browsers.</p>\n<p>The value is captured from the NetworkInformation API. For a full browser compatibility table and description see the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/rtt\">MDN web docs</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "networkRtt",
        "units": null
      },
      {
        "definition": "<p>This is the type of the current network connection at the time the PageViewTiming event was captured. This value will only be reported with the <code>largestContentfulPaint</code> and <code>firstInteraction</code> events on compatible browsers.</p>\n<p>The value is captured from the NetworkInformation API. For a full browser compatibility table and description see the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/type\">MDN web docs</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "networkType",
        "units": null
      },
      {
        "definition": "<p>Sent when the document becomes hidden to the user, which could mean the user switched tabs or navigated to another page. This is the most reliable event to indicate the (potential) end of a user session or visit to the page.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "pageHide",
        "units": null
      },
      {
        "definition": "<p>The URL of the page that was loaded for the PageView, for example: <a href=\"http://www.newrelic.com\">http://www.newrelic.com</a>. This URL does not include query parameters.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "pageUrl",
        "units": null
      },
      {
        "definition": "<p>The specific administrative division within a country where the <code>PageView</code> event occurred. In the United States, regions correspond to state codes, such as WA or NY. Outside the United States, a country&#39;s regions correspond to numerical codes.</p>\n<p>In the United States, regions correspond to <a href=\"http://pe.usps.gov/text/pub28/28apb.htm\">state codes</a> ; for example, <code>WA</code> or <code>NY</code>. Outside the United States, a country&#39;s regions correspond to <a href=\"https://www.maxmind.com/download/geoip/misc/region_codes.csv\">numerical codes</a> .</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "regionCode",
        "units": null
      },
      {
        "definition": "<p>A unique identifier for a single session. The session is tracked in browser storage using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#web_storage_concepts_and_usage\">Web Storage API</a>, subject to each browser&#39;s implementation and handling. The session will automatically reset or refresh after a set period of inactivity or a pre-defined duration limit, whichever is less.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "session",
        "units": null
      },
      {
        "definition": "<p>Allows for linking together end user actions from session traces and querying across browser events. Not all browser events will have this. For example, PageView events complete before the first session trace harvest. Also, initial page loads from BrowserInteraction won&#39;t always include this. </p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageViewTiming"
        ],
        "name": "sessionTraceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The name of the timing event: firstPaint, firstContentfulPaint, or firstInteraction.</p>\n<p>The name of the timing event: <code>firstPaint</code>, <code>firstContentfulPaint</code>, or <code>firstInteraction</code>. For more information, see the <a href=\"https://docs.newrelic.com/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details\"><code>PageViewTiming</code> documentation</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "timingName",
        "units": null
      },
      {
        "definition": "<p>The browser’s name, such as Chrome and Firefox, obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentName",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported operating system, such as Windows or Linux, that it is running on. This is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentOS",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported software version, which is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming"
        ],
        "name": "userAgentVersion",
        "units": null
      },
      {
        "definition": "<p>The windowLoad event is fired when the whole has loaded. </p>\n<p>See supporting documentation and browser compatibility for the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/load_event\">Window Load event MDN docs</a>.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "windowLoad",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Sent when the page unloading is detected, which marks the definitive end of a user session or visit to the page.</p>\n",
        "events": [
          "PageViewTiming"
        ],
        "name": "windowUnload",
        "units": {
          "label": "seconds (s)"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Browser agent"
      }
    ],
    "definition": "<p>This event represents individual timing events during a page view lifecycle (for example, time when the largest element is displayed, or the first user interaction with the page). See <a href=\"/docs/browser/new-relic-browser/page-load-timing-resources/pageviewtiming-async-or-dynamic-page-details/#interactivity-metrics\">the PageViewTiming docs</a> for a list of reported events.</p>\n",
    "name": "PageViewTiming"
  },
  {
    "attributes": [
      {
        "definition": "<p>The name of the agent (Infrastructure).</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "agentName",
        "units": null
      },
      {
        "definition": "<p>The version of the New Relic Infrastructure agent.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "agentVersion",
        "units": null
      },
      {
        "definition": "<p>The full command line for the current process. This command line will be sanitized by default to strip options and arguments from the command line to prevent accidental leakage of private information.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "commandLine",
        "units": null
      },
      {
        "definition": "<p>The command name of the process corresponds, in most cases, to the base name of the command line&#39;s path to the form of the process.</p>\n<Callout variant=\"tip\">\n  In Linux, this attribute is retrieved from `/proc/PID/stat`, in which strings longer than 16 characters are silently truncated. Internally, linux command names can be up to 16 bytes long. More information can be found in the [proc manual pages](https://man7.org/linux/man-pages/man5/proc.5.html).\n</Callout>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "commandName",
        "units": null
      },
      {
        "definition": "<p>Returns true if the process is running inside a container; false if not inside a container.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "contained",
        "units": null
      },
      {
        "definition": "<p>For processes running inside a Docker container, the unique Docker container ID for this process.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "containerId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>For processes running inside a Docker container, the Docker image ID for the image this process is based on.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "containerImage",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>For processes running inside a Docker container, the Docker image name for this process.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "containerImageName",
        "units": null
      },
      {
        "definition": "<p>For processes running inside a Docker container, the Docker label associated with this process.</p>\n<p>Docker labels consist of key/value pairs. The key is captured in the attribute name as <code>containerLabel_KEY</code>, and the returned <code>string</code>type value is then associated with that attribute.</p>\n<p>For example, to query a <code>owner</code> label for containers maintained by <code>Test User</code>:</p>\n<p>SELECT cpuPercent FROM ProcessSample WHERE containerLabel_owner = &#39;Test User&#39;</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "containerLabel_KEY",
        "units": null
      },
      {
        "definition": "<p>For processes running inside a Docker container, the Docker container name for this process</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "containerName",
        "units": null
      },
      {
        "definition": "<p>The combined CPU usage (of all types, including system, user, I/O, depending on platform), by CPU core, for this process at a single point in time. For systems with more than one CPU core, this percentage may be greater than 100%.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "cpuPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The system-time CPU usage component used by the process.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "cpuSystemPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The user-time CPU usage component used by the process.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "cpuUserPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The number of times that alert conditions violated critical thresholds, causing critical violations and opening incidents. If this attribute does not exist on the sample, it has zero violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "criticalViolationCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>New Relic&#39;s unique ID number for the entity that is reporting data. This is used by New Relic to distinguish between customers and their entities.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "entityID",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The fully qualified (DNS) hostname.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "fullHostname",
        "units": null
      },
      {
        "definition": "<p>The short version of the entity&#39;s name.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "hostname",
        "units": null
      },
      {
        "definition": "<p>The number of bytes read from all storage devices per second.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "ioReadBytesPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of disk read operations by the process per second.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "ioReadCountPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>Counts bytes that the process caused to be fetched from the storage layer.</p>\n<p>Count of bytes that the process caused to be fetched from the storage layer. Done at submit_bio() level, so it&#39;s accurate for block-backed filesystems. Read from the <code>/proc/PID/io</code> file, where PID is the ID of the process being monitored.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "ioTotalReadBytes",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Cumulative number of disk read operations by this process.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "ioTotalReadCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Counts bytes that the process caused to be sent to the storage layer.</p>\n<p>Counts bytes that the process caused to be sent to the storage layer. This is done at page-dirtying time. Read from the <code>/proc/PID/io</code> file, where PID is the ID of the process being monitored.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "ioTotalWriteBytes",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Cumulative number of disk write operations by this process.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "ioTotalWriteCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of bytes written by this process per second.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "ioWriteBytesPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of disk write operations by the process per second.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "ioWriteCountPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The Linux kernel version, in string format.</p>\n<p>This attribute is available only for systems on a Linux platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "kernelVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the Linux distribution the server is using.</p>\n<p>This attribute is available only for systems on a Linux platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "linuxDistribution",
        "units": null
      },
      {
        "definition": "<p>The total amount of physical memory in use for the process, in bytes.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "memoryResidentSizeBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The total amount of virtual memory reserved for the process, in bytes.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "memoryVirtualSizeBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The operating system on which the agent is installed.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "operatingSystem",
        "units": null
      },
      {
        "definition": "<p>The unique parent identification number (PID) for this process.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "parentProcessId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The display name (friendly name) of the process.</p>\n<p>This is derived from the command name by default, but if it can be determined that the process is associated with a service from the inventory system, New Relic uses the service name. Another source of the name may be a parsed component of the command line, if it is a known command line format (for example, Java app).</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "processDisplayName",
        "units": null
      },
      {
        "definition": "<p>The unique process identification number for this process.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "processId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The current process status as a platform-specific state name. For example: running or sleeping.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "state",
        "units": null
      },
      {
        "definition": "<p>The number of threads active for this process.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "threadCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The user identifier under which the process is running.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "userId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The username of the owner of the process; for example, root or ubuntu.</p>\n",
        "events": [
          "ProcessSample"
        ],
        "name": "userName",
        "units": null
      },
      {
        "definition": "<p>The number of times that alert conditions violated warning thresholds, causing warning violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "warningViolationCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The Windows family indicates whether the OS is a server or desktop targeted system.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsFamily",
        "units": null
      },
      {
        "definition": "<p>The full product name of the installed version of Windows.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsPlatform",
        "units": null
      },
      {
        "definition": "<p>The combined Windows version and build-number string of the OS.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsVersion",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Infrastructure"
      }
    ],
    "definition": "<p>ProcessSample event gathers detailed resource usage information from programs running on a single system. New Relic samples the data every 20 seconds for every active process and packages it into a ProcessSample event, which then sends the raw data to New Relic&#39;s collectors every 60 seconds.</p>\n",
    "name": "ProcessSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>The service level entity name.</p>\n",
        "events": [
          "ServiceLevelSnapshot"
        ],
        "name": "entity.name",
        "units": null
      },
      {
        "definition": "<p>The remaining error budget (based on the SLI compliance and the service level objective).</p>\n",
        "events": [
          "ServiceLevelSnapshot"
        ],
        "name": "remainingErrorBudget",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The service level compliance (% of good vs valid events) calculated for the configured SLO time window (1d, 7d or 28d).</p>\n",
        "events": [
          "ServiceLevelSnapshot"
        ],
        "name": "sliCompliance",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The time at which the calculation was done, in Unix time.</p>\n",
        "events": [
          "ServiceLevelSnapshot"
        ],
        "name": "timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Service levels"
      }
    ],
    "definition": "<p>This event is created when we periodically calculate the compliance and remaining error budget for a given service level entity.</p>\n",
    "name": "ServiceLevelSnapshot"
  },
  {
    "attributes": [
      {
        "definition": "<p>The unique numeric identifier assigned by New Relic for the service/app that generated the transaction.</p>\n",
        "events": [
          "NrUsage",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The application name set in the New Relic agent configuration.</p>\n",
        "events": [
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>Autonomous System Number: a unique number identifying a group of IP networks that serves the content to the end user.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "MobileHandledException",
          "MobileRequest",
          "MobileRequestError",
          "MobileSession",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "asn",
        "units": null
      },
      {
        "definition": "<p>The latitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s latitude.</p>\n",
        "events": [
          "Span"
        ],
        "name": "asn.latitude",
        "units": null
      },
      {
        "definition": "<p>The longitude of the geographic center of the postal code where the Autonomous System Network is registered. This is not the end user&#39;s longitude.</p>\n",
        "events": [
          "Span"
        ],
        "name": "asn.longitude",
        "units": null
      },
      {
        "definition": "<p>The organization that owns the Autonomous System Number. Often an ISP, sometimes a private company or institution.</p>\n",
        "events": [
          "Span"
        ],
        "name": "asn.organization",
        "units": null
      },
      {
        "definition": "<p>The name of the browser application monitored by New Relic.</p>\n",
        "events": [
          "Span"
        ],
        "name": "browserApp.name",
        "units": null
      },
      {
        "definition": "<p>A unique value generated for each browser interaction captured by the New Relic agent.</p>\n",
        "events": [
          "Span"
        ],
        "name": "browserInteraction.id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the interaction. This is either the targetGroupedUrl or the custom name set via the API.</p>\n",
        "events": [
          "Span"
        ],
        "name": "browserInteraction.name",
        "units": null
      },
      {
        "definition": "<p>Optional: If the application received a response from the request.url, this is the size of that response in bytes.</p>\n",
        "events": [
          "Span"
        ],
        "name": "bytes.received",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Optional: If the application sent a request to the request.url, this is the size of that request in bytes.</p>\n",
        "events": [
          "Span"
        ],
        "name": "bytes.sent",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The type of span. Values include: generic, datastore, and http (external). The category type dictates UI display options (available charts, for example) and the collection of specific attributes.</p>\n",
        "events": [
          "Span"
        ],
        "name": "category",
        "units": null
      },
      {
        "definition": "<p>The absolute path to the source code file where the span&#39;s instrumented function is defined. Supports the New Relic CodeStream <a href=\"/docs/codestream/how-use-codestream/performance-monitoring/\">code-level metrics integration</a>.</p>\n",
        "events": [
          "Span"
        ],
        "name": "code.filepath",
        "units": null
      },
      {
        "definition": "<p>The name of the instrumented function or method associated with the span. Supports the New Relic CodeStream <a href=\"/docs/codestream/how-use-codestream/performance-monitoring/\">code-level metrics integration</a>.</p>\n",
        "events": [
          "Span"
        ],
        "name": "code.function",
        "units": null
      },
      {
        "definition": "<p>The line number where the span&#39;s instrumented function is defined. Supports the New Relic CodeStream <a href=\"/docs/codestream/how-use-codestream/performance-monitoring/\">code-level metrics integration</a>.</p>\n",
        "events": [
          "Span"
        ],
        "name": "code.lineno",
        "units": null
      },
      {
        "definition": "<p>The namespace (class/ module name) in which the span&#39;s instrumented function is defined. Supports the New Relic CodeStream <a href=\"/docs/codestream/how-use-codestream/performance-monitoring/\">code-level metrics integration</a>.</p>\n",
        "events": [
          "Span"
        ],
        "name": "code.namespace",
        "units": null
      },
      {
        "definition": "<p>For &#39;datastore&#39; category spans: the database vendor or driver, such as Redis and MySql. For &#39;external&#39; category spans: the framework used to make the connection. For example: OkHttp and Net::HTTP.</p>\n",
        "events": [
          "Span"
        ],
        "name": "component",
        "units": null
      },
      {
        "definition": "<p>The type of connection which the device was using, such as 2G or 3G.</p>\n",
        "events": [
          "Span"
        ],
        "name": "connection.type",
        "units": null
      },
      {
        "definition": "<p>The container ID. The New Relic APM agent collects this when running in a containerized context.</p>\n",
        "events": [
          "Span"
        ],
        "name": "containerId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The database name. For example, the name of the database for a given JDBC database connection URL in Java. Reported when the category is &#39;datastore.&#39; Example value: dbc.url=&quot;jdbc:mysql://mysql-db.servers.net:3306/accounts&quot;.</p>\n",
        "events": [
          "Span"
        ],
        "name": "db.instance",
        "units": null
      },
      {
        "definition": "<p>The database statement in the format most permissive by configuration. Reported when &#39;category&#39; is &#39;datastore.&#39; For a span with a &#39;component&#39; of &#39;MySql&#39;, an example value would be: SELECT * FROM accounts.</p>\n",
        "events": [
          "Span"
        ],
        "name": "db.statement",
        "units": null
      },
      {
        "definition": "<p>The display size of the device: small, normal, large, xlarge.</p>\n",
        "events": [
          "Span"
        ],
        "name": "device.size",
        "units": null
      },
      {
        "definition": "<p>The type of device that loaded the page: mobile, tablet, or desktop.</p>\n",
        "events": [
          "Span"
        ],
        "name": "device.type",
        "units": null
      },
      {
        "definition": "<p>The span&#39;s elapsed time in seconds.</p>\n",
        "events": [
          "Span"
        ],
        "name": "duration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The span&#39;s elapsed time in milliseconds.</p>\n",
        "events": [
          "Span"
        ],
        "name": "duration.ms",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The GUID, assigned by New Relic, for the New Relic-monitored entity (host, application, etc.). This value is stored as a Base64 encoded value.</p>\n",
        "events": [
          "NrAiIncident",
          "NrAiIncidentExternal",
          "NrAiSignal",
          "Span"
        ],
        "name": "entity.guid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the entity (for example, an app name, host name, or workload name).</p>\n",
        "events": [
          "Span",
          "WorkloadStatus"
        ],
        "name": "entity.name",
        "units": null
      },
      {
        "definition": "<p>Makes a span as having an error.</p>\n",
        "events": [
          "Span"
        ],
        "name": "error",
        "units": null
      },
      {
        "definition": "<p>The full class name for the span&#39;s error.</p>\n",
        "events": [
          "Span"
        ],
        "name": "error.class",
        "units": null
      },
      {
        "definition": "<p>The message for the span&#39;s error.</p>\n",
        "events": [
          "Span"
        ],
        "name": "error.message",
        "units": null
      },
      {
        "definition": "<p>HTTP error response code. Only present when code represents either a client error or server error.</p>\n",
        "events": [
          "Span"
        ],
        "name": "error.statusCode",
        "units": null
      },
      {
        "definition": "<p>Either <code>HTTPError</code> or <code>NetworkFailure</code>, depending on whether the error is a result of a failed request to a host or a failure on the cellular network.</p>\n",
        "events": [
          "Span"
        ],
        "name": "error.type",
        "units": null
      },
      {
        "definition": "<p>The city in which the span occurred.</p>\n",
        "events": [
          "Span"
        ],
        "name": "geo.city",
        "units": null
      },
      {
        "definition": "<p>The country from which the browser initiated the page load. For a list of country codes, see ISO 3166-1 alpha-2.</p>\n",
        "events": [
          "Span"
        ],
        "name": "geo.countryCode",
        "units": null
      },
      {
        "definition": "<p>The specific administrative division within a country where the event occurred. In the United States, regions correspond to state codes, such as WA or NY. Outside the United States, a country&#39;s regions correspond to numeric codes.</p>\n<p>In the United States, regions correspond to <a href=\"http://pe.usps.gov/text/pub28/28apb.htm\">state codes</a> ; for example, <code>WA</code> or <code>NY</code>. Outside the United States, a country&#39;s regions correspond to <a href=\"http://geolite.maxmind.com/download/geoip/misc/region_codes.csv\">numerical codes</a> .</p>\n",
        "events": [
          "Span"
        ],
        "name": "geo.regionCode",
        "units": null
      },
      {
        "definition": "<p>The grouped URL of the view that made the AJAX request. For example: myapp.com/acct/*/dash.</p>\n",
        "events": [
          "Span"
        ],
        "name": "groupedPageUrl",
        "units": null
      },
      {
        "definition": "<p>The grouped URL of the AJAX request. For example: <code>myapp.com/acct/\\*/ajax</code>.</p>\n",
        "events": [
          "AjaxRequest",
          "Span"
        ],
        "name": "groupedRequestUrl",
        "units": null
      },
      {
        "definition": "<p>The unique identifier for the segment. This is equivalent to spanID in OpenTracing semantics.</p>\n",
        "events": [
          "MobileRequest",
          "MobileRequestError",
          "Span"
        ],
        "name": "guid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application host that processed this request, as identified by the reporting agent. Examples: ip-10-1-34-88, ede2fff1efbe, apphost.domain.com.</p>\n",
        "events": [
          "Span"
        ],
        "name": "host",
        "units": null
      },
      {
        "definition": "<p>The HTTP method or language method/function used for the call. Reported when the category is http. Examples: GET, POST.</p>\n",
        "events": [
          "Span"
        ],
        "name": "http.method",
        "units": null
      },
      {
        "definition": "<p>The HTTP status code associated with the transaction. Some agents use <code>httpResponseCode</code>, which is equivalent.</p>\n",
        "events": [
          "NrIntegrationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "http.statusCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The response status message for a web request. </p>\n",
        "events": [
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "http.statusText",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>External URI for the call. Reported when &#39;category&#39; is &#39;http.&#39; It MUST NOT contain user, password, or query parameters. It MUST be set as an agent attribute and not as an intrinsic so that attribute filtering can be applied.</p>\n",
        "events": [
          "Span"
        ],
        "name": "http.url",
        "units": null
      },
      {
        "definition": "<p>The HTTP response code associated with the transaction. Some agents use <code>http.statusCode</code>, which is equivalent.</p>\n",
        "events": [
          "NrIntegrationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "httpResponseCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The total duration, in milliseconds, spent on JavaScript execution. (This attribute doesn&#39;t exist for initial page load events.)</p>\n",
        "events": [
          "Span"
        ],
        "name": "jsDuration.ms",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The name of the mobile application that created this span.</p>\n",
        "events": [
          "Span"
        ],
        "name": "mobileApp.name",
        "units": null
      },
      {
        "definition": "<p>The span name that best represents the operation.</p>\n",
        "events": [
          "Span"
        ],
        "name": "name",
        "units": null
      },
      {
        "definition": "<p>The error message associated with the iOS NSURL Error code. See <code>networkError.code</code> for more information.</p>\n",
        "events": [
          "Span"
        ],
        "name": "networkError",
        "units": null
      },
      {
        "definition": "<p>If the error is a network error, this is the iOS network error code. For Android applications, this is the mapped value.</p>\n",
        "events": [
          "Span"
        ],
        "name": "networkError.code",
        "units": null
      },
      {
        "definition": "<p>Where the data point entered the platform (such as <code>browser.spans</code>, or <code>api.traces</code>).</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Span"
        ],
        "name": "newRelic.ingestPoint",
        "units": null
      },
      {
        "definition": "<p>The name of the trace filter used by the Infinite Tracing trace observer to select this trace.</p>\n",
        "events": [
          "DistributedTraceSummary",
          "Span"
        ],
        "name": "newRelic.traceFilter.type",
        "units": null
      },
      {
        "definition": "<p>The URL of the page that was loaded for the PageView, for example: <a href=\"http://www.newrelic.com\">http://www.newrelic.com</a>. This URL does not include query parameters.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "pageUrl",
        "units": null
      },
      {
        "definition": "<p>The span parent&#39;s GUID (may not be present for the root span).</p>\n",
        "events": [
          "Span"
        ],
        "name": "parentId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The address of the datastore, including the host name and the port, path, or ID. Reported when &#39;category&#39; is &#39;datastore.&#39; Example: mysql-db.servers.net:3306.</p>\n",
        "events": [
          "Span"
        ],
        "name": "peer.address",
        "units": null
      },
      {
        "definition": "<p>The hostname of the database. Reported when &#39;category&#39; is &#39;datastore.&#39; Example: mysql-db.servers.net.</p>\n",
        "events": [
          "Span"
        ],
        "name": "peer.hostname",
        "units": null
      },
      {
        "definition": "<p>The request port.</p>\n",
        "events": [
          "AjaxRequest",
          "Span"
        ],
        "name": "port",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>A priority ranking that dictates whether the trace will be reported in situations where the sampling reservoir has exceeded capacity. This is a float value set by the first New Relic agent that’s part of the request.</p>\n",
        "events": [
          "Span"
        ],
        "name": "priority",
        "units": null
      },
      {
        "definition": "<p>The ID of the New Relic agent that reported the data.</p>\n",
        "events": [
          "Span"
        ],
        "name": "realAgentId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The payload size of the request body, in bytes.</p>\n",
        "events": [
          "Span"
        ],
        "name": "request.bodySize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The fully qualified domain name (FQDN) of the request URL.</p>\n",
        "events": [
          "Span"
        ],
        "name": "request.domain",
        "units": null
      },
      {
        "definition": "<p>The HTTP request method used. Example values: POST, GET.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.method",
        "units": null
      },
      {
        "definition": "<p>The path that the application attempted to access when the request or error occurred.</p>\n",
        "events": [
          "Span"
        ],
        "name": "request.path",
        "units": null
      },
      {
        "definition": "<p>The URL of the AJAX request. For example: myapp.com/acct/1/ajax.</p>\n",
        "events": [
          "Span"
        ],
        "name": "request.url",
        "units": null
      },
      {
        "definition": "<p>Optional: The response that is sent from the requestDomain for the HTTP error (up to 4096 bytes).</p>\n",
        "events": [
          "Span"
        ],
        "name": "response.body",
        "units": null
      },
      {
        "definition": "<p>The payload size of the response body, in bytes.</p>\n",
        "events": [
          "Span"
        ],
        "name": "response.bodySize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The HTTP response code. Example: 200.</p>\n",
        "events": [
          "Span"
        ],
        "name": "response.statusCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>Whether the request route was chosen to be sampled for tracing.</p>\n",
        "events": [
          "Span"
        ],
        "name": "sampled",
        "units": null
      },
      {
        "definition": "<p>The name of the instrumented service that created this span.</p>\n",
        "events": [
          "Span"
        ],
        "name": "service.name",
        "units": null
      },
      {
        "definition": "<p>A unique identifier for a single session. The session is tracked in browser storage using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#web_storage_concepts_and_usage\">Web Storage API</a>, subject to each browser&#39;s implementation and handling. The session will automatically reset or refresh after a set period of inactivity or a pre-defined duration limit, whichever is less.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "JavaScriptError",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "session",
        "units": null
      },
      {
        "definition": "<p>Spans that represent a call to another service or to a datastore have the value <code>client</code>.</p>\n",
        "events": [
          "Span"
        ],
        "name": "span.kind",
        "units": null
      },
      {
        "definition": "<p>The time in milliseconds between the start of the BrowserInteraction and the start of the request.</p>\n",
        "events": [
          "Span"
        ],
        "name": "timeSinceBrowserInteractionStart.ms",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The duration, in milliseconds, from the start of the request (timestamp) to the end of the last callback. This is not just an additive function; the callback time can overlap with the wait time.</p>\n",
        "events": [
          "Span"
        ],
        "name": "timeToLastCallbackEnd.ms",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time, in milliseconds, from the start of the interaction to the loadEventStart, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n",
        "events": [
          "Span"
        ],
        "name": "timeToLoadEventStart.ms",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time, in milliseconds, from the start of the request to when all resulting callbacks (including callbacks of subsequent AJAX requests) are complete.</p>\n",
        "events": [
          "Span"
        ],
        "name": "timeToSettle.ms",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "AjaxRequest",
          "BrowserInteraction",
          "BrowserTiming",
          "PageAction",
          "PageView",
          "PageViewTiming",
          "Span"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "DistributedTraceSummary",
          "MobileRequest",
          "MobileRequestError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "trace.id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "MobileRequest",
          "MobileRequestError",
          "Span"
        ],
        "name": "traceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the New Relic transaction associated with the span.</p>\n",
        "events": [
          "Span"
        ],
        "name": "transaction.name",
        "units": null
      },
      {
        "definition": "<p>The GUID of the New Relic transaction associated with the span.</p>\n",
        "events": [
          "Span"
        ],
        "name": "transactionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The browser’s name, such as Chrome and Firefox, obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "Span"
        ],
        "name": "userAgent.name",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported operating system, such as Windows or Linux, that it is running on. This is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "Span"
        ],
        "name": "userAgent.os",
        "units": null
      },
      {
        "definition": "<p>The browser’s reported software version, which is obtained from the User-Agent header of an HTTP request.</p>\n",
        "events": [
          "Span"
        ],
        "name": "userAgent.version",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Distributed Tracing"
      }
    ],
    "definition": "<p>Span events are created when New Relic agents, or other tracing instrumentation tools, instrument operations that are part of a distributed trace. The operations that a span can represent include datastore queries, calls to other services, and method-level timing. For example, in an HTTP service, a span is created at the beginning of an HTTP request and completed when the HTTP server returns a response. Span attributes contain important information about the operation that the span represents (such as duration, host data, etc.), including trace state details (such as traceId, guid) that allow New Relic to connect spans together in a trace.</p>\n",
    "name": "Span"
  },
  {
    "attributes": [
      {
        "definition": "<p>The name of the agent (Infrastructure).</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "agentName",
        "units": null
      },
      {
        "definition": "<p>The version of the New Relic Infrastructure agent.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "agentVersion",
        "units": null
      },
      {
        "definition": "<p>The average disk queue length derived from (Disk Transfers/sec) * (Disk secs/Transfer).</p>\n<p>This metric is only available for the <strong>Windows</strong> Infrastructure agent, <strong>version 1.5.0 or higher</strong>.</p>\n<p>This value coincides with the following Windows Performance counter:</p>\n<p>\\LogicalDisk(<em>&lt;drive letter&gt;</em>)\\Avg. Disk Queue Length</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "avgQueueLen",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The average disk read queue length derived from (Disk Reads/sec) * (Disk secs/Read).</p>\n<p>This metric is only available for the <strong>Windows</strong> Infrastructure agent, <strong>version 1.5.0 or higher</strong>.</p>\n<p>This value coincides with the following Windows Performance counter:</p>\n<p>\\LogicalDisk(<em>&lt;drive letter&gt;</em>)\\Avg. Disk Read Queue Length</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "avgReadQueueLen",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The average disk write queue length derived from (Disk Writes/sec) * (Disk secs/Write)</p>\n<p>This metric is only available for the <strong>Windows</strong> Infrastructure agent, <strong>version 1.5.0 or higher</strong>.</p>\n<p>This value coincides with the following Windows Performance counter:</p>\n<p>\\LogicalDisk(<em>&lt;drive letter&gt;</em>)\\Avg. Disk Write Queue Length</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "avgWriteQueueLen",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of times that alert conditions violated critical thresholds, causing critical violations and opening incidents. If this attribute does not exist on the sample, it has zero violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "criticalViolationCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Length of the disk queue at the time of sampling.</p>\n<p>This metric is only available for the <strong>Windows</strong> Infrastructure Agent, <strong>version 1.5.0 or higher</strong>.</p>\n<p>This value coincides with the following Windows Performance counter:</p>\n<p>\\LogicalDisk(<em>&lt;drive letter&gt;</em>)\\Current Disk Queue Length</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "currentQueueLen",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The device name.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "device",
        "units": null
      },
      {
        "definition": "<p>The cumulative disk space that is free across all supported devices. (To find per-device values, use StorageSample events.)</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskFreeBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The cumulative disk emptiness percentage across all supported devices. To find per-device values, use <a href=\"https://docs.newrelic.com/attribute-dictionary/?event=StorageSample\">StorageSample events</a>.</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskFreePercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The cumulative total disk space across all supported devices. To find per-device values, use <a href=\"https://docs.newrelic.com/attribute-dictionary/?event=StorageSample\">StorageSample events</a>.</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskTotalBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The cumulative disk space used across all supported devices, in bytes. To find per-device values, use <a href=\"https://docs.newrelic.com/attribute-dictionary/?event=StorageSample\">StorageSample events</a>.</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The cumulative disk fullness percentage across all supported devices. To find per-device values, use <a href=\"https://docs.newrelic.com/attribute-dictionary/?event=StorageSample\">StorageSample events</a>.</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskUsedPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>A unique identifier concatenating the entityId and mountPoint attributes.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "entityAndMountPoint",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>New Relic&#39;s unique ID number for the entity that is reporting data. This is used by New Relic to distinguish between customers and their entities.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "entityID",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The operating system&#39;s specific file system type. For example: xfs or ext4.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "filesystemType",
        "units": null
      },
      {
        "definition": "<p>The fully qualified (DNS) hostname.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "fullHostname",
        "units": null
      },
      {
        "definition": "<p>The short version of the entity&#39;s name.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "hostname",
        "units": null
      },
      {
        "definition": "<p>The number of free inodes.</p>\n<p>This metric is only available for the <strong>Linux</strong> Infrastructure Agent, <strong>version 1.5.0 or higher</strong>.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "inodesFree",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of total available inodes.</p>\n<p>This metric is only available for the <strong>Linux</strong> Infrastructure Agent, <strong>version 1.5.0 or higher</strong>.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "inodesTotal",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of inodes in use.</p>\n<p>This metric is only available for the <strong>Linux</strong> Infrastructure Agent, <strong>version 1.5.0 or higher</strong>.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "inodesUsed",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of inodes in use as a fraction of the total.</p>\n<p>This metric is only available for the <strong>Linux</strong> Infrastructure Agent, <strong>version 1.5.0 or higher</strong>.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "inodesUsedPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>If the system is set to be read-only, this value will be true, otherwise false. These values are string literals, not booleans, to allow for faceting.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "isReadOnly",
        "units": null
      },
      {
        "definition": "<p>The Linux kernel version, in string format.</p>\n<p>This attribute is available only for systems on a Linux platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "kernelVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the Linux distribution the server is using.</p>\n<p>This attribute is available only for systems on a Linux platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "linuxDistribution",
        "units": null
      },
      {
        "definition": "<p>The location of the device in the operating system&#39;s file system.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "mountPoint",
        "units": null
      },
      {
        "definition": "<p>The operating system on which the agent is installed.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "operatingSystem",
        "units": null
      },
      {
        "definition": "<p>The number of bytes read per second from the device during the last sampling period.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "readBytesPerSecond",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The average number of read I/O operations per second during the sampling period.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "readIoPerSecond",
        "units": null
      },
      {
        "definition": "<p>The percent of totalUtilizationPercent dedicated to read I/O operations.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "readUtilizationPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The percent of time spent waiting for read or write disk I/O operations.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "totalUtilizationPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The number of times that alert conditions violated warning thresholds, causing warning violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "warningViolationCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The Windows family indicates whether the OS is a server or desktop targeted system.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsFamily",
        "units": null
      },
      {
        "definition": "<p>The full product name of the installed version of Windows.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsPlatform",
        "units": null
      },
      {
        "definition": "<p>The combined Windows version and build-number string of the OS.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsVersion",
        "units": null
      },
      {
        "definition": "<p>The number of bytes per second written to the device during the last sampling period.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "writeBytesPerSecond",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The average number of write I/O operations per second during the sample period.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "writeIoPerSecond",
        "units": null
      },
      {
        "definition": "<p>The percent of totalUtilizationPercent dedicated to write I/O operations.</p>\n",
        "events": [
          "StorageSample"
        ],
        "name": "writeUtilizationPercent",
        "units": {
          "label": "percentage (%)"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Infrastructure"
      }
    ],
    "definition": "<p>StorageSample event represents a single storage device associated with a server. Each sample gathers descriptive information about the device, the type of file system it uses, and its current usage and capacity. New Relic samples this data every 20 seconds for each mounted file system and packages it into a StorageSample event, then sends the raw data to New Relic&#39;s collectors every 60 seconds.</p>\n",
    "name": "StorageSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>Reports the version of the browser used for browser based synthetic monitors. This is only set for Chrome 112 and newer.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "browserVersion",
        "units": null
      },
      {
        "definition": "<p>Reports the device orientation configuration (<code>PORTRAIT</code> or <code>LANDSCAPE</code>) if <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/device-emulation/\">device emulation</a> is enabled.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "deviceOrientation",
        "units": null
      },
      {
        "definition": "<p>Reports the device type configuration (<code>MOBILE</code> or <code>TABLET</code>) if <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/device-emulation/\">device emulation</a> is enabled.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "deviceType",
        "units": null
      },
      {
        "definition": "<p>The total time between the beginning of the first HTTP request and the end of the final HTTP request, in milliseconds.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "duration",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The unique identifier of the monitor referenced in New Relic One.</p>\n",
        "events": [
          "JavaScriptError",
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "entityGuid",
        "units": null
      },
      {
        "definition": "<p>Error message returned during the monitor run, if an error message was received.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "error",
        "units": null
      },
      {
        "definition": "<p>The total time spent executing the synthetic check, in milliseconds. </p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "executionDuration",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>A boolean value that indicates if custom headers are defined for a ping or simple browser monitor.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "hasUserDefinedHeaders",
        "units": null
      },
      {
        "definition": "<p>A unique number identifying this monitor check.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A boolean value that indicates the monitor status is muted. This will only be set if the monitor configuration is changed to muted. This will not be set if the monitor is part of a <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/monitor-downtimes-disable-monitoring-during-scheduled-maintenance-times/\">monitor downtime</a> or <a href=\"/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/muting-rules-suppress-notifications/\">muting rules</a> configuration.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "isMuted",
        "units": null
      },
      {
        "definition": "<p>The location from which the monitor check ran. For example, AWS_US_EAST_1 identifies a location on the east coast of the United States.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "location",
        "units": null
      },
      {
        "definition": "<p>The check location (user friendly).</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "locationLabel",
        "units": null
      },
      {
        "definition": "<p>The version of the Docker or Kubernetes running on the minion.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticsPrivateMinion"
        ],
        "name": "minionContainerSystemVersion",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Represents how the minion is deployed (for example, wrapped as a Kubernetes pod).</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "minionDeploymentMode",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Indicates the monitor type for extended type monitors, including <code>BROKEN_LINKS</code>, <code>CERT_CHECK</code>, and <code>STEP_MONITOR</code>. This will otherwise be set to <code>NONE</code>.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "monitorExtendedType",
        "units": null
      },
      {
        "definition": "<p>A unique number identifying a particular monitor.</p>\n",
        "events": [
          "BrowserInteraction",
          "JavaScriptError",
          "SyntheticCheck"
        ],
        "name": "monitorId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the monitor, as shown in the Synthetics interface.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "monitorName",
        "units": null
      },
      {
        "definition": "<p>Whether the monitor run succeeded.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "result",
        "units": null
      },
      {
        "definition": "<p> Set to <code>CHROME_BROWSER</code> for browser based monitors and <code>NODE_API</code> for API based monitors if the check executed on a <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/new-runtime/\">non-legacy runtime</a>.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "runtimeType",
        "units": null
      },
      {
        "definition": "<p> The version of the <code>runtimeType</code> used if the check executed on a <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/new-runtime/\">non-legacy runtime</a>. </p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "runtimeTypeVersion",
        "units": null
      },
      {
        "definition": "<p>Set to <code>JAVASCRIPT</code> for non-ping monitors if the check executed on a <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/new-runtime/\">non-legacy runtime</a>.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "scriptLanguage",
        "units": null
      },
      {
        "definition": "<p>A comma separated list of <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/store-secure-credentials-scripted-browsers-api-tests/\">secure credential</a> names used in the monitor run. </p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "secureCredentials",
        "units": null
      },
      {
        "definition": "<p>The start time of the job in milliseconds since the Unix epoch. (See <a href=\"https://currentmillis.com\">https://currentmillis.com</a> for an example.)</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest",
          "SyntheticsPrivateLocationStatus"
        ],
        "name": "timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The size of the body request to the host, in bytes.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "totalRequestBodySize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The size of the header request to the host, in bytes.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "totalRequestHeaderSize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The size of the response body returned by the host, in bytes.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "totalResponseBodySize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The size of the response header returned by the host, in bytes.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "totalResponseHeaderSize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The monitor type. Options include: SIMPLE, BROWSER, SCRIPT_BROWSER, API_TEST.</p>\n<p>Each of these have user-friendly names, captured by the <code>typeLabel</code> attribute; these are, respectively: ping monitor, simple browser monitor, scripted browser monitor, and API test monitor.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "type",
        "units": null
      },
      {
        "definition": "<p>The user-friendly name of the monitor type.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "typeLabel",
        "units": null
      },
      {
        "definition": "<p>The days remaining until the configured expiration threshold on a certificate check monitor is reached. For private locations this requires Synthetics Job Manager release-350 and Node API runtime 1.2.58 or higher.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "userDaysUntilExpiration",
        "units": {
          "label": "days"
        }
      },
      {
        "definition": "<p>The days remaining until expiration for a domain tested by a certificate check monitor. For private locations this requires Synthetics Job Manager release-350 and Node API runtime 1.2.58 or higher.</p>\n",
        "events": [
          "SyntheticCheck"
        ],
        "name": "websiteDaysUntilExpiration",
        "units": {
          "label": "days"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Synthetics"
      }
    ],
    "definition": "<p>SyntheticCheck returns metrics from one run of a specific monitor. These metrics include duration information for the monitor, location of the monitor check, size of the request and response headers, the type of monitor, and a timestamp. Each time a synthetic monitor runs a check, details about the check are captured in the SyntheticCheck event type. SyntheticCheck events contain details specific to the check to provide visibility such as the status, type of monitor, and size of request and response headers.</p>\n",
    "name": "SyntheticCheck"
  },
  {
    "attributes": [
      {
        "definition": "<p>The full request URL.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "URL",
        "units": null
      },
      {
        "definition": "<p>The unique identifier of the check that triggered this request.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "checkId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A generalized version of the media type of the content returned by the host; for example, html or javascript. To query the exact media type, use the contentType attribute.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "contentCategory",
        "units": null
      },
      {
        "definition": "<p>The media type [external link] of the content returned by the host; for example, text/html or image/gif.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "contentType",
        "units": null
      },
      {
        "definition": "<p>The time from the start of the interaction to the domComplete, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information on timestamps, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\">DOMHighResTimeStamp</a>.</p>\n<p>For more information on document readiness status, see <a href=\"https://html.spec.whatwg.org/multipage/parsing.html#the-end\">Parsing HTML documents</a>.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\">Navigation and Resource Timing Load Performance Assessment</a> contains detailed information about its Navigation Timing API and <code>domComplete</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "domComplete",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time from the start of the interaction to the domContentLoadedEventEnd, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information on timestamps, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\">DOMHighResTimeStamp</a>.</p>\n<p>For more information on the <code>DOMContentLoaded</code> event, see <a href=\"https://html.spec.whatwg.org/multipage/parsing.html#the-end\">Parsing HTML documents</a>.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\">Navigation and Resource Timing Load Performance Assessment</a> contains detailed information about its Navigation Timing API and <code>domContentLoadedEventEnd</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "domContentLoadedEventEnd",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time from the start of the interaction to the domContentLoadedEventStart, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information on timestamps, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\">DOMHighResTimeStamp</a>.</p>\n<p>For more information on document readiness status, see <a href=\"https://html.spec.whatwg.org/multipage/parsing.html#the-end\">Parsing HTML documents</a>.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\">Navigation and Resource Timing Load Performance Assessment</a> contains detailed information about its Navigation Timing API and <code>domContentLoadedEventStart</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "domContentLoadedEventStart",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time from the start of the interaction to the domInteractive, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information on timestamps, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\">DOMHighResTimeStamp</a>.</p>\n<p>For more information on document readiness status, see <a href=\"https://html.spec.whatwg.org/multipage/parsing.html#the-end\">Parsing HTML documents</a>.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\">Navigation and Resource Timing Load Performance Assessment</a> contains detailed information about its Navigation Timing API and <code>domInteractive</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "domInteractive",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The domain portion of the request URL. To retrieve the entire URL, use the URL attribute.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "domain",
        "units": null
      },
      {
        "definition": "<p>The total time for this request, in milliseconds.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "duration",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The total time this request was blocked, in milliseconds.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "durationBlocked",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The total time this request was establishing a connection, in milliseconds. This is inclusive of the timing from durationSSL.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "durationConnect",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The total time this request resolving DNS, in milliseconds.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "durationDNS",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The total time this request was receiving data, in milliseconds.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "durationReceive",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The total time spent establishing an SSL connection, in milliseconds.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "durationSSL",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The total time this request was sending data, in milliseconds.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "durationSend",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The total time this request was waiting, in milliseconds.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "durationWait",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The unique identifier of the monitor referenced in New Relic One.</p>\n",
        "events": [
          "JavaScriptError",
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "entityGuid",
        "units": null
      },
      {
        "definition": "<p>Whether the resource returned by the host is from an external domain. Returns TRUE for an external domain.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "externalResource",
        "units": null
      },
      {
        "definition": "<p>firstContentfulPaint is the point when the browser renders the first bit of content from the DOM, which may be text, an image, SVG, or a &lt;canvas&gt; element.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a> contains detailed information about its Paint Timing API and <code>firstContentfulPaint</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "firstContentfulPaint",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>firstPaint marks the point when the browser renders anything that is visually different from what was on the screen prior to navigation. This includes non-default background paint and the enclosing box of an iframe.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a> contains detailed information about its Paint Timing API and <code>firstPaint</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "firstPaint",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The identifier that holds the URL that the minion is running jobs on.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "hierarchicalURL",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The hostname of the server that processed the request.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "host",
        "units": null
      },
      {
        "definition": "<p>A unique number identifying this monitor check.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Whether the request is an AJAX request, determined by the HTTP_X_REQUESTED_WITH header.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "isAjax",
        "units": null
      },
      {
        "definition": "<p>A boolean value that indicates the start point of request navigation in a scripted browser.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "isNavigationRoot",
        "units": null
      },
      {
        "definition": "<p>Alias for checkId.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "jobId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time from the start of the interaction to the loadEventEnd, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information on timestamps, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\">DOMHighResTimeStamp</a>.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\">Navigation and Resource Timing Load Performance Assessment</a> contains detailed information about its Navigation Timing API and <code>loadEventEnd</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "loadEventEnd",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time from the start of the interaction to the loadEventStart, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information on timestamps, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\">DOMHighResTimeStamp</a>.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\">Navigation and Resource Timing Load Performance Assessment</a> contains detailed information about its Navigation Timing API and <code>loadEventStart</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "loadEventStart",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The location from which the monitor check ran. For example, AWS_US_EAST_1 identifies a location on the east coast of the United States.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "location",
        "units": null
      },
      {
        "definition": "<p>The request location (user friendly).</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "locationLabel",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The average time of long running tasks.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "longRunningTasksAvgTime",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>A browser responds to user input by adding tasks to a queue on the main thread to be executed one by one. Any task taking 50 milliseconds or longer to execute is identified as a long running time.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics\">User-centric Performance Metrics</a> contains detailed information about its Paint Timing API and <code>longRunningTasksCount</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "longRunningTasksCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The maximum time of long running tasks.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "longRunningTasksMaxTime",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The minimum time of long running tasks.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "longRunningTasksMinTime",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The identifier that holds the IP address of the minion.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "minion",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unique identifier of this minion.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "minionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The number of jobs the minion received in five minutes.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "minionJobsReceived5MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion skipped in five minutes.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "minionJobsSkipped5MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The unique identifier of the monitor that the minion is running on.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "monitorId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the monitor, as shown in the Synthetics interface.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "monitorName",
        "units": null
      },
      {
        "definition": "<p>The boolean identifier that holds if the minion is connected to V2.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "nr.durationConnectV2",
        "units": null
      },
      {
        "definition": "<p>The total time to completely load and parse the initial HTML document, in milliseconds. This does not include external resources such as stylesheets, images and subframes.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "onPageContentLoad",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The total time to load the page and all dependent resources, in milliseconds.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "onPageLoad",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The page request to which the requested resource belongs. Page requests are numbered from page_0 upward.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "pageref",
        "units": null
      },
      {
        "definition": "<p>The identifier of the host system that the minion is running on. port: The unique identifier of the port.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "parentId",
        "units": null
      },
      {
        "definition": "<p>The path portion of the request URL. To retrieve the entire URL, use the URL attribute.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "path",
        "units": null
      },
      {
        "definition": "<p>The unique identifier of the port.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "port",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The size of the body request to the host, in bytes.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "requestBodySize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The size of the header request to the host, in bytes.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "requestHeaderSize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The size of the response body from the host, in bytes.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "responseBodySize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The HTTP response code returned by the host; for example, 200, 400, 503, atc.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "responseCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The size of the response header from the host, in bytes.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "responseHeaderSize",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The identifier that holds if the job has been timed out.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "responseStatus",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p> Set to <code>CHROME_BROWSER</code> for browser based monitors and <code>NODE_API</code> for API based monitors if the check executed on a <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/new-runtime/\">non-legacy runtime</a>.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "runtimeType",
        "units": null
      },
      {
        "definition": "<p> The version of the <code>runtimeType</code> used if the check executed on a <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/new-runtime/\">non-legacy runtime</a>. </p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "runtimeTypeVersion",
        "units": null
      },
      {
        "definition": "<p>Set to <code>JAVASCRIPT</code> for non-ping monitors if the check executed on a <a href=\"/docs/synthetics/synthetic-monitoring/using-monitors/new-runtime/\">non-legacy runtime</a>.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest"
        ],
        "name": "scriptLanguage",
        "units": null
      },
      {
        "definition": "<p>The IP address of the server that processed the request.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "serverIPAddress",
        "units": null
      },
      {
        "definition": "<p>How many days remain before the ssl certificate expires. This value is only created for ping monitors with the Verify SSL option enabled.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "sslCertificateExpirationDaysRemaining",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The epoch timestamp that the certificate expires in milliseconds. This value is only created for ping monitors with the Verify SSL option enabled.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "sslCertificateExpirationMs",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The start time of the job in milliseconds since the Unix epoch. (See <a href=\"https://currentmillis.com\">https://currentmillis.com</a> for an example.)</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest",
          "SyntheticsPrivateLocationStatus"
        ],
        "name": "timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time from the start of the interaction to the unloadEventEnd, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information on timestamps, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\">DOMHighResTimeStamp</a>.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\">Navigation and Resource Timing Load Performance Assessment</a> contains detailed information about its Navigation Timing API and <code>unloadEventEnd</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "unloadEventEnd",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time from the start of the interaction to the unloadEventStart, as defined by the Navigation Timing API. This attribute exists for initial page load events, not route changes.</p>\n<p>For more information on timestamps, see <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/DOMHighResTimeStamp\">DOMHighResTimeStamp</a>.</p>\n<p>Google&#39;s <a href=\"https://developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\">Navigation and Resource Timing Load Performance Assessment</a> contains detailed information about its Navigation Timing API and <code>unloadEventStart</code>.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "unloadEventStart",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The protocol (such as GET or POST) used to make the request.</p>\n",
        "events": [
          "SyntheticRequest"
        ],
        "name": "verb",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Synthetics"
      }
    ],
    "definition": "<p>SyntheticRequest returns results from individual HTTP requests made during a check. The data gathered includes job information, location, type of content for request, duration information, request size, and page load information. With each simple or scripted monitor check, we capture each individual HTTP request made during the check. The HTTP details are captured at a more granular level than the SyntheticsCheck event type.</p>\n",
    "name": "SyntheticRequest"
  },
  {
    "attributes": [
      {
        "definition": "<p>Total number of queued checks waiting to run in the private location.</p>\n",
        "events": [
          "SyntheticsPrivateLocationStatus"
        ],
        "name": "checksPending",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Total number of queued non-ping checks waiting to run in the private location using runtimes supported by synthetics job manager.</p>\n",
        "events": [
          "SyntheticsPrivateLocationStatus"
        ],
        "name": "jobManagerHeavyweightJobs",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Total number of queued non-ping checks waiting to run in the private location using runtimes supported by containerized private minion (CPM).</p>\n",
        "events": [
          "SyntheticsPrivateLocationStatus"
        ],
        "name": "minionHeavyweightJobs",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The private location name that New Relic sets internally, based on the accountId, location name, and private location key.</p>\n",
        "events": [
          "SyntheticsPrivateLocationStatus"
        ],
        "name": "name",
        "units": null
      },
      {
        "definition": "<p>Total number of queued ping checks waiting to run in the private location. Ping jobs can be ran by synthetics job manager or containerized private minions (CPM)</p>\n",
        "events": [
          "SyntheticsPrivateLocationStatus"
        ],
        "name": "pingJobs",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The start time of the job in milliseconds since the Unix epoch. (See <a href=\"https://currentmillis.com\">https://currentmillis.com</a> for an example.)</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticRequest",
          "SyntheticsPrivateLocationStatus"
        ],
        "name": "timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Synthetics"
      }
    ],
    "definition": "<p>Every monitor check running on a private location triggers capacity details for that private location. These details are captured in a SyntheticPrivateLocationStatus event. This provides visibility into the capacity of a private location and whether additional minions are required to support the workload.</p>\n",
    "name": "SyntheticsPrivateLocationStatus"
  },
  {
    "attributes": [
      {
        "definition": "<p>The identifier that holds what type of architecture the minion host uses.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionArchitecture",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The identifier of the minion build number.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionBuildNumber",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The version of the Docker or Kubernetes running on the minion.</p>\n",
        "events": [
          "SyntheticCheck",
          "SyntheticsPrivateMinion"
        ],
        "name": "minionContainerSystemVersion",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The version of Docker running in the minion.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionDockerVer",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The identifier of the minion host name.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionHostname",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unique identifier of this minion.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The IP address that the minion is running on.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionIpv4",
        "units": null
      },
      {
        "definition": "<p>The identifier that identifies if the minion is containerized or not. Returns FALSE if the minion is a Legacy Private Minion.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionIsContainerized",
        "units": null
      },
      {
        "definition": "<p>The identifier that identifies if the minion is private or not. Returns TRUE for a private minion.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionIsPrivate",
        "units": null
      },
      {
        "definition": "<p>The number of jobs this minion has failed.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsFailed",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of jobs the minion failed in fifteen minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsFailed15MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion failed in one minute.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsFailed1MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion failed in five minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsFailed5MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs this minion has finished.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsFinished",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of jobs the minion finished in fifteen minutes</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsFinished15MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion finished in one minute.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsFinished1MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion finished in five minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsFinished5MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The total number of internal engine errors in the minion.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsInternalEngineError",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of internal engine errors in the minion in fifteen minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsInternalEngineError15MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of internal engine errors in the minion in one minute.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsInternalEngineError1MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of internal engine errors in the minion in five minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsInternalEngineError5MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs this minion is currently working on.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsQueued",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of jobs the minion worked on in fifteen minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsQueued15MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion worked on in one minute.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsQueued1MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion worked on in five minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsQueued5MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs this minion has received to process.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsReceived",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of jobs the minion received in fifteen minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsReceived15MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion received in one minute.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsReceived1MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion received in five minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsReceived5MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion is running.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsRunning",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The total number of jobs the minion skipped.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsSkipped",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of jobs the minion skipped in fifteen minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsSkipped15MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion skipped in one minute.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsSkipped1MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs this minion has started.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsStarted",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of jobs the minion started in fifteen minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsStarted15MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion started in one minute.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsStarted1MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs the minion started in five minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsStarted5MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs that reached the maximum execution time.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsTimedout",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The number of jobs that reached the maximum execution time in fifteen minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsTimedout15MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs that reached the maximum execution time in one minute.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsTimedout1MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The number of jobs that reached the maximum execution time in five minutes.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionJobsTimedout5MinRate",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The location code this minion is operating in.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionLocation",
        "units": null
      },
      {
        "definition": "<p>The boolean identifier of the minion is private or not.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionLocationIsPrivate",
        "units": null
      },
      {
        "definition": "<p>The identifier of the operating system the minion is running.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionOsName",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The version of the operating system that the minion is running on.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionOsVersion",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The number of free physical memory in bytes that the minion has access to.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionPhysicalMemoryFreeBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The percentage of free physical memory that the minion has access to.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionPhysicalMemoryFreePercentage",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The total number of physical memory in bytes that the minion has access to.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionPhysicalMemoryTotalBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The amount of physical memory in bytes that the minion has used.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionPhysicalMemoryUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The percentage of used physical memory in the minion.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionPhysicalMemoryUsedPercentage",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The number of CPUs that the minion host has.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionProcessors",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The frequency in GHz in which the processors are running at.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionProcessorsFrequencyGHz",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The total percentage of the processor that the minion uses.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionProcessorsUsagePercentage",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The identifier of the minion provider.ider.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionProvider",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time which this specific minion started.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionStartTimestamp",
        "units": null
      },
      {
        "definition": "<p>The amount of free swap memory in bytes that the minion has access to.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionSwapMemoryFreeBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The percentage of free swap memory that is accessible by the minion.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionSwapMemoryFreePercentage",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The total number of swap memory in bytes that the minion has access to.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionSwapMemoryTotalBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The amount of swap memory in bytes that the minion has used.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionSwapMemoryUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The percentage of used swap memory in the minion.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionSwapMemoryUsedPercentage",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The time that the system has been running.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionSystemUptimeMs",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The time that minion has been running.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionUptimeMs",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The identifier of the virtual machine name the minion is running on.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionVmName",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The version of the Java virtual machine that the minion is running.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionVmSpecVersion",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The time that the Java virtual machine has been running.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionVmUptimeMs",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The identifier of the Java virtual machine vendor that the minion is running on. (Examples: Oracle Corporation, AdobeOpenJDK, etc.)</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionVmVendor",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The version of the virtual machine that the minion is running on.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionVmVersion",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The number of concurrent workers that can process jobs for Simple Browser, Scripted Browser, and API Test monitors.</p>\n",
        "events": [
          "SyntheticsPrivateMinion"
        ],
        "name": "minionWorkers",
        "units": {
          "label": "count"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Synthetics"
      }
    ],
    "definition": "<p>If you have private locations, such as those inside your firewall, you can view information regarding those locations with the SyntheticsPrivateMinion event. Each private minion running sends health details to SyntheticPrivateMinion every 30 seconds. This allows you to understand the health of the private minion running at the location.</p>\n",
    "name": "SyntheticsPrivateMinion"
  },
  {
    "attributes": [
      {
        "definition": "<p>The portion of free memory available to the server.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "MemoryFreePercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The name of the agent (Infrastructure).</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "agentName",
        "units": null
      },
      {
        "definition": "<p>The version of the New Relic Infrastructure agent.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "agentVersion",
        "units": null
      },
      {
        "definition": "<ul>\n<li><p>Linux: [/proc/cpuinfo: &#39;cpu cores&#39;] The number of cores within a single CPU.</p>\n</li>\n<li><p>Windows: [WMI win32_processor: &#39;NumberOfLogicalProcessors&#39;] The number of logical processors, including cores divided by hyperthreading.</p>\n</li>\n</ul>\n",
        "events": [
          "SystemSample"
        ],
        "name": "coreCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The portion of the current CPU utilization capacity that is idle.</p>\n<p>This is calculated as:</p>\n<p>(100.00 - cpuUserPercent - cpuSystemPercent - cpuIOWaitPercent) / elapsed_time</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "cpuIdlePercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The portion of the current CPU utilization composed only of I/O wait time usage.</p>\n<p>This is calculated as:</p>\n<p>current_sample_io_time - previous_sample_io_time) / elapsed_time</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "cpuIoWaitPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>Total CPU utilization as a percentage. This is not an actual recorded value; it is an alias that combines percentage data from cpuSystemPercent, cpuUserPercent, cpuIoWaitPercent and cpuStealPercent.</p>\n<p>This is calculated as:</p>\n<p>(cpuUserPercent + cpuSystemPercent + cpuIOWaitPercent + cpuStealPercent)</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "cpuPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The portion of time when a virtualized CPU is waiting for the hypervisor to make real CPU time available to it.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "cpuStealPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The portion of the current CPU utilization composed only of system time usage.</p>\n<p>This is calculated as:</p>\n<p>(current_sample_sys_time - previous_sample_sys_time) / elapsed_time</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "cpuSystemPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The portion of the current CPU utilization composed only of user time usage.</p>\n<p>This is calculated as:</p>\n<p>current_sample_user_time - previous_sample_user_time) / elapsed_time</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "cpuUserPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The number of times that alert conditions violated critical thresholds, causing critical violations and opening incidents. If this attribute does not exist on the sample, it has zero violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "criticalViolationCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The cumulative disk space that is free across all supported devices. (To find per-device values, use StorageSample events.)</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskFreeBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The cumulative disk emptiness percentage across all supported devices. To find per-device values, use <a href=\"https://docs.newrelic.com/attribute-dictionary/?event=StorageSample\">StorageSample events</a>.</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskFreePercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The portion of disk I/O utilization for read operations.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "diskReadUtilizationPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The number of read I/O operations per second.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "diskReadsPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>The cumulative total disk space across all supported devices. To find per-device values, use <a href=\"https://docs.newrelic.com/attribute-dictionary/?event=StorageSample\">StorageSample events</a>.</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskTotalBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The cumulative disk space used across all supported devices, in bytes. To find per-device values, use <a href=\"https://docs.newrelic.com/attribute-dictionary/?event=StorageSample\">StorageSample events</a>.</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The cumulative disk fullness percentage across all supported devices. To find per-device values, use <a href=\"https://docs.newrelic.com/attribute-dictionary/?event=StorageSample\">StorageSample events</a>.</p>\n",
        "events": [
          "StorageSample",
          "SystemSample"
        ],
        "name": "diskUsedPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The percent of time spent waiting for read or write disk I/O operations.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "diskUtilizationPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The portion of disk I/O utilization for write operations.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "diskWriteUtilizationPercent",
        "units": {
          "label": "percentage (%)"
        }
      },
      {
        "definition": "<p>The number of write I/O operations per second.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "diskWritesPerSecond",
        "units": {
          "label": "rate"
        }
      },
      {
        "definition": "<p>New Relic&#39;s unique ID number for the entity that is reporting data. This is used by New Relic to distinguish between customers and their entities.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "entityID",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The fully qualified (DNS) hostname.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "fullHostname",
        "units": null
      },
      {
        "definition": "<p>The short version of the entity&#39;s name.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "hostname",
        "units": null
      },
      {
        "definition": "<p>The Linux kernel version, in string format.</p>\n<p>This attribute is available only for systems on a Linux platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "kernelVersion",
        "units": null
      },
      {
        "definition": "<p>The name of the Linux distribution the server is using.</p>\n<p>This attribute is available only for systems on a Linux platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "linuxDistribution",
        "units": null
      },
      {
        "definition": "<p>Over the last fifteen minutes, the average number of system processes, threads, or tasks that are waiting and ready for CPU time.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "loadAverageFifteenMinute",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>Over the last 5 minutes, the average number of system processes, threads, or tasks that are waiting and ready for CPU time.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "loadAverageFiveMinute",
        "units": null
      },
      {
        "definition": "<p>Over the last minute, the average number of system processes, threads, or tasks that are waiting and ready for CPU time.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "loadAverageOneMinute",
        "units": null
      },
      {
        "definition": "<p>The portion of buffered memory available to this server, in bytes.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "memoryBuffers",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The total amount of cached memory, in bytes, available to this server.</p>\n<p>This metric is only available for the Linux Infrastructure agent, version 1.18.1 or higher.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "memoryCachedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The portion of free memory available to this server, in bytes.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "memoryFreeBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The portion of physical memory not used by the system, in bytes.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "memoryKernelFree",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The total amount of shared memory, in bytes, available to this server.</p>\n<p>This metric is only available for the Linux Infrastructure agent, version 1.18.1 or higher.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "memorySharedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The total amount of slab memory, in bytes, available to this server.</p>\n<p>This metric is only available for the Linux Infrastructure agent, version 1.18.1 or higher.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "memorySlabBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The total amount of memory, in bytes, available to this server.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "memoryTotalBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The portion of available memory that is in use on this server, in bytes.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "memoryUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The time difference in seconds between the host and the provided <a href=\"/docs/infrastructure/install-infrastructure-agent/configuration/infrastructure-agent-configuration-settings#ntp-metrics\">NTP hosts</a>.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "ntpOffset",
        "units": {
          "label": "seconds"
        }
      },
      {
        "definition": "<p>The operating system on which the agent is installed.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "operatingSystem",
        "units": null
      },
      {
        "definition": "<ul>\n<li><p>Linux: [/proc/cpuinfo: &#39;processor&#39;] The total number of cores in all CPUs.</p>\n</li>\n<li><p>Windows: [WMI win32_processor: &#39;NumberOfCores&#39;] The number of physical processors on the integrated circuit.</p>\n</li>\n</ul>\n",
        "events": [
          "SystemSample"
        ],
        "name": "processorCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The portion of available swap space on this server that is free, in bytes.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "swapFreeBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The amount of memory swapped in, in bytes.\nThis metric is only available for the Linux Infrastructure agent, version 1.32.0 or higher.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "swapInBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The amount of memory swapped out, in bytes.\nThis metric is only available for the Linux Infrastructure agent, version 1.32.0 or higher.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "swapOutBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The total amount of swap space available to the server, in bytes.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "swapTotalBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The portion of available swap space on this server that is in use, in bytes.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "swapUsedBytes",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>The time (date, hour, minute, second) at which the interaction occurred.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The amount of time the system has been active (running), in seconds.</p>\n",
        "events": [
          "SystemSample"
        ],
        "name": "uptime",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The number of times that alert conditions violated warning thresholds, causing warning violations.</p>\n",
        "events": [
          "ContainerSample",
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "warningViolationCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The Windows family indicates whether the OS is a server or desktop targeted system.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsFamily",
        "units": null
      },
      {
        "definition": "<p>The full product name of the installed version of Windows.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsPlatform",
        "units": null
      },
      {
        "definition": "<p>The combined Windows version and build-number string of the OS.</p>\n<p>This attribute is available only for systems on a Windows platform.</p>\n",
        "events": [
          "NetworkSample",
          "ProcessSample",
          "StorageSample",
          "SystemSample"
        ],
        "name": "windowsVersion",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Infrastructure"
      }
    ],
    "definition": "<p>The SystemSample event aggregates data describing the current overall state of the entire server. This data appears in the New Relic Infrastructure Hosts page to show usage trends for the associated host&#39;s main resources. These resources include CPU, memory, disk, and network. New Relic samples this data every 5 seconds and packages it into a SystemSample event, then sends the raw data to New Relic&#39;s collectors every 60 seconds.</p>\n",
    "name": "SystemSample"
  },
  {
    "attributes": [
      {
        "definition": "<p>The unique ID of the account associated with the service/application where the Transaction was created.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "accountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unique numeric identifier assigned by New Relic for the service/app that generated the transaction.</p>\n",
        "events": [
          "NrUsage",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The application name set in the New Relic agent configuration.</p>\n",
        "events": [
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>The number of database calls made by this transaction.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "databaseCallCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The database response time in seconds.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "databaseDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The total server-side response time for the transaction, in seconds. Does not include request queueing time.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "duration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Indicates whether an error was noticed during execution.</p>\n",
        "events": [
          "Transaction"
        ],
        "name": "error",
        "units": {
          "label": "Boolean"
        }
      },
      {
        "definition": "<p>(.NET and PHP agents only) This will be server and platform specific. The message contained within an error for the transaction. If an error occurs during a transaction, the error may skew the duration of the event.</p>\n",
        "events": [
          "Transaction"
        ],
        "name": "errorMessage",
        "units": null
      },
      {
        "definition": "<p>This will be server and platform specific. The class or classification of the error. If multiple errors occur, only the first will be shown. If an error occurs during a transaction, the error may skew the duration of the event.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "errorType",
        "units": null
      },
      {
        "definition": "<p>The time the transaction spent running the event loop. (Python agent only)</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "eventLoopTime",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Total time the transaction was running while blocked by an event loop process, subject to the threshold. (Python agent only)</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "eventLoopWait",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The number of external calls made by this transaction.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "externalCallCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The total response time of all external (out-of-process) services, in seconds.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "externalDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>(Ruby and Java agents only) The total time spent in garbage collection during this transaction, in seconds.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "gcCumulative",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The identifier for the transaction.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "guid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application host that processed this request.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "host",
        "units": null
      },
      {
        "definition": "<p>The HTTP status code associated with the transaction. Some agents use <code>httpResponseCode</code>, which is equivalent.</p>\n",
        "events": [
          "NrIntegrationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "http.statusCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The response status message for a web request. </p>\n",
        "events": [
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "http.statusText",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The HTTP response code associated with the transaction. Some agents use <code>http.statusCode</code>, which is equivalent.</p>\n",
        "events": [
          "NrIntegrationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "httpResponseCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The memcache response time, in seconds.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "memcacheDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The name of the transaction associated with this data. Ex: Controller/customers/show.</p>\n",
        "events": [
          "Transaction"
        ],
        "name": "name",
        "units": null
      },
      {
        "definition": "<p>If a distributed tracing payload is received, this is the account identifier for the transaction&#39;s upstream caller.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.account",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>If a distributed tracing payload is received, this is the application identifier. APM agents retrieve this value in the connect response under the key primary_application_id.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.app",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>When distributed tracing is enabled and a payload is received, the difference in time between the timestamp given for when the payload was sent and the moment it was processed.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.transportDuration",
        "units": null
      },
      {
        "definition": "<p>When a distributed tracing payload is received, the method of transport for the payload. Example values: Unknown, HTTP, HTTPS, Kafka, JMS, IronMQ, AMQP, Queue, or Other.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.transportType",
        "units": null
      },
      {
        "definition": "<p>If a distributed trace payload was received, the parent&#39;s data source type. Example values: App, Browser, Mobile.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.type",
        "units": null
      },
      {
        "definition": "<p>If a distributed trace payload was received, the guid of this parent transaction.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "parentId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Likelihood this event will be saved.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "priority",
        "units": null
      },
      {
        "definition": "<p>The total time the requester waits for a service to initiate, in seconds.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "queueDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The ID of the New Relic agent that reported the data.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "realAgentId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The types as read from the HTTP Accept request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.accept",
        "units": null
      },
      {
        "definition": "<p>Incoming request size in bytes as read from the <code>Content-Length</code> HTTP request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.contentLength",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Incoming request content-type as read from the HTTP request header <code>Content-Type</code>. Example value: <code>application/octet-stream</code>.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.contentType",
        "units": null
      },
      {
        "definition": "<p>The name from the HTTP host request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.host",
        "units": null
      },
      {
        "definition": "<p>The incoming request referer as read from the Referer request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.referer",
        "units": null
      },
      {
        "definition": "<p>The contents of the User-Agent HTTP header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.userAgent",
        "units": null
      },
      {
        "definition": "<p>The HTTP request method used. Example values: POST, GET.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.method",
        "units": null
      },
      {
        "definition": "<p>The incoming request path of the transaction. This does not include the protocol, host, port, or any query parameters. This is hardcoded into the JSON for transaction traces and, formerly, the error blobs.</p>\n",
        "events": [
          "Transaction"
        ],
        "name": "request.uri",
        "units": null
      },
      {
        "definition": "<p>The outgoing response size in bytes as read from the Content-Length response header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.headers.contentLength",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>For an HTTP response, the data type of the returned response. Example values: text/html, application/json.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.headers.contentType",
        "units": null
      },
      {
        "definition": "<p>The HTTP response code associated with the transaction.</p>\n",
        "events": [
          "NrIntegrationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.status",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>Indicates whether this event was sampled for inclusion in a distributed trace. Only present when distributed tracing is enabled.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "sampled",
        "units": null
      },
      {
        "definition": "<p>The sum of all async components&#39; duration, in seconds. An async component is a method or function where there is no instrumented encapsulating method or function.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "Transaction"
        ],
        "name": "totalTime",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "DistributedTraceSummary",
          "MobileRequest",
          "MobileRequestError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "trace.id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Provides a more specific level of detail about the transaction than transactionType. Example: Controller or Custom.</p>\n",
        "events": [
          "Transaction"
        ],
        "name": "transactionSubType",
        "units": null
      },
      {
        "definition": "<p>The type of the transaction. For example: Web or Background (non-web).</p>\n",
        "events": [
          "Transaction"
        ],
        "name": "transactionType",
        "units": null
      },
      {
        "definition": "<p>A unique ID (a randomly-generated string) used to identify a single request as it crosses application boundaries. If distributed tracing is enabled, this will be reported as <code>traceId</code>.</p>\n",
        "events": [
          "Transaction"
        ],
        "name": "tripId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The duration of the transaction, equivalent to duration.</p>\n",
        "events": [
          "Transaction"
        ],
        "name": "webDuration",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "APM"
      }
    ],
    "definition": "<p>A transaction is a logical unit of work in a software application, such as HTTP requests, SQL queries, background processes, message queue activity, etc. The Transaction event includes information about the app, database calls, the duration of the transaction, and any errors that may occur.</p>\n",
    "name": "Transaction"
  },
  {
    "attributes": [
      {
        "definition": "<p>The unique ID of the account associated with the service/application where the Transaction was created.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "accountId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The unique numeric identifier assigned by New Relic for the service/app that generated the transaction.</p>\n",
        "events": [
          "NrUsage",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "appId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The application name set in the New Relic agent configuration.</p>\n",
        "events": [
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "appName",
        "units": null
      },
      {
        "definition": "<p>The number of database calls made by this transaction.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "databaseCallCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The database response time in seconds.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "databaseDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The total server-side response time for the transaction, in seconds. Does not include request queueing time.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "duration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The class name or type for the error. This will be server and platform specific.</p>\n",
        "events": [
          "AwsLambdaInvocationError",
          "TransactionError"
        ],
        "name": "error.class",
        "units": null
      },
      {
        "definition": "<p>Determines whether an error is expected or not. Expected errors do not affect error rates or Apdex.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "error.expected",
        "units": null
      },
      {
        "definition": "<p>The error message for the transaction. This will be server and platform specific.</p>\n",
        "events": [
          "AwsLambdaInvocationError",
          "TransactionError"
        ],
        "name": "error.message",
        "units": null
      },
      {
        "definition": "<p>This will be server and platform specific. The class or classification of the error. If multiple errors occur, only the first will be shown. If an error occurs during a transaction, the error may skew the duration of the event.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "errorType",
        "units": null
      },
      {
        "definition": "<p>The time the transaction spent running the event loop. (Python agent only)</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "eventLoopTime",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>Total time the transaction was running while blocked by an event loop process, subject to the threshold. (Python agent only)</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "eventLoopWait",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The number of external calls made by this transaction.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "externalCallCount",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The total response time of all external (out-of-process) services, in seconds.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "externalDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>(Ruby and Java agents only) The total time spent in garbage collection during this transaction, in seconds.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "gcCumulative",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The identifier for the transaction.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "guid",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The name of the application host that processed this request.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "host",
        "units": null
      },
      {
        "definition": "<p>The HTTP status code associated with the transaction. Some agents use <code>httpResponseCode</code>, which is equivalent.</p>\n",
        "events": [
          "NrIntegrationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "http.statusCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The response status message for a web request. </p>\n",
        "events": [
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "http.statusText",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The HTTP response code associated with the transaction. Some agents use <code>http.statusCode</code>, which is equivalent.</p>\n",
        "events": [
          "NrIntegrationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "httpResponseCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>The memcache response time, in seconds.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "memcacheDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>If a distributed tracing payload is received, this is the account identifier for the transaction&#39;s upstream caller.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.account",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>If a distributed tracing payload is received, this is the application identifier. APM agents retrieve this value in the connect response under the key primary_application_id.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.app",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>When distributed tracing is enabled and a payload is received, the difference in time between the timestamp given for when the payload was sent and the moment it was processed.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.transportDuration",
        "units": null
      },
      {
        "definition": "<p>When a distributed tracing payload is received, the method of transport for the payload. Example values: Unknown, HTTP, HTTPS, Kafka, JMS, IronMQ, AMQP, Queue, or Other.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.transportType",
        "units": null
      },
      {
        "definition": "<p>If a distributed trace payload was received, the parent&#39;s data source type. Example values: App, Browser, Mobile.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "parent.type",
        "units": null
      },
      {
        "definition": "<p>If a distributed trace payload was received, the guid of this parent transaction.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "parentId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The listening port of the transaction that generated the event. This information will not always be available, so this attribute may not always be reported.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "port",
        "units": null
      },
      {
        "definition": "<p>Likelihood this event will be saved.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "priority",
        "units": null
      },
      {
        "definition": "<p>The total time the requester waits for a service to initiate, in seconds.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "queueDuration",
        "units": {
          "label": "seconds (s)"
        }
      },
      {
        "definition": "<p>The ID of the New Relic agent that reported the data.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "realAgentId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>The types as read from the HTTP Accept request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.accept",
        "units": null
      },
      {
        "definition": "<p>Incoming request size in bytes as read from the <code>Content-Length</code> HTTP request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.contentLength",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>Incoming request content-type as read from the HTTP request header <code>Content-Type</code>. Example value: <code>application/octet-stream</code>.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.contentType",
        "units": null
      },
      {
        "definition": "<p>The name from the HTTP host request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.host",
        "units": null
      },
      {
        "definition": "<p>The incoming request referer as read from the Referer request header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.referer",
        "units": null
      },
      {
        "definition": "<p>The contents of the User-Agent HTTP header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.headers.userAgent",
        "units": null
      },
      {
        "definition": "<p>The HTTP request method used. Example values: POST, GET.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "request.method",
        "units": null
      },
      {
        "definition": "<p>The outgoing response size in bytes as read from the Content-Length response header.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.headers.contentLength",
        "units": {
          "label": "bytes (B)"
        }
      },
      {
        "definition": "<p>For an HTTP response, the data type of the returned response. Example values: text/html, application/json.</p>\n",
        "events": [
          "AwsLambdaInvocation",
          "AwsLambdaInvocationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.headers.contentType",
        "units": null
      },
      {
        "definition": "<p>The HTTP response code associated with the transaction.</p>\n",
        "events": [
          "NrIntegrationError",
          "Transaction",
          "TransactionError"
        ],
        "name": "response.status",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>Indicates whether this event was sampled for inclusion in a distributed trace. Only present when distributed tracing is enabled.</p>\n",
        "events": [
          "Transaction",
          "TransactionError"
        ],
        "name": "sampled",
        "units": null
      },
      {
        "definition": "<p>A measure of &quot;thread utilization&quot;, representing the number of threads handling concurrent requests.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "threadConcurrency",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>The start time of the job in milliseconds since the Unix epoch.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "timestamp",
        "units": {
          "label": "milliseconds (ms)"
        }
      },
      {
        "definition": "<p>The unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "DistributedTraceSummary",
          "MobileRequest",
          "MobileRequestError",
          "Span",
          "Transaction",
          "TransactionError"
        ],
        "name": "trace.id",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>A unique ID (a randomly generated string) used to identify a single request as it crosses inter- and intra- process boundaries. This ID allows the linking of spans in a distributed trace. Included when distributed tracing is enabled.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "traceId",
        "units": {
          "label": "ID"
        }
      },
      {
        "definition": "<p>Name of the transaction in which the error occurred. Example value: Controller/customers/show. Value may be &#39;Unknown&#39; if an error occurs outside of a transaction.</p>\n",
        "events": [
          "AwsLambdaInvocationError",
          "TransactionError"
        ],
        "name": "transactionName",
        "units": null
      },
      {
        "definition": "<p>The UI display name equivalent of transactionName.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "transactionUiName",
        "units": null
      },
      {
        "definition": "<p>(Python agent only) The number of calls to read() by the WSGI server to handle request.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "wsgi.input.calls.read",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>(Python agent only) The number of calls to readline() by the WSGI server to handle request.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "wsgi.input.calls.readline",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>(Python agent only) The number of calls to readlines() by the WSGI server to handle request.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "wsgi.input.calls.readlines",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>(Python agent only) Number of calls to yield by the WSGI server to send response.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "wsgi.output.calls.write",
        "units": {
          "label": "count"
        }
      },
      {
        "definition": "<p>(Python agent only) Number of calls to yield by the WSGI server to send response.</p>\n",
        "events": [
          "TransactionError"
        ],
        "name": "wsgi.output.calls.yield",
        "units": {
          "label": "count"
        }
      }
    ],
    "dataSources": [
      {
        "name": "APM"
      }
    ],
    "definition": "<p>Transaction errors occur when a transaction throws an exception in the code path that was taken to complete that transaction. The number of transaction errors does not equal the number of transactions, because you can specify whether you want to collect, ignore, or mark errors as expected.</p>\n",
    "name": "TransactionError"
  },
  {
    "attributes": [
      {
        "definition": "<p>The common vulnerability and exposure ID assigned by the disclosing agency.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "cve",
        "units": null
      },
      {
        "definition": "<p>The vulnerablity&#39;s CVSS score as assigned by the disclosing agency.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "cvss.score",
        "units": null
      },
      {
        "definition": "<p>A breakdown of the CVSS score&#39;s components as assigned by the disclosing agency.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "cvss.vector",
        "units": null
      },
      {
        "definition": "<p>Long form description of the vulnerability. May include exploit risks, specific versions, other links.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "description",
        "units": null
      },
      {
        "definition": "<p>A URL linking to detailed information on the vulnerability from the disclosing agency.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "disclosureUrl",
        "units": null
      },
      {
        "definition": "<p>The unique ID of the New Relic entity impacted by the vulnerability.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "entity.guid",
        "units": null
      },
      {
        "definition": "<p>The unique ID of the New Relic entity impacted by the vulnerability.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "entityGuid",
        "units": null
      },
      {
        "definition": "<p>An identifier created by New Relic using details from the disclosing agency to help determine which New Relic entity this vulnerability is associated with.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "entityLookupValue",
        "units": null
      },
      {
        "definition": "<p>The type of New Relic entity, which is determined by New Relic based on the disclosing agency and vulnerability details.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "entityType",
        "units": null
      },
      {
        "definition": "<p>The unique ID assigned to the vulnerability by the disclosing agency.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "issue.id",
        "units": null
      },
      {
        "definition": "<p>The type of issue, for example library vulnerability or misconfiguration.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "issue.type",
        "units": null
      },
      {
        "definition": "<p>The unique ID assigned to this instance of the vulnerablity by the disclosing agency.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "issue.vendor.id",
        "units": null
      },
      {
        "definition": "<p>The unique ID assigned to the vulnerablity by the disclosing agency.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "issueId",
        "units": null
      },
      {
        "definition": "<p>The unique ID assigned to this instance of the vulnerablity by the disclosing agency.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "issueInstanceKey",
        "units": null
      },
      {
        "definition": "<p>The type of issue, for example library vulnerability or misconfiguration.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "issueType",
        "units": null
      },
      {
        "definition": "<p>Long form description of the vulnerability. May include exploit risks, specific versions, other links.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "message",
        "units": null
      },
      {
        "definition": "<p>The name of the library or module that is vulnerable.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "package",
        "units": null
      },
      {
        "definition": "<p>The version of the library or module that is vulnerable.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "package.version",
        "units": null
      },
      {
        "definition": "<p>Where the original payload that New Relic received is stored - only applies to Security API ingested vulnerabilities.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "rawPayload",
        "units": null
      },
      {
        "definition": "<p>A boolean indicating whether the vulnerability has a fix.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "remediation.exists",
        "units": null
      },
      {
        "definition": "<p>The action required to fix the vulnerability.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "remediation.upgradeAction",
        "units": null
      },
      {
        "definition": "<p>A boolean indicating whether the vulnerability has a fix.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "remediationExists",
        "units": null
      },
      {
        "definition": "<p>Used by 3rd party tools to identify the scan which discovered the vulnerability.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "scan.id",
        "units": null
      },
      {
        "definition": "<p>The severity of the vulnerability assigned by the disclosing agency.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "severity",
        "units": null
      },
      {
        "definition": "<p>The source of the vulnerablity disclosure.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "source",
        "units": null
      },
      {
        "definition": "<p>The time the vulnerability event was created.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>A short description of the vulnerabilty.</p>\n",
        "events": [
          "Vulnerability"
        ],
        "name": "title",
        "units": null
      }
    ],
    "dataSources": [
      {
        "name": "Vulnerability management"
      }
    ],
    "definition": "<p>New Relic Vulnerability Management is an opinionated solution that helps Devs, SREs, and Infosec teams build and run secure software with more confidence and less effort by centralizing, organizing, and prioritizing security risks in observability context.</p>\n",
    "name": "Vulnerability"
  },
  {
    "attributes": [
      {
        "definition": "<p>The name of the entity (for example, an app name, host name, or workload name).</p>\n",
        "events": [
          "Span",
          "WorkloadStatus"
        ],
        "name": "entity.name",
        "units": null
      },
      {
        "definition": "<p>Human-readable value of the workload status: OPERATIONAL, DEGRADED, DISRUPTED, or UNKNOWN.</p>\n",
        "events": [
          "WorkloadStatus"
        ],
        "name": "statusValue",
        "units": null
      },
      {
        "definition": "<p>Numerical status code that can be used in alert conditions. 0 (operational), 2 (degraded), 3 (disrupted) or -99 (unknown). For more information, see <a href=\"/docs/new-relic-one/use-new-relic-one/workloads/workload-status-views-notifications#get-started\">our workload status docs</a>.</p>\n",
        "events": [
          "WorkloadStatus"
        ],
        "name": "statusValueCode",
        "units": {
          "label": "enum"
        }
      },
      {
        "definition": "<p>Time that the event occurred or was evaluated over. Specifies a time or range of time. Examples:</p>\n<ul>\n<li>MM-DD-YYYY HH:MM:SS</li>\n<li>SINCE 2018-05-28 11:18:45</li>\n<li>UNTIL 30 minutes ago</li>\n<li>SINCE &#39;2018-06-20&#39; UNTIL today</li>\n</ul>\n",
        "events": [
          "NrAuditEvent",
          "WorkloadStatus"
        ],
        "name": "timestamp",
        "units": null
      },
      {
        "definition": "<p>The New Relic-assigned GUID for a workload. </p>\n",
        "events": [
          "WorkloadStatus"
        ],
        "name": "workloadGuid",
        "units": {
          "label": "ID"
        }
      }
    ],
    "dataSources": [
      {
        "name": "Workload"
      }
    ],
    "definition": "<p>The workload status is derived from the alerting status of entities in your workload. This allows you to set up an alert condition to notify you whenever the workload goes into a DISRUPTED or DEGRADED status.</p>\n",
    "name": "WorkloadStatus"
  }
]