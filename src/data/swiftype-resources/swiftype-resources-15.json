{
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/record-handled-exception": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23138,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.27042,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51738,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/recordcustomevent-ios-sdk-api": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23137,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.2704,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51736,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/recorderror-ios-sdk-api": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23137,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.2704,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51736,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/recordmetric-ios-sdk-api": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23137,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.2704,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51736,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/remove-all-attributes": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23137,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.2704,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51736,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/remove-attribute": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23135,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.27039,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51736,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/set-attribute": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23135,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.27039,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51736,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/set-max-event-buffer-time": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23135,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.27039,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51735,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/set-max-event-pool-size": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23135,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.27039,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51735,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/set-user-id": [
    {
      "sections": [
        "Adding a prefix header to an iOS project"
      ],
      "title": "Adding a prefix header to an iOS project",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "11df0352a96527157fdd932f7a5bacf0beb8a0ae",
      "image": "https://docs.newrelic.com/static/89991d3f20208fe696e48b3143745df9/8c557/screen-ios-sdk-api-prefix-header.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/configuration/adding-prefix-header-ios-project/",
      "published_at": "2021-05-05T05:24:14Z",
      "updated_at": "2021-03-11T11:21:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The iOS SDK API for New Relic Mobile requires modification of your project's prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File > New > File... From iOS template options, select Other > PCH file. Name the file < target_name>-Prefix.pch, and then select Create. From your target’s Build settings, select All, and then add the following to the Prefix Header field: $(SRCROOT)/<target_name>-Prefix.pch Copy Here is an example of using Xcode to add a Prefix Header file to your iOS project for the New Relic Mobile iOS SDK API.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 253.23135,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adding a prefix header to an <em>iOS</em> project",
        "sections": "Adding a prefix header to an <em>iOS</em> project",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "The <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> requires modification of your project&#x27;s prefix header. If your project does not have one, follow these steps to add it. From your Xcode menu, select File &gt; <em>New</em> &gt; File... From <em>iOS</em> template options, select Other &gt; PCH file. Name the file &lt; target_name&gt;-Prefix.pch"
      },
      "id": "6044195fe7b9d2f201579a09"
    },
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.27039,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": ". <em>iOS</em> <em>SDK</em> <em>API</em> Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in <em>New</em> <em>Relic</em> Insights. Handled exceptions Report exceptions so you can identify factors creating a poor <em>mobile</em> app experience"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS SDK API guide",
        "Caution",
        "Install the SDK",
        "Automatically instrumented classes and methods",
        "Instrument your Objective-C code",
        "Important",
        "Create and complete interactions",
        "Rename a default interaction",
        "Set a custom application version",
        "Set a custom build identifier",
        "Create custom metrics",
        "Objective-C: Send custom attributes and events to Insights",
        "Objective-C: Track custom network requests",
        "Instrument your Swift code",
        "Create and complete Swift interactions",
        "Rename a default Swift interaction",
        "Set a custom application version with Swift",
        "Set a custom build identifier with Swift",
        "Create custom metrics with Swift",
        "Swift: Send custom attributes and events to Insights",
        "Swift: Track custom network requests"
      ],
      "title": "iOS SDK API guide",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "API guides"
      ],
      "external_id": "fe6ba3196a927fb8dee72f8bf777461c95f7505c",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-sdk-api-guide/",
      "published_at": "2021-05-04T16:52:12Z",
      "updated_at": "2021-03-16T09:52:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Use the iOS SDK API for New Relic Mobile to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your mobile app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically. Set a custom identifier value with Objective-C or Swift to associate user sessions with analysis events and attributes (iOS SDK version 5.9.0 or higher). Caution Tracing is heavily optimized, but it does impose a performance overhead. Avoid instrumenting methods that are expected to be called hundreds of times. Install the SDK Ensure you have your app instrumented with the latest New Relic Mobile SDK by using the instructions at rpm.newrelic.com/mobile. This document contains the iOS SDK instrumentation requirements for: Objective C Swift For details about the available methods for custom attributes and events you can send to to New Relic Insights, see the iOS SDK API reference. You can also configure feature flags for: Objective-C Swift Automatically instrumented classes and methods The following methods (for the listed classes and their sub-classes) are already instrumented by New Relic. You do not need to add custom instrumentation to trace them. Classes Methods automatically instrumented by New Relic UIViewController viewDidLoad: viewWillAppear: viewDidAppear: viewWillDisappear: viewDidDisappear: viewWillLayoutSubviews: viewDidLayoutSubviews: UIImage imageNamed: imageWithContentsOfFile: imageWithData: imageWithData:scale: initWithContentsOfFile: initWithData: initWithData:scale: NSJSONSerialization JSONObjectWithData:options:error: JSONObjectWithStream:options:error: dataWithJSONObject:options:error: writeJSONObject:toStream:options:error: NSManagedObjectContext executeFetchRequest:error: processPendingChanges New Relic Mobile aggregates performance for various methods into summary metrics that appear in New Relic Mobile's Interactions page. Summary categories include: View loading UI layout Database Images JSON Network Instrument your Objective-C code To have your own Objective-C code appear in interaction code breakdowns and timelines, add a _START call to the beginning of your method and a _STOP call to the end of it. Important Always include a _STOP for each _START, and only include one set of these commands in a given method. The trace system will automatically pick up the class and method name, and report performance metrics for your method to New Relic Mobile. - (void)myMethod { NR_TRACE_METHOD_START(0); // … existing code NR_TRACE_METHOD_STOP; } Copy If you are not using ARC, use this version of the _STOP macro to avoid memory leaks: NR_NONARC_TRACE_METHOD_STOP; Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the _START macro; for example: NR_TRACE_METHOD_START(NRTraceTypeDatabase); Copy Create and complete interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction with Objective-C, use these API calls: NSString* uniqueIdentifier = NR_START_NAMED_INTERACTION(@\"name\"); Copy This macro will automatically begin tracking the name interaction trace from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NR_INTERACTION_STOP(uniqueIdentifier); Copy This macro will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names with Objective-C, implement the - (NSString*) customNewRelicInteractionName instance method in your view controller, where the string returned becomes the interaction's name. Set a custom application version The New Relic iOS SDK allows you to set a custom application version string with Objective-C. Instead of using the string defined in CFBundleShortVersionString, call the +[NewRelic setApplicationVersion:] method and pass along the custom application version before calling +[NewRelic startWithApplicationToken:]; [NewRelic setApplicationVersion:(NSString*) appVersion]; Copy Set a custom build identifier As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode with Objective-C, call the +[NewRelic setApplicationBuild:] method, and pass along the custom build identifier. [NewRelic setApplicationBuild:(NSString*) buildNumber]; Copy Create custom metrics Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Objective-C: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Objective-C, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Objective-C: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: [NewRelic noticeNetworkRequestForURL:(NSURL*)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer responseHeaders:(NSDictionary *)headers statusCode:(NSInteger)httpStatusCode bytesSent:(NSUInteger)bytesSent bytesReceived:(NSUInteger)bytesReceived responseData:(NSData *)responseData andParams:(NSDictionary *)params]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: [NewRelic noticeNetworkFailureForURL:(NSURL *)url httpMethod:(NSString*)httpMethod withTimer:(NRTimer *)timer andFailureCode:(NSInteger)iOSFailureCode]; Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h. Instrument your Swift code To have your own Swift code appear in interaction code breakdowns and timelines: Add a startTracingMethod() call to the beginning of your method. Add a endTracingMethodWithTimer() call to the end of it. Always include an endTracingMethodWithTimer() call for each startTracingMethod() reference. Include only one set of these commands in a given method. func myMethod(){ let timer = NRTimer(); NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeNone) // … existing code NewRelic.endTracingMethodWithTimer(timer) } Copy If you want your method’s performance to be included in the summary data on the APM Overview page, pass one of the NRTraceType enum values into the startTracingMethod() macro; for example: NewRelic.startTracingMethod(#selector(MyClass.myMethod), object: self, timer: timer, category: NRTraceTypeDatabase) Copy Create and complete Swift interactions By default, an interaction starts when a view controller is pushed. To manually start an interaction, use these API calls: let uniqueIdentifier = NewRelic.startInteraction(withName: \"My Interaction\") Copy This call will automatically begin tracking an interaction trace named My Interaction from the current line. It will also complete any previously running interaction. It returns a unique identifier that can be used to complete that interaction by using this API call: NewRelic.stopCurrentInteraction(uniqueIdentifier) Copy This method will complete the interaction associated with the uniqueIdentifier if that interaction has not already completed automatically. You do not need to call this method. Rename a default Swift interaction By default, the iOS agent will start an interaction trace when a new view controller is displayed. The interactions are named using the format Display <ViewController>. To change these default names, implement the @objc func customNewRelicInteractionName() -> String method in your view controller, where the string returned becomes the interaction's name. Set a custom application version with Swift The New Relic iOS SDK allows you to set a custom application version string. Instead of using the string defined in CFBundleShortVersionString, call the NewRelic.setApplicationVersion() method, and pass along the custom application version before calling NewRelic.startWithApplicationToken();. NewRelic.setApplicationVersion(String appVersion) Copy Set a custom build identifier with Swift As of version 5.1.0 of the New Relic iOS SDK, an API method allows you to set a custom build identifier that is displayed next to the application version in New Relic Mobile's Crash details page. Instead of using the CFBundleVersion string defined in Xcode, call the NewRelic.setApplicationBuild() method, and pass along the custom build identifier. NewRelic.setApplicationBuild(buildNumber) Copy Create custom metrics with Swift Custom metrics can help track high level events specific to your application. With the recordMetric API, you can record arbitrary numerical data and named events with Objective-C and Swift. You can also use several API calls to record custom metrics that provide different levels of detail. Swift: Send custom attributes and events to Insights Use methods in the NewRelic object to send custom attributes and events to New Relic Insights. For details about the available methods for custom attributes and events with Swift, see the iOS SDK API reference. Methods that return BOOL results return YES if they succeed, or NO if the operation did not complete. These methods are available in versions 5.0.0 or higher of the New Relic iOS SDK. The SDK can store up to 128 user-defined custom attributes at a time. If you attempt to store more than 128 attributes, the SDK returns NO. Custom attributes names should use the simplest format needed, and New Relic recommends single word attributes, containing no spaces. Attribute phrases can be formatted in camel case, so My Custom Attribute is better specified as myCustomAttribute. As with custom metrics: Avoid using the characters / ] [ | * when naming things. Avoid multi-byte characters. Swift: Track custom network requests If you can express a transactional network request in terms similar to an HTTP request, you can track it in New Relic Mobile. Use URLs that are well-formed and do not include highly variable paths or hostnames. For requests that complete, use this method: NewRelic.noticeNetworkRequestForURL(url: NSURL!, httpMethod: String!, withTimer: NRTimer!, responseHeaders:[NSObject : AnyObject]!, statusCode: Int, bytesSent: UInt, bytesReceived: UInt, responseData: NSData!, andParams: [NSObject : AnyObject]!) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request headers A dictionary containing the HTTP response headers, if available httpStatusCode The response status code If the httpStatusCode is greater than or equal to 400, New Relic Mobile will record a server error and may capture the responseData body if provided. bytesSent The size of the request body bytesReceived The size of the responseBody responseData The response body data, captured if New Relic Mobile records Server error params params Additional parameters included in an HTTP error metric if the HTTP transaction is an error For requests that fail due to a socket or operating system error, use this method: NewRelic.noticeNetworkFailureForURL(url: NSURL!, httpMethod: NSString!, withTimer: NRTimer!, andFailureCode: Int) Copy Parameters include: Parameter Description url The URL of the request httpMethod The method type of the request; for example, POST, GET, etc. timer An NRTimer that timed the network request iOSFailureCode The failure code Failure codes are interpreted as NSURLError* code. To view a complete list of the codes that New Relic Mobile supports, see NRConstants.h.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 222.51735,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "sections": "<em>iOS</em> <em>SDK</em> <em>API</em> guide",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Use the <em>iOS</em> <em>SDK</em> <em>API</em> for <em>New</em> <em>Relic</em> <em>Mobile</em> to add custom data. For example: Instrument your own code. Start and stop interaction traces from events in your <em>mobile</em> app. Record custom metrics. Send custom attributes and events to Insights. Track networking from libraries not supported automatically"
      },
      "id": "603eb3a2e7b9d264f02a07a8"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/troubleshoot/no-data-appears-ios": [
    {
      "sections": [
        "Introduction to New Relic Mobile for iOS",
        "Compatibility and requirements",
        "Install the agent",
        "Extend your instrumentation",
        "Troubleshoot your installation"
      ],
      "title": "Introduction to New Relic Mobile for iOS",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Get started"
      ],
      "external_id": "243234aeaa02a13856775f6f154cab24a1e5db26",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/get-started/introduction-new-relic-mobile-ios/",
      "published_at": "2021-05-04T15:46:56Z",
      "updated_at": "2021-03-10T02:05:00Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile for iOS monitors your mobile app, giving you a comprehensive view of your app's performance. It works for iOS apps written using Objective-C, Swift, or both languages. For a general overview of New Relic Mobile functionality, see Introduction to New Relic Mobile. Compatibility and requirements Before you install New Relic Mobile for iOS, review the compatibility and requirements. Install the agent As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app that you monitor in New Relic Mobile. There are two ways you can install New Relic Mobile for iOS: New Relic recommends that you install and configure New Relic Mobile for iOS using the CocoaPods installation method. You can also manually install and configure New Relic Mobile for iOS by adding the New Relic framework to your app. Extend your instrumentation After you install the agent, extend the agent's instrumentation by using the New Relic Mobile UI and following up on information in New Relic Insights. To access: In New Relic Mobile: In New Relic Insights: Custom data Create and record custom events, interaction traces, and attributes to add details to your existing data and traces. Then, view the custom events that you created in New Relic Insights. Network requests Enable the MobileRequest event feature so you can perform a full network analysis. To further investigate network request error rates and response times, query MobileRequest and MobileRequestError events. Crash analysis Review detailed information using groups and filters to analyze trends that lead to crashes. To view more information about crashes, create NRQL queries to review Insights charts related to crash data. iOS SDK API Use the iOS SDK API for New Relic Mobile to instrument parts of your code that are not instrumented by default. Then, view those custom events and attributes in New Relic Insights. Handled exceptions Report exceptions so you can identify factors creating a poor mobile app experience. To further improve performance, review MobileHandledException event records in New Relic Insights. Breadcrumbs Boost the level of detail in crash event trails by adding breadcrumbs. Then, query MobileBreadcrumbs events to see all breadcrumbs or just breadcrumbs related to crashes. Troubleshoot your installation If New Relic Mobile for iOS isn't reporting data, try these troubleshooting suggestions.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 139.06561,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "sections": "<em>Introduction</em> to <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " that you <em>monitor</em> in <em>New</em> <em>Relic</em> <em>Mobile</em>. There are two ways you can install <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em>: <em>New</em> <em>Relic</em> recommends that you install and configure <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em> using the CocoaPods installation method. You can also manually install and configure <em>New</em> <em>Relic</em> <em>Mobile</em> for <em>iOS</em> by adding the <em>New</em>"
      },
      "id": "6043a48fe7b9d2ad8d5799db"
    },
    {
      "sections": [
        "iOS agent configuration and feature flags",
        "Tip",
        "Enable or disable feature flags",
        "Crash and error reporting feature flag",
        "NRFeatureFlag_CrashReporting",
        "NRFeatureFlag_HandledExceptionEvents",
        "Distributed tracing",
        "NRFeatureFlag_DistributedTracing",
        "Interactions feature flags",
        "NRFeatureFlag_DefaultInteractions",
        "NRFeatureFlag_InteractionTracing",
        "NRFeatureFlag_SwiftInteractionTracing",
        "Caution",
        "Networking feature flags",
        "NRFeatureFlag_ExperimentalNetworkingInstrumentation",
        "NRFeatureFlag_NSURLSessionInstrumentation",
        "NRFeatureFlag_NetworkRequestEvents",
        "NRFeatureFlag_RequestErrorEvents",
        "NRFeatureFlag_HttpResponseBodyCapture"
      ],
      "title": "iOS agent configuration and feature flags",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "Configuration"
      ],
      "external_id": "8ced2dac1fbc45a65d6cdca6b27a4db001d6a4db",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/api-guides/ios-agent-configuration-feature-flags/",
      "published_at": "2021-05-05T05:15:46Z",
      "updated_at": "2021-04-05T11:16:24Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile's iOS agent provides configuration settings to change the default behavior of the agent. If used, implement these flags just before calling: Objective-C: +[NewRelic startWithApplicationToken:] Swift: NewRelic.start(withApplicationToken:) Tip For an explanation of Mobile custom data types, see Add custom data to New Relic Mobile. Enable or disable feature flags To configure feature flags, use the following method defined in NewRelic.h: iOS language Procedure Objective-C In Objective-C, these features are bitmasked, so you can use a | to enable or disable multiple features at the same time. Enable a feature flag: +[NewRelic enableFeatures:(NRMAFeatureFlags)flags]; Copy Disable a feature flag: +[NewRelic disableFeatures:(NRMAFeatureFlags)flags]; Copy Here is an example where: Interaction tracing and experimental networking instrumentation are enabled. NSURLSession instrumentation and crash reporting are disabled. [NewRelic enableFeatures:NRFeatureFlag_SwiftInteractionTracing | NRFeatureFlag_ExperimentalNetworkingInstrumentation]; [NewRelic disableFeatures:NRFeatureFlag_NSURLSessionInstrumentation | NRFeatureFlag_CrashReporting]; [NewRelic startWithApplicationToken:...]; Copy Swift Enable a feature flag: NewRelic.enableFeatures(NRMAFeatureFlags.[NRMAFeatureFlag]) Copy Disable a feature flag: NewRelic.disableFeatures(NRMAFeatureFlags.[NRMAFeatureFlag]) Copy Example to disable interaction tracing: NewRelic.disableFeatures(NRMAFeatureFlags.NRFeatureFlag_DefaultInteractions) Copy Crash and error reporting feature flag If used, be sure to call the feature flag before the New Relic iOS agent start call. NRFeatureFlag_CrashReporting Enable (default) or disable crash reporting, which appears on New Relic Mobile's Crash analysis page. Type Boolean Default true NRFeatureFlag_HandledExceptionEvents Globally enable (default) or disable recording handled exceptions events, which appear on the Handled exception page. Type Boolean Default true Distributed tracing NRFeatureFlag_DistributedTracing Enable or disable the adding of distributed tracing headers to network requests. Refer to How New Relic distributed tracing works for more information on distributed tracing in mobile apps. Type Boolean Default true Interactions feature flags If used, be sure to call the feature flag before the New Relic iOS agent start call. NRFeatureFlag_DefaultInteractions Enable (default) or disable interaction tracing only for default instrumented classes and methods. Custom interactions will be reported. The traces will appear on the Mobile Interactions page. Type Boolean Default true NRFeatureFlag_InteractionTracing Globally enable (default) or disable interaction traces, which appear on the Mobile Interactions page. Interaction tracing will be disabled after the agent has started. Interactions for any activity or methods executed prior to starting the agent may still appear on the Interactions page. Type Boolean Default true NRFeatureFlag_SwiftInteractionTracing Caution Before enabling this feature, see Enable Swift interaction traces. If proper steps are not taken, enabling this feature may cause instability. Enable or disable (default) interaction tracing for Swift code. The traces appear on the Mobile Interactions page. This feature will always be disabled if NRFeatureFlag_InteractionTracing is disabled. Type Boolean Default false Networking feature flags If used, be sure to call the feature flag before the New Relic iOS agent start call. NRFeatureFlag_ExperimentalNetworkingInstrumentation Caution Enabling this feature flag call may decrease the stability of applications. Avoid using unless instructed by New Relic. Enable or disable (default) experimental networking instrumentation. This forces all NSURLConnection network requests through the NRMAURProtocol. Type Boolean Default false NRFeatureFlag_NSURLSessionInstrumentation Enable (default) or disable networking instrumentation for NSURLSession. These URL traces are sent to the HTTP Requests page. Type Boolean Default true NRFeatureFlag_NetworkRequestEvents Enable or disable (default) networking instrumentation. This sends the HTTP response data to Insights as MobileRequest events. Available for iOS Agent version 5.14.0 and higher Type Boolean Default true - Enabled by default as of 6.0.0 NRFeatureFlag_RequestErrorEvents Enable (default) or disable HTTP request error event generation of instrumented network calls that result in an error or failure. These events are sent to Insights as MobileRequestError events. Available for iOS Agent version 5.11.0 and higher Type Boolean Default true NRFeatureFlag_HttpResponseBodyCapture Enable or disable capture of HTTP response bodies for HTTP error traces, and MobileRequestError events. Type Boolean Default true",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 130.76057,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>iOS</em> agent configuration and feature flags",
        "sections": "<em>iOS</em> agent configuration and feature flags",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "<em>New</em> <em>Relic</em> <em>Mobile</em>&#x27;s <em>iOS</em> agent provides configuration settings to change the default behavior of the agent. If used, implement these flags just before calling: Objective-C: +[<em>NewRelic</em> startWithApplicationToken:] Swift: <em>NewRelic</em>.start(withApplicationToken:) Tip For an explanation of <em>Mobile</em> custom data"
      },
      "id": "60441925196a67324d960f1b"
    },
    {
      "sections": [
        "recordBreadcrumb (iOS SDK API)",
        "Syntax",
        "Requirements",
        "Description",
        "Parameters",
        "Return values",
        "Examples",
        "Objective-C",
        "Swift"
      ],
      "title": "recordBreadcrumb (iOS SDK API)",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "iOS SDK API"
      ],
      "external_id": "38ef7d148d9f6266dbcfe796bef256f15af226be",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/ios-sdk-api/record-breadcrumb/",
      "published_at": "2021-05-05T05:25:23Z",
      "updated_at": "2021-03-11T12:33:32Z",
      "document_type": "api_doc",
      "popularity": 1,
      "body": "Syntax recordBreadcrumb:(NSString* __nonnull)name attributes:(NSDictionary* __nullable)attributes; NewRelic.recordBreadcrumb(string $Name, map $eventAttributes) Copy Records a MobileBreadcrumb event, useful for crash analysis. Requirements Agent version 5.13.0 or higher. Description This call creates and records a MobileBreadcrumb event, which can be found in Insights and in the crash event trail. Mobile breadcrumbs are useful for crash analysis; they should be created for app activity that you think will help you troubleshoot crashes. In addition to whatever custom attributes you choose, the event will also have associated session attributes. Unlike using setAttribute, adding attributes to a breadcrumb event adds them only to that event; they are not session attributes. Using this call has the same result as using the recordCustomEvent call with MobileBreadcrumb as the event type. For context on how to use this API, see the documentation about sending custom attributes and events to Insights for: Objective-C Swift Parameters Parameter Description $Name string Required. The name you want to give to the breadcrumb event. $eventAttributes map < string, object> Optional. A map that includes a list of attributes of the breadcrumb event. Create attributes for any event descriptors you think will be useful. Return values Returns true if the event is recorded successfully, or false if not. Examples Objective-C Method: + (BOOL) recordBreadcrumb:(NSString* __nonnull)name attributes:(NSDictionary* __nullable)attributes; Copy Example: [NewRelic recordBreadcrumb:@\"user 11-3435 tapped sign-in button on LaunchViewController\" attributes:@{ @\"button\" : @\"sign-in\", @\"action\" : @\"tapped\", @\"userId\" : @\"11-3435\", @\"location\" : @\"LaunchViewController\"}]; Copy Swift Method: NewRelic.recordBreadcrumb(Name: String!, attributes:[NSObject : AnyObject]!) -> Bool Copy Examples: let eventRecorded = NewRelic.recordBreadcrumb(\"Name\", attributes: [\"attributeName1\" : \"value1\", \"attributeName2\": 2]) Copy let eventRecorded = NewRelic.recordBreadcrumb(\"user 11-3435 tapped sign-in from LaunchViewController\" attributes:[\"button\" : \"sign-in\", \"userId\" : \"11-3435\", \"action\" : \"tapped\", \"location\" : \"LaunchViewController\"]) Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 123.00671,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "recordBreadcrumb (<em>iOS</em> SDK API)",
        "sections": "recordBreadcrumb (<em>iOS</em> SDK API)",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Syntax recordBreadcrumb:(NSString* __nonnull)name attributes:(NSDictionary* __nullable)attributes; <em>NewRelic</em>.recordBreadcrumb(string $Name, map $eventAttributes) Copy Records a <em>Mobile</em>Breadcrumb event, useful for crash analysis. Requirements Agent version 5.13.0 or higher. Description This call"
      },
      "id": "60450e5128ccbcd3f42c6079"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/tvos/cocoapods-tvos-installation-configuration": [
    {
      "sections": [
        "Upgrading New Relic Mobile's tvOS SDK",
        "Tip",
        "Contents",
        "Replacing your tvOS framework",
        "For more help"
      ],
      "title": "Upgrading New Relic Mobile's tvOS SDK",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "f5d6d3d356952d185b96aa409605b79e3ace8ec9",
      "image": "https://docs.newrelic.com/static/a3b6801675529d8f4eba123cf08e8f1f/c1b63/Mobile_tvOS_replace-framework_1.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/upgrading-new-relic-mobiles-tvos-sdk/",
      "published_at": "2021-05-05T05:27:47Z",
      "updated_at": "2021-03-11T11:18:21Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Tip Owner or Admins You must be the account Admin to install, configure, and upgrade New Relic Mobile functionality with your tvOS applications. For information about the latest version, refer to the release notes. Contents Replacing your tvOS framework Admins: You must replace the earlier version of your tvOS agent framework before upgrading to a newer version of the tvOS SDK for New Relic Mobile. Here is an example of the workflow to remove your existing tvOS agent framework so you can replace it with a newer version. From the Project Navigator (CMD 1) in Xcode, search for NewRelicAgentTVOS.framework. Right-click or control-click NewRelicAgentTVOS.framework, and select Show in Finder. Drag NewRelicAgentTVOS.framework to the trash. Verify that the Xcode project highlights the reference to NewRelicAgentTVOS.framework in red. Right-click or control-click NewRelicAgentTVOS.framework, and select Delete to remove the obsolete reference from the project. Follow standard installation procedures for tvOS app monitoring at rpm.newrelic.com/mobile. For more help Additional documentation resources include: tvOS installation and configuration (standard installation and configuration procedures) CocoaPods installation and configuration (procedures specific to CocoaPods) Customizing your mobile app settings (Settings tab options to view your mobile app's application token, rename it, or install New Relic Mobile updates)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 303.2507,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Upgrading <em>New</em> <em>Relic</em> <em>Mobile&#x27;s</em> <em>tvOS</em> SDK",
        "sections": "Upgrading <em>New</em> <em>Relic</em> <em>Mobile&#x27;s</em> <em>tvOS</em> SDK",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Tip Owner or Admins You must be the account Admin to install, configure, and upgrade <em>New</em> <em>Relic</em> <em>Mobile</em> functionality with your <em>tvOS</em> applications. For information about the latest version, refer to the release notes. Contents Replacing your <em>tvOS</em> framework Admins: You must replace the earlier version"
      },
      "id": "604416cc64441f805c378ecf"
    },
    {
      "sections": [
        "New Relic for tvOS compatibility and requirements",
        "Foreground monitoring",
        "tvOS requirements"
      ],
      "title": "New Relic for tvOS compatibility and requirements",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "ceb80d833a4f472ce844f6aafecd0f50625b3911",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/new-relic-tvos-compatibility-requirements/",
      "published_at": "2021-05-05T05:27:47Z",
      "updated_at": "2021-03-11T11:19:21Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile is compliant with standard application stores, including Apple App Store, Google Play Store, Amazon Appstore, and others. Before you install and configure New Relic Mobile functionality with your mobile applications, make sure your tvOS app meets these requirements for New Relic Mobile. Foreground monitoring As a standard security measure for data collection, New Relic requires that your application server supports SHA-2 (256-bit). SHA-1 is not supported. For more information, see our Mobile data privacy and security documentation. tvOS requirements Make sure your tvOS app meets these requirements for New Relic Mobile. New Relic Mobile tvOS requirements Operating system tvOS 9 or higher API/SDK NSURLConnection, AFNetworking, and ASIHttpRequest networking APIs Languages Objective-C Swift: Works with both network traces and crash reporting, but no interaction traces by default. To enable this, see Enabling interaction tracing in Swift. Devices Any tvOS compatible device (Apple TV 4th generation or higher) File sizes New Relic Mobile adds about 270K to your tvOS release app. Architectures ARM 64-bit",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 303.24298,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> for <em>tvOS</em> compatibility and requirements",
        "sections": "<em>New</em> <em>Relic</em> for <em>tvOS</em> compatibility and requirements",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " <em>Mobile</em>. Foreground <em>monitoring</em> As a standard security measure for data collection, <em>New</em> <em>Relic</em> requires that your application server supports SHA-2 (256-bit). SHA-1 is not supported. For more information, see our <em>Mobile</em> data privacy and security documentation. <em>tvOS</em> requirements Make sure your <em>tvOS</em> app"
      },
      "id": "60441ac6196a67e457960f6d"
    },
    {
      "sections": [
        "tvOS installation and configuration",
        "Tip",
        "Installing your tvOS application",
        "Configuring your tvOS application",
        "Executing a demo crash (optional)",
        "Changing the logging level (optional)",
        "For more help"
      ],
      "title": "tvOS installation and configuration",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "04798a275a7591bfbafb5437194cfbab4b33d8e3",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/tvos-installation-configuration/",
      "published_at": "2021-05-05T00:39:41Z",
      "updated_at": "2021-03-11T09:36:02Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Tip Owner or Admins Follow these instructions to install and configure New Relic Mobile functionality with your tvOS applications. Tip tvOS apps using Cocoapods have separate installation procedures. Installing your tvOS application As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app you monitor in New Relic Mobile. For Admins with existing New Relic accounts, follow these steps to install and configure your application. (If you do not have a New Relic account, see New Relic Mobile.) Go to rpm.newrelic.com/mobile. If applicable: From the Mobile Apps list, select Add a new app From the Get Started page, select tvOS as the platform for mobile monitoring. Type a name for your mobile app, and select Continue. Continue with the steps to configure New Relic Mobile. To complete the configuration process for a new mobile app later: Go to rpm.newrelic.com/mobile, then select See Instructions next to your mobile app name. To upgrade an existing tvOS installation: Go to rpm.newrelic.com/mobile > (selected app) > Settings > Installation. Configuring your tvOS application These procedures to configure your tvOS app also appear on the Get Started page in New Relic. Download and unzip the tvOS SDK for New Relic Mobile. To add the New Relic tvOS Mobile Framework to your Xcode project: Use Finder to drag the NewRelicAgentTVOS.framework folder into your Xcode project, and drop it onto your Project in the Project Navigator window. Follow the prompts to copy items into destination and to create folder references. Add the SystemConfiguration.framework, libc++.tbd, and libz.tbd libraries to your Linker settings. To start the agent: Import the New Relic Mobile Agent header at the top of your prefix.pch. Add + [ NewRelic startWithApplicationToken: < appToken>] to the top of -application:didFinishLaunchingWithOptions: in your AppDelegate.m using the unique application token that is automatically generated. Add a build script to your target's Build Phases and paste the following, replacing PUT_NEW_RELIC_APP_TOKEN_HERE with your application token: SCRIPT=`/usr/bin/find \"${SRCROOT}\" -name newrelic_postbuild.sh | head -n 1` /bin/sh \"${SCRIPT}\" \"PUT_NEW_RELIC_APP_TOKEN_HERE\" Copy Clean and build your app, and then run it in the simulator or other device. Within a few minutes you will begin to see data for your iOS app: Go to rpm.newrelic.com/mobile > (selected app). If you don't, see No data appears. Executing a demo crash (optional) If you have trouble getting your app to crash, the New Relic agent provides an API to execute a demo crash. Recommendation: Add one of these lines of code to a button click event handler as applicable: [NewRelic crashNow]; Copy OR [NewRelic crashNow:@\"<reason>\"]; Copy Changing the logging level (optional) Six log levels are available for mobile apps monitoring: none error warning info verbose ALL To increase your logging level in the app, add this method call before calling startWithApplicationToken: [NRLogger setLogLevels:NRLogLevelALL]; Copy For more help Additional documentation resources include: Mobile Apps index (standard menu functions available from your list of mobile applications in New Relic Mobile) Mobile Apps Overview page (a summary of your mobile app's performance) Customizing your mobile app settings (Settings tab options to view your mobile app's application token, rename it, change its alert thresholds, or install New Relic Mobile updates) Upgrading New Relic Mobile for tvOS apps (standard upgrade procedures) No data appears (basic troubleshooting steps)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 301.0975,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>tvOS</em> <em>installation</em> and configuration",
        "sections": "<em>tvOS</em> <em>installation</em> and configuration",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " <em>Relic</em> <em>Mobile</em>.) Go to rpm.newrelic.com&#x2F;<em>mobile</em>. If applicable: From the <em>Mobile</em> Apps list, select Add a <em>new</em> app From the Get Started page, select <em>tvOS</em> as the platform for <em>mobile</em> <em>monitoring</em>. Type a name for your <em>mobile</em> app, and select Continue. Continue with the steps to configure <em>New</em> <em>Relic</em> <em>Mobile</em>"
      },
      "id": "60441ac5e7b9d26bb55799b6"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/tvos/new-relic-tvos-compatibility-requirements": [
    {
      "sections": [
        "Upgrading New Relic Mobile's tvOS SDK",
        "Tip",
        "Contents",
        "Replacing your tvOS framework",
        "For more help"
      ],
      "title": "Upgrading New Relic Mobile's tvOS SDK",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "f5d6d3d356952d185b96aa409605b79e3ace8ec9",
      "image": "https://docs.newrelic.com/static/a3b6801675529d8f4eba123cf08e8f1f/c1b63/Mobile_tvOS_replace-framework_1.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/upgrading-new-relic-mobiles-tvos-sdk/",
      "published_at": "2021-05-05T05:27:47Z",
      "updated_at": "2021-03-11T11:18:21Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Tip Owner or Admins You must be the account Admin to install, configure, and upgrade New Relic Mobile functionality with your tvOS applications. For information about the latest version, refer to the release notes. Contents Replacing your tvOS framework Admins: You must replace the earlier version of your tvOS agent framework before upgrading to a newer version of the tvOS SDK for New Relic Mobile. Here is an example of the workflow to remove your existing tvOS agent framework so you can replace it with a newer version. From the Project Navigator (CMD 1) in Xcode, search for NewRelicAgentTVOS.framework. Right-click or control-click NewRelicAgentTVOS.framework, and select Show in Finder. Drag NewRelicAgentTVOS.framework to the trash. Verify that the Xcode project highlights the reference to NewRelicAgentTVOS.framework in red. Right-click or control-click NewRelicAgentTVOS.framework, and select Delete to remove the obsolete reference from the project. Follow standard installation procedures for tvOS app monitoring at rpm.newrelic.com/mobile. For more help Additional documentation resources include: tvOS installation and configuration (standard installation and configuration procedures) CocoaPods installation and configuration (procedures specific to CocoaPods) Customizing your mobile app settings (Settings tab options to view your mobile app's application token, rename it, or install New Relic Mobile updates)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 303.2507,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Upgrading <em>New</em> <em>Relic</em> <em>Mobile&#x27;s</em> <em>tvOS</em> SDK",
        "sections": "Upgrading <em>New</em> <em>Relic</em> <em>Mobile&#x27;s</em> <em>tvOS</em> SDK",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Tip Owner or Admins You must be the account Admin to install, configure, and upgrade <em>New</em> <em>Relic</em> <em>Mobile</em> functionality with your <em>tvOS</em> applications. For information about the latest version, refer to the release notes. Contents Replacing your <em>tvOS</em> framework Admins: You must replace the earlier version"
      },
      "id": "604416cc64441f805c378ecf"
    },
    {
      "sections": [
        "tvOS installation and configuration",
        "Tip",
        "Installing your tvOS application",
        "Configuring your tvOS application",
        "Executing a demo crash (optional)",
        "Changing the logging level (optional)",
        "For more help"
      ],
      "title": "tvOS installation and configuration",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "04798a275a7591bfbafb5437194cfbab4b33d8e3",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/tvos-installation-configuration/",
      "published_at": "2021-05-05T00:39:41Z",
      "updated_at": "2021-03-11T09:36:02Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Tip Owner or Admins Follow these instructions to install and configure New Relic Mobile functionality with your tvOS applications. Tip tvOS apps using Cocoapods have separate installation procedures. Installing your tvOS application As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app you monitor in New Relic Mobile. For Admins with existing New Relic accounts, follow these steps to install and configure your application. (If you do not have a New Relic account, see New Relic Mobile.) Go to rpm.newrelic.com/mobile. If applicable: From the Mobile Apps list, select Add a new app From the Get Started page, select tvOS as the platform for mobile monitoring. Type a name for your mobile app, and select Continue. Continue with the steps to configure New Relic Mobile. To complete the configuration process for a new mobile app later: Go to rpm.newrelic.com/mobile, then select See Instructions next to your mobile app name. To upgrade an existing tvOS installation: Go to rpm.newrelic.com/mobile > (selected app) > Settings > Installation. Configuring your tvOS application These procedures to configure your tvOS app also appear on the Get Started page in New Relic. Download and unzip the tvOS SDK for New Relic Mobile. To add the New Relic tvOS Mobile Framework to your Xcode project: Use Finder to drag the NewRelicAgentTVOS.framework folder into your Xcode project, and drop it onto your Project in the Project Navigator window. Follow the prompts to copy items into destination and to create folder references. Add the SystemConfiguration.framework, libc++.tbd, and libz.tbd libraries to your Linker settings. To start the agent: Import the New Relic Mobile Agent header at the top of your prefix.pch. Add + [ NewRelic startWithApplicationToken: < appToken>] to the top of -application:didFinishLaunchingWithOptions: in your AppDelegate.m using the unique application token that is automatically generated. Add a build script to your target's Build Phases and paste the following, replacing PUT_NEW_RELIC_APP_TOKEN_HERE with your application token: SCRIPT=`/usr/bin/find \"${SRCROOT}\" -name newrelic_postbuild.sh | head -n 1` /bin/sh \"${SCRIPT}\" \"PUT_NEW_RELIC_APP_TOKEN_HERE\" Copy Clean and build your app, and then run it in the simulator or other device. Within a few minutes you will begin to see data for your iOS app: Go to rpm.newrelic.com/mobile > (selected app). If you don't, see No data appears. Executing a demo crash (optional) If you have trouble getting your app to crash, the New Relic agent provides an API to execute a demo crash. Recommendation: Add one of these lines of code to a button click event handler as applicable: [NewRelic crashNow]; Copy OR [NewRelic crashNow:@\"<reason>\"]; Copy Changing the logging level (optional) Six log levels are available for mobile apps monitoring: none error warning info verbose ALL To increase your logging level in the app, add this method call before calling startWithApplicationToken: [NRLogger setLogLevels:NRLogLevelALL]; Copy For more help Additional documentation resources include: Mobile Apps index (standard menu functions available from your list of mobile applications in New Relic Mobile) Mobile Apps Overview page (a summary of your mobile app's performance) Customizing your mobile app settings (Settings tab options to view your mobile app's application token, rename it, change its alert thresholds, or install New Relic Mobile updates) Upgrading New Relic Mobile for tvOS apps (standard upgrade procedures) No data appears (basic troubleshooting steps)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 301.0975,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>tvOS</em> <em>installation</em> and configuration",
        "sections": "<em>tvOS</em> <em>installation</em> and configuration",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " <em>Relic</em> <em>Mobile</em>.) Go to rpm.newrelic.com&#x2F;<em>mobile</em>. If applicable: From the <em>Mobile</em> Apps list, select Add a <em>new</em> app From the Get Started page, select <em>tvOS</em> as the platform for <em>mobile</em> <em>monitoring</em>. Type a name for your <em>mobile</em> app, and select Continue. Continue with the steps to configure <em>New</em> <em>Relic</em> <em>Mobile</em>"
      },
      "id": "60441ac5e7b9d26bb55799b6"
    },
    {
      "sections": [
        "CocoaPods for tvOS installation and configuration",
        "Install your tvOS application",
        "Configure using Objective-C",
        "Configure using Swift",
        "Change the logging level (optional)"
      ],
      "title": "CocoaPods for tvOS installation and configuration",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "dd8c9ed16a980b08c67150dada56e129900202bd",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/cocoapods-tvos-installation-configuration/",
      "published_at": "2021-05-05T05:27:47Z",
      "updated_at": "2021-03-11T11:18:21Z",
      "document_type": "page",
      "popularity": 1,
      "body": "These procedures apply only to tvOS apps using Cocoapods. For all other types of tvOS apps, see tvOS installation and configuration. Install your tvOS application As part of the installation process, New Relic automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app you monitor in New Relic. To install and configure your iOS application: Go to one.newrelic.com. If applicable: Select Add more data, select XCFramework. From the drawer, select the New Relic account you would like to add your tvOS application to, and select Continue. Type a name for your mobile app, and select Continue. Continue with the steps to configure mobile monitoring. Configure using Objective-C These procedures to configure your tvOS app with CocoaPods and Objective-C also appear on the Get Started page in New Relic. In the Podfile for your project, add the following line: pod 'NewRelicAgentTVOS' Copy Close your project in Xcode, and update it by running this command from the Terminal in your project directory: pod install Copy Open your project in Xcode by running this command from the Terminal in your project directory: open App.xcworkspace Copy In your [app_name]-Prefix.pch project file (generally found in the Supporting Files folder), include the New Relic header inside the #ifdef __OBJC__ #endif block: #import <NewRelic/NewRelic.h> Copy In your AppDelegate.m file, add this call as the first line of application:didFinishLaunchingWithOptions: [NewRelicAgent startWithApplicationToken:@\"<appToken>\"]; Copy Add a build script to your target's Build Phases and paste the following, replacing \"PUT_NEW_RELIC_APP_TOKEN_HERE\" with your application token: SCRIPT=`/usr/bin/find \"${SRCROOT}\" -name newrelic_postbuild.sh | head -n 1` /bin/bash \"${SCRIPT}\" \"PUT_NEW_RELIC_APP_TOKEN_HERE\" Copy Clean and build your app, then run it in the simulator or other device. Within a few minutes you will begin to see data for your app: Go to one.newrelic.com > Mobile > (select an app). Configure using Swift These procedures to configure your tvOS app with CocoaPods and Swift also appear on the Get Started page in New Relic Mobile. In the Podfile for your project, add the following line: pod 'NewRelicAgentTVOS' Copy Close your project in Xcode, and update it by running this command from the Terminal in your project directory: pod install Copy Open your project in Xcode by running this command from the Terminal in your project directory: open App.xcworkspace Copy Create a bridging header: Select File > New > File > Objective-C File. Name the file Placeholder.m, then select Next. Select Create, and confirm Xcode's prompt to generate the bridging header. In your [ app_name]-Bridging-Header.h, add the New Relic header: #import \"NewRelic/NewRelic.h\" Copy In your AppDelegate.swift file, add this call as the first line of application:didFinishLaunchingWithOptions: NewRelic.startWithApplicationToken(\"<appToken>\"); Copy Add a build script to your target's Build Phases and paste the following, replacing NEW_RELIC_APP_TOKEN with your application token: SCRIPT=`/usr/bin/find \"${SRCROOT}\" -name newrelic_postbuild.sh | head -n 1` /bin/bash \"${SCRIPT}\" NEW_RELIC_APP_TOKEN Copy Clean and build your app, then run it in the simulator or other device. Change the logging level (optional) Six log levels are available for mobile apps monitoring: none error warning info verbose ALL To increase your logging level in the app, add this method call before calling startWithApplicationToken: [NRLogger setLogLevels:NRLogLevelALL]; Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 299.46344,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "CocoaPods for <em>tvOS</em> <em>installation</em> and configuration",
        "sections": "CocoaPods for <em>tvOS</em> <em>installation</em> and configuration",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " for authenticating each <em>mobile</em> app you <em>monitor</em> in <em>New</em> <em>Relic</em>. To install and configure your <em>iOS</em> application: Go to one.newrelic.com. If applicable: Select Add more data, select XCFramework. From the drawer, select the <em>New</em> <em>Relic</em> account you would like to add your <em>tvOS</em> application to, and select"
      },
      "id": "60441ac6196a6710e4960f57"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/tvos/tvos-installation-configuration": [
    {
      "sections": [
        "Upgrading New Relic Mobile's tvOS SDK",
        "Tip",
        "Contents",
        "Replacing your tvOS framework",
        "For more help"
      ],
      "title": "Upgrading New Relic Mobile's tvOS SDK",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "f5d6d3d356952d185b96aa409605b79e3ace8ec9",
      "image": "https://docs.newrelic.com/static/a3b6801675529d8f4eba123cf08e8f1f/c1b63/Mobile_tvOS_replace-framework_1.png",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/upgrading-new-relic-mobiles-tvos-sdk/",
      "published_at": "2021-05-05T05:27:47Z",
      "updated_at": "2021-03-11T11:18:21Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Tip Owner or Admins You must be the account Admin to install, configure, and upgrade New Relic Mobile functionality with your tvOS applications. For information about the latest version, refer to the release notes. Contents Replacing your tvOS framework Admins: You must replace the earlier version of your tvOS agent framework before upgrading to a newer version of the tvOS SDK for New Relic Mobile. Here is an example of the workflow to remove your existing tvOS agent framework so you can replace it with a newer version. From the Project Navigator (CMD 1) in Xcode, search for NewRelicAgentTVOS.framework. Right-click or control-click NewRelicAgentTVOS.framework, and select Show in Finder. Drag NewRelicAgentTVOS.framework to the trash. Verify that the Xcode project highlights the reference to NewRelicAgentTVOS.framework in red. Right-click or control-click NewRelicAgentTVOS.framework, and select Delete to remove the obsolete reference from the project. Follow standard installation procedures for tvOS app monitoring at rpm.newrelic.com/mobile. For more help Additional documentation resources include: tvOS installation and configuration (standard installation and configuration procedures) CocoaPods installation and configuration (procedures specific to CocoaPods) Customizing your mobile app settings (Settings tab options to view your mobile app's application token, rename it, or install New Relic Mobile updates)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 303.2507,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Upgrading <em>New</em> <em>Relic</em> <em>Mobile&#x27;s</em> <em>tvOS</em> SDK",
        "sections": "Upgrading <em>New</em> <em>Relic</em> <em>Mobile&#x27;s</em> <em>tvOS</em> SDK",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": "Tip Owner or Admins You must be the account Admin to install, configure, and upgrade <em>New</em> <em>Relic</em> <em>Mobile</em> functionality with your <em>tvOS</em> applications. For information about the latest version, refer to the release notes. Contents Replacing your <em>tvOS</em> framework Admins: You must replace the earlier version"
      },
      "id": "604416cc64441f805c378ecf"
    },
    {
      "sections": [
        "New Relic for tvOS compatibility and requirements",
        "Foreground monitoring",
        "tvOS requirements"
      ],
      "title": "New Relic for tvOS compatibility and requirements",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "ceb80d833a4f472ce844f6aafecd0f50625b3911",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/new-relic-tvos-compatibility-requirements/",
      "published_at": "2021-05-05T05:27:47Z",
      "updated_at": "2021-03-11T11:19:21Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile is compliant with standard application stores, including Apple App Store, Google Play Store, Amazon Appstore, and others. Before you install and configure New Relic Mobile functionality with your mobile applications, make sure your tvOS app meets these requirements for New Relic Mobile. Foreground monitoring As a standard security measure for data collection, New Relic requires that your application server supports SHA-2 (256-bit). SHA-1 is not supported. For more information, see our Mobile data privacy and security documentation. tvOS requirements Make sure your tvOS app meets these requirements for New Relic Mobile. New Relic Mobile tvOS requirements Operating system tvOS 9 or higher API/SDK NSURLConnection, AFNetworking, and ASIHttpRequest networking APIs Languages Objective-C Swift: Works with both network traces and crash reporting, but no interaction traces by default. To enable this, see Enabling interaction tracing in Swift. Devices Any tvOS compatible device (Apple TV 4th generation or higher) File sizes New Relic Mobile adds about 270K to your tvOS release app. Architectures ARM 64-bit",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 303.24298,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> for <em>tvOS</em> compatibility and requirements",
        "sections": "<em>New</em> <em>Relic</em> for <em>tvOS</em> compatibility and requirements",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " <em>Mobile</em>. Foreground <em>monitoring</em> As a standard security measure for data collection, <em>New</em> <em>Relic</em> requires that your application server supports SHA-2 (256-bit). SHA-1 is not supported. For more information, see our <em>Mobile</em> data privacy and security documentation. <em>tvOS</em> requirements Make sure your <em>tvOS</em> app"
      },
      "id": "60441ac6196a67e457960f6d"
    },
    {
      "sections": [
        "CocoaPods for tvOS installation and configuration",
        "Install your tvOS application",
        "Configure using Objective-C",
        "Configure using Swift",
        "Change the logging level (optional)"
      ],
      "title": "CocoaPods for tvOS installation and configuration",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "dd8c9ed16a980b08c67150dada56e129900202bd",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/cocoapods-tvos-installation-configuration/",
      "published_at": "2021-05-05T05:27:47Z",
      "updated_at": "2021-03-11T11:18:21Z",
      "document_type": "page",
      "popularity": 1,
      "body": "These procedures apply only to tvOS apps using Cocoapods. For all other types of tvOS apps, see tvOS installation and configuration. Install your tvOS application As part of the installation process, New Relic automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app you monitor in New Relic. To install and configure your iOS application: Go to one.newrelic.com. If applicable: Select Add more data, select XCFramework. From the drawer, select the New Relic account you would like to add your tvOS application to, and select Continue. Type a name for your mobile app, and select Continue. Continue with the steps to configure mobile monitoring. Configure using Objective-C These procedures to configure your tvOS app with CocoaPods and Objective-C also appear on the Get Started page in New Relic. In the Podfile for your project, add the following line: pod 'NewRelicAgentTVOS' Copy Close your project in Xcode, and update it by running this command from the Terminal in your project directory: pod install Copy Open your project in Xcode by running this command from the Terminal in your project directory: open App.xcworkspace Copy In your [app_name]-Prefix.pch project file (generally found in the Supporting Files folder), include the New Relic header inside the #ifdef __OBJC__ #endif block: #import <NewRelic/NewRelic.h> Copy In your AppDelegate.m file, add this call as the first line of application:didFinishLaunchingWithOptions: [NewRelicAgent startWithApplicationToken:@\"<appToken>\"]; Copy Add a build script to your target's Build Phases and paste the following, replacing \"PUT_NEW_RELIC_APP_TOKEN_HERE\" with your application token: SCRIPT=`/usr/bin/find \"${SRCROOT}\" -name newrelic_postbuild.sh | head -n 1` /bin/bash \"${SCRIPT}\" \"PUT_NEW_RELIC_APP_TOKEN_HERE\" Copy Clean and build your app, then run it in the simulator or other device. Within a few minutes you will begin to see data for your app: Go to one.newrelic.com > Mobile > (select an app). Configure using Swift These procedures to configure your tvOS app with CocoaPods and Swift also appear on the Get Started page in New Relic Mobile. In the Podfile for your project, add the following line: pod 'NewRelicAgentTVOS' Copy Close your project in Xcode, and update it by running this command from the Terminal in your project directory: pod install Copy Open your project in Xcode by running this command from the Terminal in your project directory: open App.xcworkspace Copy Create a bridging header: Select File > New > File > Objective-C File. Name the file Placeholder.m, then select Next. Select Create, and confirm Xcode's prompt to generate the bridging header. In your [ app_name]-Bridging-Header.h, add the New Relic header: #import \"NewRelic/NewRelic.h\" Copy In your AppDelegate.swift file, add this call as the first line of application:didFinishLaunchingWithOptions: NewRelic.startWithApplicationToken(\"<appToken>\"); Copy Add a build script to your target's Build Phases and paste the following, replacing NEW_RELIC_APP_TOKEN with your application token: SCRIPT=`/usr/bin/find \"${SRCROOT}\" -name newrelic_postbuild.sh | head -n 1` /bin/bash \"${SCRIPT}\" NEW_RELIC_APP_TOKEN Copy Clean and build your app, then run it in the simulator or other device. Change the logging level (optional) Six log levels are available for mobile apps monitoring: none error warning info verbose ALL To increase your logging level in the app, add this method call before calling startWithApplicationToken: [NRLogger setLogLevels:NRLogLevelALL]; Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 299.46344,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "CocoaPods for <em>tvOS</em> <em>installation</em> and configuration",
        "sections": "CocoaPods for <em>tvOS</em> <em>installation</em> and configuration",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " for authenticating each <em>mobile</em> app you <em>monitor</em> in <em>New</em> <em>Relic</em>. To install and configure your <em>iOS</em> application: Go to one.newrelic.com. If applicable: Select Add more data, select XCFramework. From the drawer, select the <em>New</em> <em>Relic</em> account you would like to add your <em>tvOS</em> application to, and select"
      },
      "id": "60441ac6196a6710e4960f57"
    }
  ],
  "/docs/mobile-monitoring/new-relic-mobile-ios/tvos/upgrading-new-relic-mobiles-tvos-sdk": [
    {
      "sections": [
        "New Relic for tvOS compatibility and requirements",
        "Foreground monitoring",
        "tvOS requirements"
      ],
      "title": "New Relic for tvOS compatibility and requirements",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "ceb80d833a4f472ce844f6aafecd0f50625b3911",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/new-relic-tvos-compatibility-requirements/",
      "published_at": "2021-05-05T05:27:47Z",
      "updated_at": "2021-03-11T11:19:21Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Mobile is compliant with standard application stores, including Apple App Store, Google Play Store, Amazon Appstore, and others. Before you install and configure New Relic Mobile functionality with your mobile applications, make sure your tvOS app meets these requirements for New Relic Mobile. Foreground monitoring As a standard security measure for data collection, New Relic requires that your application server supports SHA-2 (256-bit). SHA-1 is not supported. For more information, see our Mobile data privacy and security documentation. tvOS requirements Make sure your tvOS app meets these requirements for New Relic Mobile. New Relic Mobile tvOS requirements Operating system tvOS 9 or higher API/SDK NSURLConnection, AFNetworking, and ASIHttpRequest networking APIs Languages Objective-C Swift: Works with both network traces and crash reporting, but no interaction traces by default. To enable this, see Enabling interaction tracing in Swift. Devices Any tvOS compatible device (Apple TV 4th generation or higher) File sizes New Relic Mobile adds about 270K to your tvOS release app. Architectures ARM 64-bit",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 303.24295,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> for <em>tvOS</em> compatibility and requirements",
        "sections": "<em>New</em> <em>Relic</em> for <em>tvOS</em> compatibility and requirements",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " <em>Mobile</em>. Foreground <em>monitoring</em> As a standard security measure for data collection, <em>New</em> <em>Relic</em> requires that your application server supports SHA-2 (256-bit). SHA-1 is not supported. For more information, see our <em>Mobile</em> data privacy and security documentation. <em>tvOS</em> requirements Make sure your <em>tvOS</em> app"
      },
      "id": "60441ac6196a67e457960f6d"
    },
    {
      "sections": [
        "tvOS installation and configuration",
        "Tip",
        "Installing your tvOS application",
        "Configuring your tvOS application",
        "Executing a demo crash (optional)",
        "Changing the logging level (optional)",
        "For more help"
      ],
      "title": "tvOS installation and configuration",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "04798a275a7591bfbafb5437194cfbab4b33d8e3",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/tvos-installation-configuration/",
      "published_at": "2021-05-05T00:39:41Z",
      "updated_at": "2021-03-11T09:36:02Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Tip Owner or Admins Follow these instructions to install and configure New Relic Mobile functionality with your tvOS applications. Tip tvOS apps using Cocoapods have separate installation procedures. Installing your tvOS application As part of the installation process, New Relic Mobile automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app you monitor in New Relic Mobile. For Admins with existing New Relic accounts, follow these steps to install and configure your application. (If you do not have a New Relic account, see New Relic Mobile.) Go to rpm.newrelic.com/mobile. If applicable: From the Mobile Apps list, select Add a new app From the Get Started page, select tvOS as the platform for mobile monitoring. Type a name for your mobile app, and select Continue. Continue with the steps to configure New Relic Mobile. To complete the configuration process for a new mobile app later: Go to rpm.newrelic.com/mobile, then select See Instructions next to your mobile app name. To upgrade an existing tvOS installation: Go to rpm.newrelic.com/mobile > (selected app) > Settings > Installation. Configuring your tvOS application These procedures to configure your tvOS app also appear on the Get Started page in New Relic. Download and unzip the tvOS SDK for New Relic Mobile. To add the New Relic tvOS Mobile Framework to your Xcode project: Use Finder to drag the NewRelicAgentTVOS.framework folder into your Xcode project, and drop it onto your Project in the Project Navigator window. Follow the prompts to copy items into destination and to create folder references. Add the SystemConfiguration.framework, libc++.tbd, and libz.tbd libraries to your Linker settings. To start the agent: Import the New Relic Mobile Agent header at the top of your prefix.pch. Add + [ NewRelic startWithApplicationToken: < appToken>] to the top of -application:didFinishLaunchingWithOptions: in your AppDelegate.m using the unique application token that is automatically generated. Add a build script to your target's Build Phases and paste the following, replacing PUT_NEW_RELIC_APP_TOKEN_HERE with your application token: SCRIPT=`/usr/bin/find \"${SRCROOT}\" -name newrelic_postbuild.sh | head -n 1` /bin/sh \"${SCRIPT}\" \"PUT_NEW_RELIC_APP_TOKEN_HERE\" Copy Clean and build your app, and then run it in the simulator or other device. Within a few minutes you will begin to see data for your iOS app: Go to rpm.newrelic.com/mobile > (selected app). If you don't, see No data appears. Executing a demo crash (optional) If you have trouble getting your app to crash, the New Relic agent provides an API to execute a demo crash. Recommendation: Add one of these lines of code to a button click event handler as applicable: [NewRelic crashNow]; Copy OR [NewRelic crashNow:@\"<reason>\"]; Copy Changing the logging level (optional) Six log levels are available for mobile apps monitoring: none error warning info verbose ALL To increase your logging level in the app, add this method call before calling startWithApplicationToken: [NRLogger setLogLevels:NRLogLevelALL]; Copy For more help Additional documentation resources include: Mobile Apps index (standard menu functions available from your list of mobile applications in New Relic Mobile) Mobile Apps Overview page (a summary of your mobile app's performance) Customizing your mobile app settings (Settings tab options to view your mobile app's application token, rename it, change its alert thresholds, or install New Relic Mobile updates) Upgrading New Relic Mobile for tvOS apps (standard upgrade procedures) No data appears (basic troubleshooting steps)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 301.0975,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>tvOS</em> <em>installation</em> and configuration",
        "sections": "<em>tvOS</em> <em>installation</em> and configuration",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " <em>Relic</em> <em>Mobile</em>.) Go to rpm.newrelic.com&#x2F;<em>mobile</em>. If applicable: From the <em>Mobile</em> Apps list, select Add a <em>new</em> app From the Get Started page, select <em>tvOS</em> as the platform for <em>mobile</em> <em>monitoring</em>. Type a name for your <em>mobile</em> app, and select Continue. Continue with the steps to configure <em>New</em> <em>Relic</em> <em>Mobile</em>"
      },
      "id": "60441ac5e7b9d26bb55799b6"
    },
    {
      "sections": [
        "CocoaPods for tvOS installation and configuration",
        "Install your tvOS application",
        "Configure using Objective-C",
        "Configure using Swift",
        "Change the logging level (optional)"
      ],
      "title": "CocoaPods for tvOS installation and configuration",
      "type": "docs",
      "tags": [
        "Mobile monitoring",
        "New Relic Mobile iOS",
        "tvOS"
      ],
      "external_id": "dd8c9ed16a980b08c67150dada56e129900202bd",
      "image": "",
      "url": "https://docs.newrelic.com/docs/mobile-monitoring/new-relic-mobile-ios/tvos/cocoapods-tvos-installation-configuration/",
      "published_at": "2021-05-05T05:27:47Z",
      "updated_at": "2021-03-11T11:18:21Z",
      "document_type": "page",
      "popularity": 1,
      "body": "These procedures apply only to tvOS apps using Cocoapods. For all other types of tvOS apps, see tvOS installation and configuration. Install your tvOS application As part of the installation process, New Relic automatically generates an application token. This is a 40-character hexadecimal string for authenticating each mobile app you monitor in New Relic. To install and configure your iOS application: Go to one.newrelic.com. If applicable: Select Add more data, select XCFramework. From the drawer, select the New Relic account you would like to add your tvOS application to, and select Continue. Type a name for your mobile app, and select Continue. Continue with the steps to configure mobile monitoring. Configure using Objective-C These procedures to configure your tvOS app with CocoaPods and Objective-C also appear on the Get Started page in New Relic. In the Podfile for your project, add the following line: pod 'NewRelicAgentTVOS' Copy Close your project in Xcode, and update it by running this command from the Terminal in your project directory: pod install Copy Open your project in Xcode by running this command from the Terminal in your project directory: open App.xcworkspace Copy In your [app_name]-Prefix.pch project file (generally found in the Supporting Files folder), include the New Relic header inside the #ifdef __OBJC__ #endif block: #import <NewRelic/NewRelic.h> Copy In your AppDelegate.m file, add this call as the first line of application:didFinishLaunchingWithOptions: [NewRelicAgent startWithApplicationToken:@\"<appToken>\"]; Copy Add a build script to your target's Build Phases and paste the following, replacing \"PUT_NEW_RELIC_APP_TOKEN_HERE\" with your application token: SCRIPT=`/usr/bin/find \"${SRCROOT}\" -name newrelic_postbuild.sh | head -n 1` /bin/bash \"${SCRIPT}\" \"PUT_NEW_RELIC_APP_TOKEN_HERE\" Copy Clean and build your app, then run it in the simulator or other device. Within a few minutes you will begin to see data for your app: Go to one.newrelic.com > Mobile > (select an app). Configure using Swift These procedures to configure your tvOS app with CocoaPods and Swift also appear on the Get Started page in New Relic Mobile. In the Podfile for your project, add the following line: pod 'NewRelicAgentTVOS' Copy Close your project in Xcode, and update it by running this command from the Terminal in your project directory: pod install Copy Open your project in Xcode by running this command from the Terminal in your project directory: open App.xcworkspace Copy Create a bridging header: Select File > New > File > Objective-C File. Name the file Placeholder.m, then select Next. Select Create, and confirm Xcode's prompt to generate the bridging header. In your [ app_name]-Bridging-Header.h, add the New Relic header: #import \"NewRelic/NewRelic.h\" Copy In your AppDelegate.swift file, add this call as the first line of application:didFinishLaunchingWithOptions: NewRelic.startWithApplicationToken(\"<appToken>\"); Copy Add a build script to your target's Build Phases and paste the following, replacing NEW_RELIC_APP_TOKEN with your application token: SCRIPT=`/usr/bin/find \"${SRCROOT}\" -name newrelic_postbuild.sh | head -n 1` /bin/bash \"${SCRIPT}\" NEW_RELIC_APP_TOKEN Copy Clean and build your app, then run it in the simulator or other device. Change the logging level (optional) Six log levels are available for mobile apps monitoring: none error warning info verbose ALL To increase your logging level in the app, add this method call before calling startWithApplicationToken: [NRLogger setLogLevels:NRLogLevelALL]; Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 299.46344,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "CocoaPods for <em>tvOS</em> <em>installation</em> and configuration",
        "sections": "CocoaPods for <em>tvOS</em> <em>installation</em> and configuration",
        "tags": "<em>New</em> <em>Relic</em> <em>Mobile</em> <em>iOS</em>",
        "body": " for authenticating each <em>mobile</em> app you <em>monitor</em> in <em>New</em> <em>Relic</em>. To install and configure your <em>iOS</em> application: Go to one.newrelic.com. If applicable: Select Add more data, select XCFramework. From the drawer, select the <em>New</em> <em>Relic</em> account you would like to add your <em>tvOS</em> application to, and select"
      },
      "id": "60441ac6196a6710e4960f57"
    }
  ],
  "/docs/net-agent-install-resources": [
    {
      "sections": [
        "Install .NET agent for Windows Communication Foundation (WCF)",
        "Install for WCF applications",
        "Important",
        "ASP.NET pipeline events and WCF events",
        "Only WCF events"
      ],
      "title": "Install .NET agent for Windows Communication Foundation (WCF)",
      "type": "docs",
      "tags": [
        "Agents",
        "NET agent",
        "Other installation"
      ],
      "external_id": "c39d558ff81b712496798549087933ccabcc2586",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/net-agent/other-installation/install-net-agent-windows-communication-foundation-wcf/",
      "published_at": "2021-05-05T09:28:16Z",
      "updated_at": "2021-03-16T04:35:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This document explains how to install the .NET agent and monitor WCF applications. Install for WCF applications To install the .NET agent on IIS-hosted WCF apps: Install the latest .NET agent. Important For self-hosted WCF applications (hosted as a custom Windows Service, a console app, or a Windows Forms app) take note of the instructions to enable the agent for your application. Ensure you give each WCF app a descriptive name. Enable or disable ASP.NET compatibility mode in your WCF application depending on which type of events you want monitored: ASP.NET pipeline events and WCF events When ASP.NET compatibility mode is enabled, the .NET agent instruments ASP.NET pipeline events as well as WCF events. In this mode, the agent provides you with a full view of your application stack. Only WCF events When ASP.NET compatibility mode is disabled, the .NET agent only instruments WCF events. Any activity that occurs as part of the ASP.NET pipeline will not be captured, such as agent API calls that are made outside of a WCF transaction. If your application is receiving traffic, data should appear within a few minutes. If it doesn't, see No data appears.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 126.26963,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Install</em> .<em>NET</em> <em>agent</em> for Windows Communication Foundation (WCF)",
        "sections": "<em>Install</em> .<em>NET</em> <em>agent</em> for Windows Communication Foundation (WCF)",
        "tags": "<em>Other</em> <em>installation</em>",
        "body": "This document explains how to install the .<em>NET</em> <em>agent</em> and monitor WCF applications. Install for WCF applications To install the .<em>NET</em> <em>agent</em> on IIS-hosted WCF apps: Install the latest .<em>NET</em> <em>agent</em>. Important For self-hosted WCF applications (hosted as a custom Windows Service, a console app"
      },
      "id": "603ea62e196a679eb4a83d8d"
    },
    {
      "sections": [
        "Install .NET agent on Docker container",
        "Tip",
        "Overview for install of .NET agent on Docker",
        "Install for Linux Docker containers",
        "Example Linux Dockerfile",
        "Example Linux Multi-stage Dockerfile",
        "Install for Windows Docker containers",
        "Important",
        "Example Windows Dockerfile for .NET Framework application",
        "Example Windows Dockerfile for .NET Core application"
      ],
      "title": "Install .NET agent on Docker container",
      "type": "docs",
      "tags": [
        "Agents",
        "NET agent",
        "Other installation"
      ],
      "external_id": "d0515c81825c0b108418459b6c14a510b540c206",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/net-agent/other-installation/install-net-agent-docker-container/",
      "published_at": "2021-05-05T09:28:16Z",
      "updated_at": "2021-03-16T14:59:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This document provides some samples for how you can configure a Dockerfile to install the New Relic .NET agent. Examples are included for both Windows and Linux containers. Installing the .NET agent in a Docker container can be performed using the same procedures as a standard .NET agent install for either Windows or Linux. It's just a matter of configuring your Dockerfile to perform the procedure. Tip To use .NET or any other agent, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Overview for install of .NET agent on Docker Requirements include: The agent must be installed on the containers you want to monitor. Install the agent with one of the standard install procedures. Enable the agent by setting the required environment variables as applicable. The .NET agent must be installed and enabled at runtime. Install for Linux Docker containers Example Linux Dockerfile FROM microsoft/dotnet:2.2-aspnetcore-runtime # Publish your application. COPY your app to be published /app # Install the agent RUN apt-get update && apt-get install -y wget ca-certificates gnupg \\ && echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list \\ && wget https://download.newrelic.com/548C16BF.gpg \\ && apt-key add 548C16BF.gpg \\ && apt-get update \\ && apt-get install -y newrelic-netcore20-agent # Enable the agent ENV CORECLR_ENABLE_PROFILING=1 \\ CORECLR_PROFILER={36032161-FFC0-4B61-B559-F6C5D41BAE5A} \\ CORECLR_NEWRELIC_HOME=/usr/local/newrelic-netcore20-agent \\ CORECLR_PROFILER_PATH=/usr/local/newrelic-netcore20-agent/libNewRelicProfiler.so \\ NEW_RELIC_LICENSE_KEY=YOUR_LICENSE_KEY \\ NEW_RELIC_APP_NAME=YOUR_APP_NAME WORKDIR /app ENTRYPOINT [\"dotnet\", \"./YOUR_APP_NAME.dll\"] Copy Example Linux Multi-stage Dockerfile FROM microsoft/dotnet:2.2-sdk AS base # Build your application WORKDIR /src RUN dotnet new mvc -o YOUR_APP_NAME RUN dotnet build -c Release -o /app/ ./YOUR_APP_NAME FROM microsoft/dotnet:2.2-aspnetcore-runtime AS final # Install the agent RUN apt-get update && apt-get install -y wget ca-certificates gnupg \\ && echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list \\ && wget https://download.newrelic.com/548C16BF.gpg \\ && apt-key add 548C16BF.gpg \\ && apt-get update \\ && apt-get install -y newrelic-netcore20-agent # Enable the agent ENV CORECLR_ENABLE_PROFILING=1 \\ CORECLR_PROFILER={36032161-FFC0-4B61-B559-F6C5D41BAE5A} \\ CORECLR_NEWRELIC_HOME=/usr/local/newrelic-netcore20-agent \\ CORECLR_PROFILER_PATH=/usr/local/newrelic-netcore20-agent/libNewRelicProfiler.so \\ NEW_RELIC_LICENSE_KEY=YOUR_LICENSE_KEY \\ NEW_RELIC_APP_NAME=YOUR_APP_NAME WORKDIR /app COPY --from=base /app . ENTRYPOINT [\"dotnet\", \"./YOUR_APP_NAME.dll\"] Copy Install for Windows Docker containers Important Windows Nano Server images are not supported. Example Windows Dockerfile for .NET Framework application FROM microsoft/aspnet # Publish your application. COPY your app to be published /inetpub/wwwroot # Copy the New Relic .NET agent installer COPY ./NewRelicDotNetAgent_x64.msi / # Install the agent RUN powershell.exe Start-Process -Wait -FilePath msiexec -ArgumentList /i,\\ \"C:\\NewRelicDotNetAgent_x64.msi\",\\ /qn,NR_LICENSE_KEY=YOUR_LICENSE_KEY # Set your application name ENV NEW_RELIC_APP_NAME=YOUR_APP_NAME Copy Example Windows Dockerfile for .NET Core application FROM mcr.microsoft.com/windows/servercore:ltsc2019 # Publish your application. COPY your app to be published /app # Copy the New Relic .NET agent installer COPY ./NewRelicDotNetAgent_x64.msi / # Install the agent RUN Start-Process -Wait -FilePath msiexec -ArgumentList /i, \"C:\\NewRelicDotNetAgent_x64.msi\", /qn, NR_LICENSE_KEY=YOUR_LICENSE_KEY # Enable the agent ENV CORECLR_ENABLE_PROFILING=1 # Set your application name ENV NEW_RELIC_APP_NAME=YOUR_APP_NAME # windowsservercore images may not include the .NET Core SDK or runtime RUN dotnet sdk/runtime installer WORKDIR /app ENTRYPOINT [\"dotnet\", \".\\\\YOUR_APP_NAME.dll\"] Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 125.681274,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Install</em> .<em>NET</em> <em>agent</em> on Docker container",
        "sections": "<em>Install</em> .<em>NET</em> <em>agent</em> on Docker container",
        "tags": "<em>Other</em> <em>installation</em>",
        "body": " for either Windows or Linux. It&#x27;s just a matter of configuring your Dockerfile to perform the procedure. Tip To use .<em>NET</em> or any <em>other</em> <em>agent</em>, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB"
      },
      "id": "603e85bde7b9d2b26c2a07fd"
    },
    {
      "sections": [
        "How to verify the checksum of .NET Agent downloads",
        "Windows",
        "CertUtil",
        "Powershell: Get-FileHash",
        "Linux",
        "sha256sum"
      ],
      "title": "How to verify the checksum of .NET Agent downloads",
      "type": "docs",
      "tags": [
        "Agents",
        "NET agent",
        "Other installation"
      ],
      "external_id": "95a198f26d732f7cc1940079bfe5a29eca22a425",
      "image": "",
      "url": "https://docs.newrelic.com/docs/agents/net-agent/other-installation/how-verify-checksum-net-agent-downloads/",
      "published_at": "2021-05-05T09:28:16Z",
      "updated_at": "2021-03-16T14:59:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Read about how to confirm the checksum for New Relic's .NET agent installers. If you need the hashes for our current releases, download their SHA256 hashes from our download site. Windows On Windows, we recommended using either CertUtil or Get-FileHash to compute a file hash. CertUtil This utility is available as part of Certificate Services and can be used to compute the hash of a file. This utility can be run from the Command Prompt or Powershell. To compute the hash, run: CertUtil -hashfile YOUR_FILENAME SHA256 If successful, you'll get this response: SHA256 hash of YOUR_FILENAME: 5092fd52e40132a41ac06c320296cd9d63196d6de0fa6ce9b74fc4de1b3f9502 CertUtil: -hashfile command completed successfully. Copy Powershell: Get-FileHash The Get-FileHash cmdlet is included with Powershell version 5.1+ and can be used to compute the hash of a file. To compute the hash, run: Get-FileHash YOUR_FILENAME Algorithm SHA256 | Format-List If successful, you'll get this response: Algorithm : SHA256 Hash : 5092FD52E40132A41AC06C320296CD9D63196D6DE0FA6CE9B74FC4DE1B3F9502 Path : C:\\Path\\To\\YOUR_FILENAME Copy Linux On Linux, we recommend using sha256sum Copy to compute a file hash. sha256sum To compute the hash, run: sha256sum YOUR_FILENAME If successful, you'll get this response: 5092fd52e40132a41ac06c320296cd9d63196d6de0fa6ce9b74fc4de1b3f9502 YOUR_FILENAME Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 120.21159,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "How to verify the checksum of .<em>NET</em> <em>Agent</em> downloads",
        "sections": "How to verify the checksum of .<em>NET</em> <em>Agent</em> downloads",
        "tags": "<em>Other</em> <em>installation</em>",
        "body": "Read about how to confirm the checksum for New Relic&#x27;s .<em>NET</em> <em>agent</em> installers. If you need the hashes for our current releases, download their SHA256 hashes from our download site. Windows On Windows, we recommended using either CertUtil or Get-FileHash to compute a file hash. CertUtil This utility"
      },
      "id": "603e829964441fea3c4e88a9"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/build-new-relic-one/build-custom-new-relic-one-application": [
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.8971,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.17216,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " at the top of the <em>New</em> <em>Relic</em> Explorer to filter down to the entities you care about. You can <em>use</em> multiple filter conditions. To filter down to certain entities using tags: From <em>one</em>.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 235.91162,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "<em>Build</em> <em>on</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the data throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/core-concepts/dashboards-api-migration-insights-api-nerdgraph": [
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 372.254,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 371.1244,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " at the top of the <em>New</em> <em>Relic</em> Explorer to filter down to the entities you care about. You can <em>use</em> multiple filter conditions. To filter down to certain entities using tags: From <em>one</em>.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "What is an entity in New Relic?",
        "What is an entity?",
        "Find and explore entities",
        "Tip",
        "Entity relationships",
        "Important",
        "Group and organize entities"
      ],
      "title": "What is an entity in New Relic?",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "52a3e08bc9103c717d27b153e4fd4f547d6ecc32",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-05-04T16:41:16Z",
      "updated_at": "2021-04-22T01:24:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic monitoring is built around the concept of the entity. An entity is anything that reports data to New Relic. This document explains: What entities are How to find entity data How entities are related to one another How to organize them into groups for easier analysis What is an entity? From a New Relic product perspective, entity is a broad concept. An entity is anything we can identify that has data you can monitor. \"Entity\" can refer to fundamental data-reporting components like applications, hosts, and database services, but it can also refer to larger groupings of those components. For example, to monitor a data center, you could aggregate those hosts in New Relic to be a workload (a custom grouping of entities). That workload is, itself, also an entity. This conceptual definition of \"entity\" is important because New Relic's goal is to give you practical information about the status of your business-important entities (and not just give you an unhelpfully large stream of assorted metrics and data). Our focus on entities, and the relationships between them, helps us optimize monitoring and troubleshooting of complex, modern systems. Find and explore entities You'll find your entities wherever you see your data reporting in New Relic. Tip You can create new entity types to monitor any data source. Learn more about entity synthesis. Some tips for finding and understanding entity data: To find an entity's unique global identifier (GUID): from any list of monitored entities in the New Relic Explorer, hover over a specific entity and click the icon to see the GUID and other metadata. An entity's GUID is reported as the attribute entityGuid. You can query for an entity using this attribute in the query builder. Use the Related Entities view in the New Relic Explorer, service maps, distributed tracing, and our relationships API in GraphQL to see connections between entities. Explore entity data using our NerdGraph GraphiQL explorer (api.newrelic.com/graphiql). Entity relationships Connections between entities are automatically created by New Relic based on what we can infer from your telemetry. For example, when two services that communicate using HTTP are instrumented with New Relic, we infer a \"calls/called-by\" relationship between them. When viewing a single entity in either the New Relic Explorer, Navigator, or Lookout, you can see its Related Entities in the entity's mini overview. Related Entities is a visualization of the various entities connected directly to the current entity in focus. You can quickly view important metrics for these related entities and navigate from one entity to another, through all the connected parts of your stack. Tip You can learn more about how entities are related using our NerdGraph API. When relationships are not automatically detected, you can manually create them using the \"Add/edit related entities\" link in Related Entities. Important Currently, you can only manually create calls/called-by relationships between service entities. Tip To manage manual relationships, you need to have modify and delete capabilities on entity relationships. These are granted to user roles by default. Group and organize entities You can place entities into groups that reflect business-important relationships in your organization. For example, you might group all entities related to a specific team or department, or related to a specific service. Or you might group multiple hosts together to reflect their grouping in a data center. To group your entities, see: How to tag entities Create workloads (groups of related entities)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 264.3874,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "What is an entity in <em>New</em> <em>Relic</em>?",
        "sections": "What is an entity in <em>New</em> <em>Relic</em>?",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> monitoring is built around the <em>concept</em> of the entity. An entity is anything that reports data to <em>New</em> <em>Relic</em>. This document explains: What entities are How to find entity data How entities are related to <em>one</em> another How to organize them into groups for easier analysis What is an entity"
      },
      "id": "603ec160e7b9d295f72a07fc"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-explorer-view-performance-across-apps-services-hosts": [
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 372.25378,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 371.1242,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " at the top of the <em>New</em> <em>Relic</em> Explorer to filter down to the entities you care about. You can <em>use</em> multiple filter conditions. To filter down to certain entities using tags: From <em>one</em>.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "What is an entity in New Relic?",
        "What is an entity?",
        "Find and explore entities",
        "Tip",
        "Entity relationships",
        "Important",
        "Group and organize entities"
      ],
      "title": "What is an entity in New Relic?",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "52a3e08bc9103c717d27b153e4fd4f547d6ecc32",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-05-04T16:41:16Z",
      "updated_at": "2021-04-22T01:24:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic monitoring is built around the concept of the entity. An entity is anything that reports data to New Relic. This document explains: What entities are How to find entity data How entities are related to one another How to organize them into groups for easier analysis What is an entity? From a New Relic product perspective, entity is a broad concept. An entity is anything we can identify that has data you can monitor. \"Entity\" can refer to fundamental data-reporting components like applications, hosts, and database services, but it can also refer to larger groupings of those components. For example, to monitor a data center, you could aggregate those hosts in New Relic to be a workload (a custom grouping of entities). That workload is, itself, also an entity. This conceptual definition of \"entity\" is important because New Relic's goal is to give you practical information about the status of your business-important entities (and not just give you an unhelpfully large stream of assorted metrics and data). Our focus on entities, and the relationships between them, helps us optimize monitoring and troubleshooting of complex, modern systems. Find and explore entities You'll find your entities wherever you see your data reporting in New Relic. Tip You can create new entity types to monitor any data source. Learn more about entity synthesis. Some tips for finding and understanding entity data: To find an entity's unique global identifier (GUID): from any list of monitored entities in the New Relic Explorer, hover over a specific entity and click the icon to see the GUID and other metadata. An entity's GUID is reported as the attribute entityGuid. You can query for an entity using this attribute in the query builder. Use the Related Entities view in the New Relic Explorer, service maps, distributed tracing, and our relationships API in GraphQL to see connections between entities. Explore entity data using our NerdGraph GraphiQL explorer (api.newrelic.com/graphiql). Entity relationships Connections between entities are automatically created by New Relic based on what we can infer from your telemetry. For example, when two services that communicate using HTTP are instrumented with New Relic, we infer a \"calls/called-by\" relationship between them. When viewing a single entity in either the New Relic Explorer, Navigator, or Lookout, you can see its Related Entities in the entity's mini overview. Related Entities is a visualization of the various entities connected directly to the current entity in focus. You can quickly view important metrics for these related entities and navigate from one entity to another, through all the connected parts of your stack. Tip You can learn more about how entities are related using our NerdGraph API. When relationships are not automatically detected, you can manually create them using the \"Add/edit related entities\" link in Related Entities. Important Currently, you can only manually create calls/called-by relationships between service entities. Tip To manage manual relationships, you need to have modify and delete capabilities on entity relationships. These are granted to user roles by default. Group and organize entities You can place entities into groups that reflect business-important relationships in your organization. For example, you might group all entities related to a specific team or department, or related to a specific service. Or you might group multiple hosts together to reflect their grouping in a data center. To group your entities, see: How to tag entities Create workloads (groups of related entities)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 264.38736,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "What is an entity in <em>New</em> <em>Relic</em>?",
        "sections": "What is an entity in <em>New</em> <em>Relic</em>?",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> monitoring is built around the <em>concept</em> of the entity. An entity is anything that reports data to <em>New</em> <em>Relic</em>. This document explains: What entities are How to find entity data How entities are related to <em>one</em> another How to organize them into groups for easier analysis What is an entity"
      },
      "id": "603ec160e7b9d295f72a07fc"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance": [
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 371.12396,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " at the top of the <em>New</em> <em>Relic</em> Explorer to filter down to the entities you care about. You can <em>use</em> multiple filter conditions. To filter down to certain entities using tags: From <em>one</em>.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "What is an entity in New Relic?",
        "What is an entity?",
        "Find and explore entities",
        "Tip",
        "Entity relationships",
        "Important",
        "Group and organize entities"
      ],
      "title": "What is an entity in New Relic?",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "52a3e08bc9103c717d27b153e4fd4f547d6ecc32",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-05-04T16:41:16Z",
      "updated_at": "2021-04-22T01:24:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic monitoring is built around the concept of the entity. An entity is anything that reports data to New Relic. This document explains: What entities are How to find entity data How entities are related to one another How to organize them into groups for easier analysis What is an entity? From a New Relic product perspective, entity is a broad concept. An entity is anything we can identify that has data you can monitor. \"Entity\" can refer to fundamental data-reporting components like applications, hosts, and database services, but it can also refer to larger groupings of those components. For example, to monitor a data center, you could aggregate those hosts in New Relic to be a workload (a custom grouping of entities). That workload is, itself, also an entity. This conceptual definition of \"entity\" is important because New Relic's goal is to give you practical information about the status of your business-important entities (and not just give you an unhelpfully large stream of assorted metrics and data). Our focus on entities, and the relationships between them, helps us optimize monitoring and troubleshooting of complex, modern systems. Find and explore entities You'll find your entities wherever you see your data reporting in New Relic. Tip You can create new entity types to monitor any data source. Learn more about entity synthesis. Some tips for finding and understanding entity data: To find an entity's unique global identifier (GUID): from any list of monitored entities in the New Relic Explorer, hover over a specific entity and click the icon to see the GUID and other metadata. An entity's GUID is reported as the attribute entityGuid. You can query for an entity using this attribute in the query builder. Use the Related Entities view in the New Relic Explorer, service maps, distributed tracing, and our relationships API in GraphQL to see connections between entities. Explore entity data using our NerdGraph GraphiQL explorer (api.newrelic.com/graphiql). Entity relationships Connections between entities are automatically created by New Relic based on what we can infer from your telemetry. For example, when two services that communicate using HTTP are instrumented with New Relic, we infer a \"calls/called-by\" relationship between them. When viewing a single entity in either the New Relic Explorer, Navigator, or Lookout, you can see its Related Entities in the entity's mini overview. Related Entities is a visualization of the various entities connected directly to the current entity in focus. You can quickly view important metrics for these related entities and navigate from one entity to another, through all the connected parts of your stack. Tip You can learn more about how entities are related using our NerdGraph API. When relationships are not automatically detected, you can manually create them using the \"Add/edit related entities\" link in Related Entities. Important Currently, you can only manually create calls/called-by relationships between service entities. Tip To manage manual relationships, you need to have modify and delete capabilities on entity relationships. These are granted to user roles by default. Group and organize entities You can place entities into groups that reflect business-important relationships in your organization. For example, you might group all entities related to a specific team or department, or related to a specific service. Or you might group multiple hosts together to reflect their grouping in a data center. To group your entities, see: How to tag entities Create workloads (groups of related entities)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 264.3873,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "What is an entity in <em>New</em> <em>Relic</em>?",
        "sections": "What is an entity in <em>New</em> <em>Relic</em>?",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> monitoring is built around the <em>concept</em> of the entity. An entity is anything that reports data to <em>New</em> <em>Relic</em>. This document explains: What entities are How to find entity data How entities are related to <em>one</em> another How to organize them into groups for easier analysis What is an entity"
      },
      "id": "603ec160e7b9d295f72a07fc"
    },
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 237.6548,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the data throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/core-concepts/transition-new-relic-one-insights": [
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 372.25354,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 371.12396,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " at the top of the <em>New</em> <em>Relic</em> Explorer to filter down to the entities you care about. You can <em>use</em> multiple filter conditions. To filter down to certain entities using tags: From <em>one</em>.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "What is an entity in New Relic?",
        "What is an entity?",
        "Find and explore entities",
        "Tip",
        "Entity relationships",
        "Important",
        "Group and organize entities"
      ],
      "title": "What is an entity in New Relic?",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "52a3e08bc9103c717d27b153e4fd4f547d6ecc32",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-05-04T16:41:16Z",
      "updated_at": "2021-04-22T01:24:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic monitoring is built around the concept of the entity. An entity is anything that reports data to New Relic. This document explains: What entities are How to find entity data How entities are related to one another How to organize them into groups for easier analysis What is an entity? From a New Relic product perspective, entity is a broad concept. An entity is anything we can identify that has data you can monitor. \"Entity\" can refer to fundamental data-reporting components like applications, hosts, and database services, but it can also refer to larger groupings of those components. For example, to monitor a data center, you could aggregate those hosts in New Relic to be a workload (a custom grouping of entities). That workload is, itself, also an entity. This conceptual definition of \"entity\" is important because New Relic's goal is to give you practical information about the status of your business-important entities (and not just give you an unhelpfully large stream of assorted metrics and data). Our focus on entities, and the relationships between them, helps us optimize monitoring and troubleshooting of complex, modern systems. Find and explore entities You'll find your entities wherever you see your data reporting in New Relic. Tip You can create new entity types to monitor any data source. Learn more about entity synthesis. Some tips for finding and understanding entity data: To find an entity's unique global identifier (GUID): from any list of monitored entities in the New Relic Explorer, hover over a specific entity and click the icon to see the GUID and other metadata. An entity's GUID is reported as the attribute entityGuid. You can query for an entity using this attribute in the query builder. Use the Related Entities view in the New Relic Explorer, service maps, distributed tracing, and our relationships API in GraphQL to see connections between entities. Explore entity data using our NerdGraph GraphiQL explorer (api.newrelic.com/graphiql). Entity relationships Connections between entities are automatically created by New Relic based on what we can infer from your telemetry. For example, when two services that communicate using HTTP are instrumented with New Relic, we infer a \"calls/called-by\" relationship between them. When viewing a single entity in either the New Relic Explorer, Navigator, or Lookout, you can see its Related Entities in the entity's mini overview. Related Entities is a visualization of the various entities connected directly to the current entity in focus. You can quickly view important metrics for these related entities and navigate from one entity to another, through all the connected parts of your stack. Tip You can learn more about how entities are related using our NerdGraph API. When relationships are not automatically detected, you can manually create them using the \"Add/edit related entities\" link in Related Entities. Important Currently, you can only manually create calls/called-by relationships between service entities. Tip To manage manual relationships, you need to have modify and delete capabilities on entity relationships. These are granted to user roles by default. Group and organize entities You can place entities into groups that reflect business-important relationships in your organization. For example, you might group all entities related to a specific team or department, or related to a specific service. Or you might group multiple hosts together to reflect their grouping in a data center. To group your entities, see: How to tag entities Create workloads (groups of related entities)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 264.3873,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "What is an entity in <em>New</em> <em>Relic</em>?",
        "sections": "What is an entity in <em>New</em> <em>Relic</em>?",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> monitoring is built around the <em>concept</em> of the entity. An entity is anything that reports data to <em>New</em> <em>Relic</em>. This document explains: What entities are How to find entity data How entities are related to <em>one</em> another How to organize them into groups for easier analysis What is an entity"
      },
      "id": "603ec160e7b9d295f72a07fc"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data": [
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 372.25336,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "What is an entity in New Relic?",
        "What is an entity?",
        "Find and explore entities",
        "Tip",
        "Entity relationships",
        "Important",
        "Group and organize entities"
      ],
      "title": "What is an entity in New Relic?",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "52a3e08bc9103c717d27b153e4fd4f547d6ecc32",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-05-04T16:41:16Z",
      "updated_at": "2021-04-22T01:24:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic monitoring is built around the concept of the entity. An entity is anything that reports data to New Relic. This document explains: What entities are How to find entity data How entities are related to one another How to organize them into groups for easier analysis What is an entity? From a New Relic product perspective, entity is a broad concept. An entity is anything we can identify that has data you can monitor. \"Entity\" can refer to fundamental data-reporting components like applications, hosts, and database services, but it can also refer to larger groupings of those components. For example, to monitor a data center, you could aggregate those hosts in New Relic to be a workload (a custom grouping of entities). That workload is, itself, also an entity. This conceptual definition of \"entity\" is important because New Relic's goal is to give you practical information about the status of your business-important entities (and not just give you an unhelpfully large stream of assorted metrics and data). Our focus on entities, and the relationships between them, helps us optimize monitoring and troubleshooting of complex, modern systems. Find and explore entities You'll find your entities wherever you see your data reporting in New Relic. Tip You can create new entity types to monitor any data source. Learn more about entity synthesis. Some tips for finding and understanding entity data: To find an entity's unique global identifier (GUID): from any list of monitored entities in the New Relic Explorer, hover over a specific entity and click the icon to see the GUID and other metadata. An entity's GUID is reported as the attribute entityGuid. You can query for an entity using this attribute in the query builder. Use the Related Entities view in the New Relic Explorer, service maps, distributed tracing, and our relationships API in GraphQL to see connections between entities. Explore entity data using our NerdGraph GraphiQL explorer (api.newrelic.com/graphiql). Entity relationships Connections between entities are automatically created by New Relic based on what we can infer from your telemetry. For example, when two services that communicate using HTTP are instrumented with New Relic, we infer a \"calls/called-by\" relationship between them. When viewing a single entity in either the New Relic Explorer, Navigator, or Lookout, you can see its Related Entities in the entity's mini overview. Related Entities is a visualization of the various entities connected directly to the current entity in focus. You can quickly view important metrics for these related entities and navigate from one entity to another, through all the connected parts of your stack. Tip You can learn more about how entities are related using our NerdGraph API. When relationships are not automatically detected, you can manually create them using the \"Add/edit related entities\" link in Related Entities. Important Currently, you can only manually create calls/called-by relationships between service entities. Tip To manage manual relationships, you need to have modify and delete capabilities on entity relationships. These are granted to user roles by default. Group and organize entities You can place entities into groups that reflect business-important relationships in your organization. For example, you might group all entities related to a specific team or department, or related to a specific service. Or you might group multiple hosts together to reflect their grouping in a data center. To group your entities, see: How to tag entities Create workloads (groups of related entities)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 264.38727,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "What is an entity in <em>New</em> <em>Relic</em>?",
        "sections": "What is an entity in <em>New</em> <em>Relic</em>?",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> monitoring is built around the <em>concept</em> of the entity. An entity is anything that reports data to <em>New</em> <em>Relic</em>. This document explains: What entities are How to find entity data How entities are related to <em>one</em> another How to organize them into groups for easier analysis What is an entity"
      },
      "id": "603ec160e7b9d295f72a07fc"
    },
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 237.65466,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the data throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic": [
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 372.25336,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 371.12378,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " at the top of the <em>New</em> <em>Relic</em> Explorer to filter down to the entities you care about. You can <em>use</em> multiple filter conditions. To filter down to certain entities using tags: From <em>one</em>.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 237.65466,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the data throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one": [
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 255.0668,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>Get</em> <em>started</em> with <em>New</em> <em>Relic</em> Lookout",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " to a higher edition. <em>Get</em> <em>started</em> with <em>New</em> <em>Relic</em> Lookout To access <em>New</em> <em>Relic</em> Lookout, click the Apps button in <em>New</em> <em>Relic</em> <em>One</em> and locate the <em>New</em> <em>Relic</em> Lookout launcher. You can also access <em>New</em> <em>Relic</em> Lookout directly from the <em>New</em> <em>Relic</em> <em>One</em> header bar, via the More dropdown. Enablement of key service"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 241.35294,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " at the top of the <em>New</em> <em>Relic</em> Explorer to filter down to the entities you care about. You can <em>use</em> multiple filter conditions. To filter down to certain entities using tags: From <em>one</em>.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "What is an entity in New Relic?",
        "What is an entity?",
        "Find and explore entities",
        "Tip",
        "Entity relationships",
        "Important",
        "Group and organize entities"
      ],
      "title": "What is an entity in New Relic?",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "52a3e08bc9103c717d27b153e4fd4f547d6ecc32",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/what-entity-new-relic/",
      "published_at": "2021-05-04T16:41:16Z",
      "updated_at": "2021-04-22T01:24:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic monitoring is built around the concept of the entity. An entity is anything that reports data to New Relic. This document explains: What entities are How to find entity data How entities are related to one another How to organize them into groups for easier analysis What is an entity? From a New Relic product perspective, entity is a broad concept. An entity is anything we can identify that has data you can monitor. \"Entity\" can refer to fundamental data-reporting components like applications, hosts, and database services, but it can also refer to larger groupings of those components. For example, to monitor a data center, you could aggregate those hosts in New Relic to be a workload (a custom grouping of entities). That workload is, itself, also an entity. This conceptual definition of \"entity\" is important because New Relic's goal is to give you practical information about the status of your business-important entities (and not just give you an unhelpfully large stream of assorted metrics and data). Our focus on entities, and the relationships between them, helps us optimize monitoring and troubleshooting of complex, modern systems. Find and explore entities You'll find your entities wherever you see your data reporting in New Relic. Tip You can create new entity types to monitor any data source. Learn more about entity synthesis. Some tips for finding and understanding entity data: To find an entity's unique global identifier (GUID): from any list of monitored entities in the New Relic Explorer, hover over a specific entity and click the icon to see the GUID and other metadata. An entity's GUID is reported as the attribute entityGuid. You can query for an entity using this attribute in the query builder. Use the Related Entities view in the New Relic Explorer, service maps, distributed tracing, and our relationships API in GraphQL to see connections between entities. Explore entity data using our NerdGraph GraphiQL explorer (api.newrelic.com/graphiql). Entity relationships Connections between entities are automatically created by New Relic based on what we can infer from your telemetry. For example, when two services that communicate using HTTP are instrumented with New Relic, we infer a \"calls/called-by\" relationship between them. When viewing a single entity in either the New Relic Explorer, Navigator, or Lookout, you can see its Related Entities in the entity's mini overview. Related Entities is a visualization of the various entities connected directly to the current entity in focus. You can quickly view important metrics for these related entities and navigate from one entity to another, through all the connected parts of your stack. Tip You can learn more about how entities are related using our NerdGraph API. When relationships are not automatically detected, you can manually create them using the \"Add/edit related entities\" link in Related Entities. Important Currently, you can only manually create calls/called-by relationships between service entities. Tip To manage manual relationships, you need to have modify and delete capabilities on entity relationships. These are granted to user roles by default. Group and organize entities You can place entities into groups that reflect business-important relationships in your organization. For example, you might group all entities related to a specific team or department, or related to a specific service. Or you might group multiple hosts together to reflect their grouping in a data center. To group your entities, see: How to tag entities Create workloads (groups of related entities)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 171.93906,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "What is an entity in <em>New</em> <em>Relic</em>?",
        "sections": "What is an entity in <em>New</em> <em>Relic</em>?",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> monitoring is built around the concept of the entity. An entity is anything that reports data to <em>New</em> <em>Relic</em>. This document explains: What entities are How to find entity data How entities are related to <em>one</em> another How to organize them into groups for easier analysis What is an entity"
      },
      "id": "603ec160e7b9d295f72a07fc"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/ui-data/basic-ui-features": [
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 244.96684,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry <em>Data</em> Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the <em>data</em> throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    },
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.89653,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any <em>data</em> in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom <em>data</em>. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.1716,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize <em>and</em> find your <em>data</em>",
        "sections": "<em>Use</em> tags to help organize <em>and</em> find your <em>data</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you can see an accountId tag being used to filter workloads for a specific account. You can <em>use</em> tags to: Help organize <em>data</em> coming from a large number of sources and&#x2F;or to a large number of <em>New</em> <em>Relic</em> accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see"
      },
      "id": "603ebd1228ccbc6278eba754"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/ui-data/explore-downstream-dependencies-new-relic-one": [
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 244.9667,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry <em>Data</em> Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the <em>data</em> throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    },
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.8964,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any <em>data</em> in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom <em>data</em>. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.17148,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize <em>and</em> find your <em>data</em>",
        "sections": "<em>Use</em> tags to help organize <em>and</em> find your <em>data</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you can see an accountId tag being used to filter workloads for a specific account. You can <em>use</em> tags to: Help organize <em>data</em> coming from a large number of sources and&#x2F;or to a large number of <em>New</em> <em>Relic</em> accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see"
      },
      "id": "603ebd1228ccbc6278eba754"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/ui-data/metric-normalization-rules": [
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 244.96658,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry <em>Data</em> Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the <em>data</em> throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    },
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.89624,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any <em>data</em> in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom <em>data</em>. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.17133,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize <em>and</em> find your <em>data</em>",
        "sections": "<em>Use</em> tags to help organize <em>and</em> find your <em>data</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you can see an accountId tag being used to filter workloads for a specific account. You can <em>use</em> tags to: Help organize <em>data</em> coming from a large number of sources and&#x2F;or to a large number of <em>New</em> <em>Relic</em> accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see"
      },
      "id": "603ebd1228ccbc6278eba754"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/ui-data/new-relic-feature-end-life-announcements-july-2020": [
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 244.96658,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry <em>Data</em> Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the <em>data</em> throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    },
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.89624,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any <em>data</em> in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom <em>data</em>. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    },
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 238.17133,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize <em>and</em> find your <em>data</em>",
        "sections": "<em>Use</em> tags to help organize <em>and</em> find your <em>data</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you can see an accountId tag being used to filter workloads for a specific account. You can <em>use</em> tags to: Help organize <em>data</em> coming from a large number of sources and&#x2F;or to a large number of <em>New</em> <em>Relic</em> accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see"
      },
      "id": "603ebd1228ccbc6278eba754"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/workloads/use-workloads": [
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 318.13538,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you can see an accountId tag being used to filter <em>workloads</em> for a specific account. You can <em>use</em> tags to: Help organize data coming from a large number of sources and&#x2F;or to a large number of <em>New</em> <em>Relic</em> accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 273.96475,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the data throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    },
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 242.08713,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/workloads/workload-status-configuration": [
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 318.13538,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you can see an accountId tag being used to filter <em>workloads</em> for a specific account. You can <em>use</em> tags to: Help organize data coming from a large number of sources and&#x2F;or to a large number of <em>New</em> <em>Relic</em> accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 273.96475,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the data throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    },
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 242.08713,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/workloads/workload-status-views-notifications": [
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 318.1352,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you can see an accountId tag being used to filter <em>workloads</em> for a specific account. You can <em>use</em> tags to: Help organize data coming from a large number of sources and&#x2F;or to a large number of <em>New</em> <em>Relic</em> accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 273.9646,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the data throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    },
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 242.08698,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    }
  ],
  "/docs/new-relic-one/use-new-relic-one/workloads/workloads-isolate-resolve-incidents-faster": [
    {
      "sections": [
        "Use tags to help organize and find your data",
        "Tip",
        "Tag format and limits",
        "Best practices and tips",
        "Tips on keeping tags simple:",
        "Tips on using tags consistently:",
        "Tips on cross-team implementation:",
        "Tag examples",
        "Team-related tags",
        "Environment-related tags",
        "Criticality-related tags",
        "How tags are added",
        "Add tags via UI or API",
        "APM agent tags",
        "Infrastructure data tags",
        "Use tags to filter the UI",
        "Custom queries and charts"
      ],
      "title": "Use tags to help organize and find your data",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "e2e2d53776b9109965df9de2a20660e9f60bd479",
      "image": "https://docs.newrelic.com/static/529f55ef72f3e366e6cb4a7be67229b6/c1b63/new-relic-tags-workloads_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/use-tags-help-organize-find-your-data/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-05-04T23:58:05Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the software industry, a tag typically refers to a piece of metadata added to a data set for the purpose of improving data organization and findability. At New Relic, our tags are key:value pairs (like team: operations) added to various sets of data, like monitored apps and hosts, agents, dashboards, and workloads. We make some important attributes available as tags (for example, app metadata like app name and language, and host metadata like host name and AWS region). And you can also add your own custom tags. You can use tags in the UI to filter down to relevant data, as shown here: Here you can see an accountId tag being used to filter workloads for a specific account. You can use tags to: Help organize data coming from a large number of sources and/or to a large number of New Relic accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see example use cases) Better organize and search dashboards and workloads Tags are useful for organizing data at a high level. If you wanted to add more fine-grained detail, like capturing user names or other high-cardinality values, custom attributes or custom events would be a better solution. Tip At New Relic, tags were previously called \"labels.\" You may sometimes see \"label\" used in our code; for example, some of our APM agent config files use a label config option for tags. Keep reading to learn more about tags. Tag format and limits Format requirements and limits for tags: The UI has limits on the total number of tags it can display per entity: Limit of 100 for tags reported by default or added via agent/integration configuration. Limit of 100 for custom tags added via UI or API. The following are maximum character length for tags: Key: 128 characters Value: 256 characters When using our API to add tags, a dash (-) in a tag key is interpreted as a minus symbol. If your tag key has a dash, use back ticks around it (like `key-name`). Best practices and tips Before adding tags, we recommend first seeing how our default tags work for you. When you're ready to add your own tags, read the best practices below to get the most out of them. Tips on keeping tags simple: Start by adding only tags you know you’ll definitely use. Unused tags create noise and may add confusion. Try to use short tags. Shorter tags are easier to parse, and also the UI may sometimes truncate longer tags. (See character limits.) When possible, use keys and values that are human-readable (for example, region: EMEA is better than Param8323 : 1229072). Avoid including several values like regions: EMEA | US | LATAM in a single tag. We recommend using three different tags for that, like region: emea, region: us, and region: latam. If you want to match multiple tags, you can do that using the advanced options in the filter UI. Tips on using tags consistently: Try to be consistent with tag language across your teams and entities. Be consistent with naming. For example, avoid using both region: emea and reg: emea. Be consistent with format. For example, avoid using both camelCase and kebab-case. Be consistent with capitalization. For example, avoid using both env: staging and env: Staging (although tag searching is case-insensitive in the UI and API) Tips on cross-team implementation: One reason for using tags is to improve observability and cost allocation. For this reason, responsibility for tag implementation is often assigned to an observability team, SREs, a group of architects, or a cross-team task force. We recommend the people responsible for implementing tags meet and create an internal policy to describe how the tags are defined and which conventions are to be used. Keep this reference manual up-to-date. Automate the definition of tags when you deploy New Relic agents, at the cloud provider, or through New Relic automation tools, such as the API or Terraform. Create recurring reports that identify entities that are non-compliant with your tagging standards. Tag examples Here are some examples of common ways to use tags to organize data: Team-related tags Creating tags for team names can be helpful to understand which team, group, department, or region was responsible for a change that led to a performance issue. Team examples: team: backend team: frontend team: db Role examples: roles: architecture roles: devops roles: pm Region examples: region: emea region: america region: asia Environment-related tags You can create entities for the environment they belong to. Examples: env: production env: qa env: development env: staging Criticality-related tags You can create tags related to criticality levels, which lets you easier track the most critical issues. Examples: layer: level1 layer: level2 layer: level3 How tags are added Some important attributes, by default, are available for use as tags. For example, the account name, the account ID, and some basic host/server metadata are available as default tags. You can't remove these available-by-default tags. Here are some details about how tags are added for some specific data sources: Add tags via UI or API When you add tags via the UI or API, this occurs at the entity level. This means that, for example, if you have multiple APM agents monitoring a single entity and apply a tag via the UI, that tag is available for all data coming from that entity. To add or delete tags via the UI: Select a monitored entity, like a monitored app or host. Near the entity’s name at the top of the page, select the See metadata and manage tags menu. In the menu that pops up, add or delete a tag. To manage tags via API: see our NerdGraph tagging docs. For a guide to using our CLI to automate tagging, see our developer site. APM agent tags You can apply tags via the UI and API or you can add tags using APM agent configuration: C SDK: not available Java Go .NET Node.js PHP Python Ruby Infrastructure data tags There are several ways tags are added to infrastructure entities and services: Use the UI or API to add tags at the entity level. Infrastructure agent: some attributes are available by default as tags. You can also add custom attributes, which are also available as tags in the UI. On-host integrations: some attributes are available by default as tags. You can also add tags by using integration-specific labels config options (for an example, see the labels config for the Apache integration). Cloud service integrations: by default we report tags and labels that are defined in the cloud service. To add tags, you'd add them on the cloud-service-side. Use tags to filter the UI Use the filter field at the top of the New Relic Explorer to filter down to the entities you care about. You can use multiple filter conditions. To filter down to certain entities using tags: From one.newrelic.com, click Explorer. Click the Filter by... field to see a dropdown of available attributes and tags. You can filter by multiple elements and use advanced search options. To find an entity’s metadata and tags from the UI, here are two options: From a list of entities in the UI, at the far right, select an entity's icon. OR Select an entity. Near the top of the page, select the icon. To use the API to view tags, see our NerdGraph docs. Learn about how to use tags with dashboards and how to use tags with workloads. Custom queries and charts As explained in Tag sources, some attributes are available as tags. You can query attributes and create custom charts using NRQL.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 318.1352,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Use</em> tags to help organize and find your data",
        "sections": "<em>Use</em> tags to help organize and find your data",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " you can see an accountId tag being used to filter <em>workloads</em> for a specific account. You can <em>use</em> tags to: Help organize data coming from a large number of sources and&#x2F;or to a large number of <em>New</em> <em>Relic</em> accounts Identity teams, roles, environment, or regions to know who’s responsible for what (see"
      },
      "id": "603ebd1228ccbc6278eba754"
    },
    {
      "sections": [
        "Introduction to New Relic One",
        "Tip",
        "Quickly understand context",
        "Query your data more easily",
        "Enhanced dashboards",
        "Build on New Relic One",
        "What’s next?"
      ],
      "title": "Introduction to New Relic One",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Get started"
      ],
      "external_id": "c9ba93c83a579625a4ba3364c6046f3c475cba3a",
      "image": "https://docs.newrelic.com/static/5412b7176ee25b0da240affb9c8bc23c/c1b63/NR1-explorer-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/get-started/introduction-new-relic-one/",
      "published_at": "2021-05-04T16:24:48Z",
      "updated_at": "2021-05-04T16:24:48Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic One is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With New Relic One, you can see and act on all the data throughout your entire system. Tip To use New Relic One and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. To access New Relic One: Go to one.newrelic.com. Or, if you report data to the EU data center go to one.eu.newrelic.com. Tip Learn more about New Relic One’s basic UI features. Quickly understand context We provide multiple ways to understand your system's dependencies, so you can easily see how everything fits together and troubleshoot problems. New Relic One gives you and your teams a connected view that cuts through complexity! If you want to... Use this Have an overall view of your system, and drill down to get performance details. Use the New Relic Explorer as the front door to New Relic One: observe, group, and filter the performance data from all the entities (that is, all applications, services, hosts, or containers) in your system. Gain extensive visibility into each entity in your solution, its alert status, and how the entities are connected. Use the New Relic Navigator to give you a high density overview of all your entities so you can detect any issues at a glance. And use the New Relic Lookout to spot entities recently experiencing behavior deviations. Provide context for your entities. Add tags to all your entities. Or create tags for teams and all the services they monitor. Use tags to illustrate relationships and contextual information for what you monitor. By thoughtfully tagging your entities, you can connect all the data your teams need to understand their increasingly complex and interdependent systems. See how each part of your system is connected. Service maps illustrate your upstream and downstream dependencies. Visualize the aggregated health and activity data from all you monitor. Group and monitor any entities together into functional team-focused, project-focused groupings, or any other attribute, with workloads. Fetch and analyze specific data. Get more context while you query with the query builder, which surfaces data definitions as you craft and edit queries. Create visuals that showcase your business needs at a glance. Tailor custom dashboards for your unique needs. Find a service or dashboard in a complex environment. Search by name across all accounts in the unified search, or filter the explorer by tags or text. View everything you’re monitoring in one place, like entities or dashboards across your organization. View a list of all the dependencies for a service. The dependencies view tab in an entity summary shows all the dependencies of the entity you’re viewing. Track activity as it moves across your distributed system. Distributed tracing helps you analyze your modern environment. Understand how everything is connected via API. The NerdGraph GraphiQL explorer manages all your entities, tags, and relationships. Query your data more easily On the Browse data menu on the top navigation menu you can easily access your basic telemetry data (metrics, events, logs, and traces). Wherever you go in the UI, Query your data is available. No matter your level of proficiency with our query language, you can create custom queries and charts: Browse your data in a query-less experience with our data explorer. Use your NRQL (our query language) expertise to build custom charts in the NRQL mode query builder. Run PromQL-style queries in the query builder. one.newrelic.com > Query your data: Build NRQL and PROMQL-like queries. Enhanced dashboards one.newrelic.com > Dashboards: Quickly create information dense custom views into the data that matters most to you with dashboards in New Relic One. New Relic One dashboards let you build better visualizations more easily, with more options to customize. Dashboard features include: Perform NRQL queries and create charts and dashboards everywhere in the platform using the query builder. Manage your charts and dashboards easily using our quick-access CRUD menus and editing options. Explore and contextualize data with advanced tooltips and zoom in functions to monitor what your systems are doing in real time. Search your dashboards for attributes and metrics. Send data to your dashboards using our agents, integrations, and APIs. Share dashboards or charts as a .pdf, or embed a chart in an external site. Tip If you previously used New Relic Insights to create dashboards, these are available as New Relic One dashboards. Build on New Relic One If custom charts and dashboards don't solve your current challenge, we give you a framework for building React JavaScript applications that: Live on New Relic One, alongside your other New Relic-monitored data. Feature highly tailored visualizations. Display data from any source you want, whether from a New Relic-monitored entity or data from any service or API. And you can use open source apps built by the community, and contribute your own open source apps. To learn more, see New Relic One applications. What’s next? To get started understanding how to get around in New Relic One: See what data you have available with the data explorer. Browse your monitored entities with the New Relic Explorer. Use our NerdGraph API to add tags to your data. Learn about dashboards.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 273.9646,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "sections": "Introduction to <em>New</em> <em>Relic</em> <em>One</em>",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": "<em>New</em> <em>Relic</em> <em>One</em> is the platform that gives you access to our Telemetry Data Platform, our Full-Stack Observability features, and our Applied Intelligence tools. With <em>New</em> <em>Relic</em> <em>One</em>, you can see and act on all the data throughout your entire system. Tip To <em>use</em> <em>New</em> <em>Relic</em> <em>One</em> and the rest of our"
      },
      "id": "603ec19164441f9e704e8896"
    },
    {
      "sections": [
        "New Relic Lookout: Monitor your estate at a glance",
        "Why it matters",
        "Requirements",
        "Get started with New Relic Lookout",
        "Circle visualization and table view",
        "Abnormal golden signals",
        "Instant search",
        "Change view",
        "Drill down into the details",
        "Performance tab",
        "Abnormal History tab",
        "Correlations tab",
        "Profile tab",
        "Traces tab",
        "Create a custom view",
        "Query: Compare the last 15 minutes to the same time 1 day ago",
        "Query: Compare a specific time range to the same range a month ago",
        "Example: Unusual increases in error count"
      ],
      "title": "New Relic Lookout: Monitor your estate at a glance",
      "type": "docs",
      "tags": [
        "New Relic One",
        "Use New Relic One",
        "Core concepts"
      ],
      "external_id": "9193dcc8851c185ff5d96f6f93ab412bd1be69e9",
      "image": "https://docs.newrelic.com/static/178b37068bad2a68cff027c8bdcf663a/c1b63/lookout-intro.png",
      "url": "https://docs.newrelic.com/docs/new-relic-one/use-new-relic-one/core-concepts/new-relic-lookout-monitor-your-estate-glance/",
      "published_at": "2021-05-05T01:24:57Z",
      "updated_at": "2021-05-05T01:24:56Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic Lookout provides visibility into your entire estate. It doesn't require any configuration — you can query anything in your estate that matters to you right now and understand your system as a whole, or dive deep into causes and effects, so you can quickly get the data you need to take action. Know exactly where to focus your attention with New Relic Lookout. The brighter the color, the more severe the change, and the bigger the size, the bigger the scale. Then dig deeper with correlations and abnormal history to see how it impacts your whole system—no configuration needed. Why it matters New Relic Lookout helps software teams of any size discover potential issues before they have an impact. Fill gaps in monitoring with full coverage out-of-the-box, no configuration or setup required. Immediately see anything deviating from normal across your entire estate. Proactively spot emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in New Relic database (NRDB), including third-party, open, and custom data. Launch into other areas of New Relic One for deeper understanding Requirements New Relic Lookout requires Pro or Enterprise edition. If you are on Standard edition, you can still use the New Relic Lookout view in the New Relic Explorer. If you want to see data spanning 13-months, correlations, profiles, traces, and other details, you must upgrade to a higher edition. Get started with New Relic Lookout To access New Relic Lookout, click the Apps button in New Relic One and locate the New Relic Lookout launcher. You can also access New Relic Lookout directly from the New Relic One header bar, via the More dropdown. Enablement of key service performance indicator data is required for New Relic Lookout to provide value from the data you already have. The default view provides insight into three key Service performance indicators broken down by application: throughput, response time, and errors. These metrics are analyzed to show how the data has behaved during the last five minutes compared to the prior hour. one.newrelic.com > Apps > New Relic Lookout: Anything that significantly deviates from the trend is automatically discovered by New Relic Lookout, which doesn't require any configuration. Circle visualization and table view Each application (or other facet) is represented by a circle. The size of the circles indicate the magnitude of the signal for that application and the color indicates whether the value has significantly decreased or increased in the last five minutes, based on the standard deviation of the prior hour (default evaluation and comparison time windows.) Please note that the type of signal is important when interpreting your results. When you first look at the legend below, you might be tempted to interpret yellow as good and dark purple as bad, but that is not always the case. Here are some examples: In the APM/Services golden signals, a dark yellow circle in Throughput might signify that something bad has occurred and led to a drop in traffic. At the same time, a dark purple circle might also be concerning due to unexpected load. Both are significant findings worth exploring. In Browser golden signals, a dark purple circle in Page Views might be great, as you are seeing more traffic to your site! With Errors golden signals (in all entity types), a large circle, even if gray (not deviating from normal volume), is worth exploring because a high count of errors in your system is important to investigate. The legend allows you to change the colors used to highlight deviating services To change the color palette, click the gear icon by the low-high color legend. This allows you to change the colors used to highlight deviating services. To get a table view of the same data, click the toggle on the right. You can also hover over each color to filter the view by degree lower or higher deviance. Abnormal golden signals On the right, New Relic Lookout displays the most significantly deviating applications (or other facet) in a side panel, weighted by both the magnitude of the performance indicators and the scale of their deviations. Details include the name of the key performance indicator, their magnitude during the recent time window, and the difference between the averages from one time compared to the other. Instant search Click the magnifying glass icon in the side panel to open a search box. Typing into the search box filters the circles, table, and abnormal signals to applications (or other facets) that contain the text. This is a good way to quickly zoom to various subsystems. New Relic Lookout doesn't rerun the analysis when using the instant search. Change view Click the Change View button on the right side panel. The panel that appears shows you all the entity-specific golden signals you can toggle between out of the box. By choosing the Browser Golden Signal or other views, you can change from the default view. Each new view will have the golden signals appropriate for that entity type. Drill down into the details To analyze an application or facet, click a circle, table row, or abnormal golden signal. The details panel shows the degree of deviation of the performance indicator, a link to the affected entity, and recent alert and deployment activity for that entity, when available. There’s also an indication of whether the selected evaluation time period would be abnormal or not in reference to other comparison time windows, such as the same time yesterday or the same time last week. This allows you to quickly see if the abnormal behavior is odd in general, or just based on the comparison time window. Performance tab The default tab shows charts for other key performance indicators for the selected application or facet. The charts compare the two time windows being analyzed. You can click their titles to rerun the analysis, focusing on the selected key performance indicator. When the target is a New Relic One application, we show the top transactions, error classes, external services, and database operations, alongside links to the relevant New Relic One features. Abnormal History tab This section analyzes past performance of the selected signal and calls out any time periods with notable abnormalities. Each card represents an abnormal time window and can be clicked for more details. The charts will display any relevant violations and deployments in New Relic. Correlations tab New Relic Lookout can find other signals that began behaving differently around the same time as the selected signal for that entity type. Clicking the name of the signal reruns the analysis, focusing on that key performance indicator. The chart titles link to New Relic One when there’s an associated entity in your account. Note that correlations currently do not analyze across accounts. The correlated signals displayed are for others in the account of the original application you are viewing. This helps focus the data on correlations that are more likely related to your issue. Profile tab Based on the same technology as New Relic’s error profiles, this tab compares the last five minutes to the prior hour by default (or whatever time windows you’ve selected with query editing) and surfaces any attributes that have significantly different distributions in the events being targeted by the selected signal. For example, if a custom attribute indicated that a recent throughput spike came from one user, that would surface highly in Profiles if most of the traffic usually comes from many users. Traces tab If the entity has distributed traces configured and available in the selected evaluated time window, the Traces section is enabled. Each card shows a summary of a trace and can be clicked for details. The Explore all traces links to the distributed traces application, filtered to the selected entity. Create a custom view To target signals and time windows beyond the default values, click the Change view button and select Custom view. To create your own view: Select the account or subaccount. Select the data type (metrics or events). Different functionality is available depending on the type. In View a chart with, select the metric or event you are interested in. Default is golden signals (throughput, response time, and errors). You can also build custom queries (filters) to target a signal that isn't on the list. In Facet by, select what the circles represent. Default is appName, but you can also choose host or any other facetable attribute available for the signal you’ve selected. If you plan to save/favorite this new view, provide a name in the Name your view box. Keep in mind that you can edit this view at any time using the pencil icon. The default time windows analyzed by New Relic Lookout are the last five minutes compared to the hour before. Use the time controls (View data from and Compare data to) to target other time windows. one.newrelic.com > Apps > New Relic Lookout: All event and metric data in the New Relic database can be queried using the Edit query feature. Click Analyze to begin analyzing the signal you’ve selected. You can also create your own query: Create your query. This query is comparing data from the past thirty minutes to data from the same range a day ago. Change from Basic to Advanced after clicking the Custom view button. Select the data type (metrics or events). Different functionality is available depending on the type. Enter your query using NRQL. Please note that not all NRQL features are available in the Lookout Advanced query feature. By default, the system will run this query using the last five minutes of data compared to the previous hour. Some examples of the syntax for changing the comparison and evaluation time windows are below. Click Analyze to begin analyzing the signal you’ve selected. Query: Compare the last 15 minutes to the same time 1 day ago Please note that the UNTIL NOW portion is required here unlike in standard NRQL. Without the UNTIL NOW added, the system will query a 5 minute slice of data starting 15 minutes ago SINCE 15 minutes AGO UNTIL NOW COMPARE WITH 1 day ago Copy Query: Compare a specific time range to the same range a month ago SINCE ‘2021-03-07 07:00-0500’ UNTIL ‘2021-03-08 07:00-0500’ COMPARE WITH 1 month ago Copy Or: SINCE ‘today at midnight’ UNTIL ‘now’ COMPARE WITH 1 MONTH AGO Copy Example: Unusual increases in error count The default view of New Relic Lookout shows application status across your estate, comparing the last five minutes to the hour before. Under regular operation, most large systems may have a handful of abnormalities, but usually most things will indicate normal behavior. Suddenly, several circles begin to change to red under the Errors section. This indicates that several applications are experiencing unusual increases in error count. It may be that one or two circles for important systems are red, and perhaps much larger than they usually appear. Clicking one of these can provide more information on what is happening. You might see that the error rate is substantially elevated, even thousands of percent higher than normal. To troubleshoot this issue, here's what you might discover in the New Relic Lookout tabs: Performance would show you data about other signals, illuminating the characteristics of the change in system dynamics. Correlations would surface other applications that are affected and how, as well as opportunities to pivot to other applications that may be closer to the underlying causes. Traces, in turn, would show distributed traces, which can provide specific examples of traffic running through those systems. Abnormal history would show other times in the past week with elevated errors, showing whether or not this problem happens regularly, such as every day at the same time or whenever there is a deployment. Profiles might show that all or most of the new errors share common properties, such as all being isolated to just one region/account/user. Combining the information from these sections, not only can you get a sense of what is going on, but also where to focus actions to resolve the problem.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 242.08698,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "sections": "<em>New</em> <em>Relic</em> Lookout: Monitor your estate at a glance",
        "tags": "<em>Use</em> <em>New</em> <em>Relic</em> <em>One</em>",
        "body": " emerging problems in a real-time visualization of all system components. Gain faster incidents resolution through automatically surfaced causes and effects. Analyze any data in <em>New</em> <em>Relic</em> database (NRDB), including third-party, open, and custom data. Launch into other areas of <em>New</em> <em>Relic</em> <em>One</em> for deeper"
      },
      "id": "603e821e64441f5a444e8845"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/appendix/version-history": [
    {
      "sections": [
        "Partnership admin console",
        "Console components",
        "Partnership configuration settings",
        "Customer activity monitoring",
        "State-of-the-Partnership report",
        "Partner customer monitoring",
        "View an arbitrary customer",
        "Viewing detailed customer data"
      ],
      "title": "Partnership admin console",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "670e4d2e1db957100b23a7b8b0af6bf50cc8c996",
      "image": "https://docs.newrelic.com/static/43369c88523ebf526ae58fa5719d4efe/0abdd/crop-partnership-owner-account-settings.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partnership-admin-console/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The Partnership Admin Console is the interface for managing your customers' accounts and integration with New Relic. To access the console, sign into the partnership owner account, and go to: https://partner-admin-console.newrelic.com/accounts/ACCOUNT_ID/admin_console/ Copy You can also access the console from the New Relic UI: Go to rpm.newrelic.com > (account dropdown) > Account settings. From the left menu bar, select Partnerships. rpm.newrelic.com > (account dropdown) > Account settings > Partnerships: Partnership owners can access the Partnership Admin Console from their account settings in the New Relic UI. Console components The Partnership Admin Console has two main components: Partnership configuration settings Customer activity monitoring If multiple partnerships are associated with the New Relic master account, the menu also includes an option to switch partnership accounts. Partnership configuration settings In developing your integration with New Relic, you must specify a number of settings. For your convenience these settings are grouped together in the partnership console, including URLs for header/footer and various redirects, SSO configuration, and keys and the ability to manipulate them. Customer activity monitoring New Relic provides you with two tools for managing your customers: State-of-the-Partnership reports and live monitoring of all deployed New Relic agents in your partnership. Both of these tools provide insight into your customers who are using New Relic. They can be used to identify up-sale opportunities or to assist your support group in proactive support. State-of-the-Partnership report The State-of-the-Partnership report provides a summary of your customers with New Relic accounts and their activities. The report is broken down by language of the agents deployed, the agent version and the language version for each account. This report is run weekly for each partner. It is available on request from your New Relic Business Development contact. This report is an excellent way to see which of your customers with New Relic accounts are in fact using the service. Partner customer monitoring The Partner customer monitoring facility provides application performance data on the New Relic enabled applications that are running on your service. This facility allows you to easily identify customers experiencing performance problems. Where the performance problems are caused by under capacity, these customers are excellent sales opportunities. Alternatively your support or services organization will find this information useful in pre-emptively identifying customer issues or as good prospects for consulting services. View an arbitrary customer To view activity of a customer that does not appear in any of the filtered views: Go to rpm.newrelic.com > (account dropdown) > Switch accounts > Other accounts. New Relic will list all of the reporting accounts in the partnership. You can filter or search the list. Viewing detailed customer data Under normal circumstances a partner will be able to see only the summary level data in a customer's New Relic account. Through the Partnership Admin Console, partners will be permitted to drill down to the more detailed presentation. If you want to drill down from the Partnership Admin Console, add your user (typically support@partner.com or something similar) to the account. Typically this will be done at account creation. Avoid provisioning this user as the account Owner.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 130.31108,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> admin console",
        "sections": "<em>Partnership</em> admin console",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "The <em>Partnership</em> Admin Console is the interface for managing your customers&#x27; accounts and <em>integration</em> with <em>New</em> <em>Relic</em>. To access the console, sign into the <em>partnership</em> owner account, and go to: https:&#x2F;&#x2F;<em>partner</em>-admin-console.newrelic.com&#x2F;accounts&#x2F;ACCOUNT_ID&#x2F;admin_console&#x2F; Copy You can also access"
      },
      "id": "603ed3e3196a6735baa83dad"
    },
    {
      "sections": [
        "Partners: Contact New Relic",
        "Integration assistance",
        "Technical assistance (regular priority)",
        "Emergency technical assistance",
        "Customer support"
      ],
      "title": "Partners: Contact New Relic",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "0ccf40e755893e6c718ec900144a46f9d4f31230",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partners-contact-new-relic/",
      "published_at": "2021-05-05T18:28:01Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Here are New Relic's resources for partners. If you are not a New Relic partner, follow standard procedures to find help or file a support ticket. Integration assistance For technical assistance or coordination to create your integration, contact your New Relic account representative. In addition, if you are interested in becoming a new partner, contact your New Relic account representative. Technical assistance (regular priority) Once your integration is live, follow standard procedures to find help or file a support ticket. Emergency technical assistance The New Relic partner support queue is continually monitored during business hours (Pacific time). New Relic strives to respond to partner support requests sent by email within an hour. For emergency assistance, email support @ newrelic.com, or contact your New Relic account representative. Customer support When your integration with New Relic is implemented and ready to launch, New Relic will arrange an introduction to your technical support contacts at New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 130.3108,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "sections": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Here are <em>New</em> <em>Relic</em>&#x27;s resources for partners. If you are not a <em>New</em> <em>Relic</em> <em>partner</em>, follow standard procedures to find help or file a support ticket. <em>Integration</em> assistance For technical assistance or coordination to create your <em>integration</em>, contact your <em>New</em> <em>Relic</em> account representative. In addition"
      },
      "id": "603ed39f64441fbe7f4e887d"
    },
    {
      "sections": [
        "Co-branding for New Relic partners",
        "Co-branding example",
        "Headers and footers",
        "Tip",
        "Layouts and styles",
        "Sub-domains"
      ],
      "title": "Co-branding for New Relic partners",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "62a555ec5ade26eda9c5f40b96ab25873c89da1a",
      "image": "https://docs.newrelic.com/static/9bc57293646e4fe206ffe0a20ce06406/3996e/screen-co-branding-heroku.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/co-branding-new-relic-partners/",
      "published_at": "2021-05-05T18:34:27Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Partners who bundle New Relic into their console can \"skin\" New Relic with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku's New Relic integration. In this case Heroku has chosen to use a header only. New Relic partner co-branding example: Here is an example of co-branding with New Relic by using a header. Headers and footers To implement headers and footers: Create a header and/or footer page, consisting of content enclosed in < div> tags. Make sure the pages do not import any CSS or contain any inline CSS. Take any CSS needed for the header and footer, and make it available in a separate CSS file. For example, prepend a custom string such as yourcompany_ to the various style names, to avoid overriding New Relic's standard style definitions. Post the three files to publicly accessible locations hosted by the partner. Use https so your customers do not see any mixed content warnings. For example: https://yourcompany.com/newrelic_header.htm https://yourcompany.com/newrelic_footer.htm https://yourcompany.com/newrelic_styles.css Copy Enter the URLs for the header, footer, and CSS page locations into the appropriate fields in the New Relic Partnership console. Tip To view the headers, log in to one of the accounts in the partnership. Layouts and styles Header and footer layouts and styles are loaded and cached on New Relic's collector servers for insertion into each page output. Updates made to the layout on the partner's site are automatically refreshed hourly. Customized links to the partner's website may be added to the layout. If single sign-on is enabled, the partner may inject customer-specific information into the New Relic user session for use by the layout. For more information, see Single sign on and access control. Sub-domains Partners can optionally display a custom subdomain; for example, yourcompany.newrelic.com, to customers accessing New Relic accounts. To arrange this, contact New Relic's Business Enablement team.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 130.3108,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "sections": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Partners who bundle <em>New</em> <em>Relic</em> into their console can &quot;skin&quot; <em>New</em> <em>Relic</em> with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku&#x27;s <em>New</em> <em>Relic</em> <em>integration</em>. In this case Heroku has chosen to use a header only. <em>New</em> <em>Relic</em> <em>partner</em>"
      },
      "id": "603ec8b428ccbc9be1eba7a8"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/getting-started/co-branding-new-relic-partners": [
    {
      "sections": [
        "Partnership admin console",
        "Console components",
        "Partnership configuration settings",
        "Customer activity monitoring",
        "State-of-the-Partnership report",
        "Partner customer monitoring",
        "View an arbitrary customer",
        "Viewing detailed customer data"
      ],
      "title": "Partnership admin console",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "670e4d2e1db957100b23a7b8b0af6bf50cc8c996",
      "image": "https://docs.newrelic.com/static/43369c88523ebf526ae58fa5719d4efe/0abdd/crop-partnership-owner-account-settings.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partnership-admin-console/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The Partnership Admin Console is the interface for managing your customers' accounts and integration with New Relic. To access the console, sign into the partnership owner account, and go to: https://partner-admin-console.newrelic.com/accounts/ACCOUNT_ID/admin_console/ Copy You can also access the console from the New Relic UI: Go to rpm.newrelic.com > (account dropdown) > Account settings. From the left menu bar, select Partnerships. rpm.newrelic.com > (account dropdown) > Account settings > Partnerships: Partnership owners can access the Partnership Admin Console from their account settings in the New Relic UI. Console components The Partnership Admin Console has two main components: Partnership configuration settings Customer activity monitoring If multiple partnerships are associated with the New Relic master account, the menu also includes an option to switch partnership accounts. Partnership configuration settings In developing your integration with New Relic, you must specify a number of settings. For your convenience these settings are grouped together in the partnership console, including URLs for header/footer and various redirects, SSO configuration, and keys and the ability to manipulate them. Customer activity monitoring New Relic provides you with two tools for managing your customers: State-of-the-Partnership reports and live monitoring of all deployed New Relic agents in your partnership. Both of these tools provide insight into your customers who are using New Relic. They can be used to identify up-sale opportunities or to assist your support group in proactive support. State-of-the-Partnership report The State-of-the-Partnership report provides a summary of your customers with New Relic accounts and their activities. The report is broken down by language of the agents deployed, the agent version and the language version for each account. This report is run weekly for each partner. It is available on request from your New Relic Business Development contact. This report is an excellent way to see which of your customers with New Relic accounts are in fact using the service. Partner customer monitoring The Partner customer monitoring facility provides application performance data on the New Relic enabled applications that are running on your service. This facility allows you to easily identify customers experiencing performance problems. Where the performance problems are caused by under capacity, these customers are excellent sales opportunities. Alternatively your support or services organization will find this information useful in pre-emptively identifying customer issues or as good prospects for consulting services. View an arbitrary customer To view activity of a customer that does not appear in any of the filtered views: Go to rpm.newrelic.com > (account dropdown) > Switch accounts > Other accounts. New Relic will list all of the reporting accounts in the partnership. You can filter or search the list. Viewing detailed customer data Under normal circumstances a partner will be able to see only the summary level data in a customer's New Relic account. Through the Partnership Admin Console, partners will be permitted to drill down to the more detailed presentation. If you want to drill down from the Partnership Admin Console, add your user (typically support@partner.com or something similar) to the account. Typically this will be done at account creation. Avoid provisioning this user as the account Owner.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89334,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> admin console",
        "sections": "<em>Partnership</em> admin console",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "The <em>Partnership</em> Admin Console is the interface for managing your customers&#x27; accounts and <em>integration</em> with <em>New</em> <em>Relic</em>. To access the console, sign into the <em>partnership</em> owner account, and go to: https:&#x2F;&#x2F;<em>partner</em>-admin-console.newrelic.com&#x2F;accounts&#x2F;ACCOUNT_ID&#x2F;admin_console&#x2F; Copy You can also access"
      },
      "id": "603ed3e3196a6735baa83dad"
    },
    {
      "sections": [
        "Partners: Contact New Relic",
        "Integration assistance",
        "Technical assistance (regular priority)",
        "Emergency technical assistance",
        "Customer support"
      ],
      "title": "Partners: Contact New Relic",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "0ccf40e755893e6c718ec900144a46f9d4f31230",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partners-contact-new-relic/",
      "published_at": "2021-05-05T18:28:01Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Here are New Relic's resources for partners. If you are not a New Relic partner, follow standard procedures to find help or file a support ticket. Integration assistance For technical assistance or coordination to create your integration, contact your New Relic account representative. In addition, if you are interested in becoming a new partner, contact your New Relic account representative. Technical assistance (regular priority) Once your integration is live, follow standard procedures to find help or file a support ticket. Emergency technical assistance The New Relic partner support queue is continually monitored during business hours (Pacific time). New Relic strives to respond to partner support requests sent by email within an hour. For emergency assistance, email support @ newrelic.com, or contact your New Relic account representative. Customer support When your integration with New Relic is implemented and ready to launch, New Relic will arrange an introduction to your technical support contacts at New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.893,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "sections": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Here are <em>New</em> <em>Relic</em>&#x27;s resources for partners. If you are not a <em>New</em> <em>Relic</em> <em>partner</em>, follow standard procedures to find help or file a support ticket. <em>Integration</em> assistance For technical assistance or coordination to create your <em>integration</em>, contact your <em>New</em> <em>Relic</em> account representative. In addition"
      },
      "id": "603ed39f64441fbe7f4e887d"
    },
    {
      "sections": [
        "Partner integration requirements",
        "Process",
        "Accelerated process",
        "Typical component tasks"
      ],
      "title": "Partner integration requirements",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "5df8f0dc281afba95823d8896a55ceec56cd4a8a",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partner-integration-requirements/",
      "published_at": "2021-05-05T18:33:37Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Thank you for your interest in partnering with New Relic. We look forward to providing your customers with powerful, easy-to-use application performance monitoring. This guide explains how to bundle New Relic services with yours. An effective bundling includes technical tasks (such as agent provisioning and console integration) as well as marketing and promotional activities (such as branding and awareness generation). Process To achieve a full and productive integration with New Relic you will need to: What How Integrate your user console with New Relic. Update your user portal to automatically create New Relic accounts and make them available to your customers in a convenient, compelling, co-branded way. Provision the New Relic agent. For your customers to benefit from New Relic, they will need our monitoring agent installed into their apps. Update your provisioning systems to install New Relic automatically. Generate awareness. Integrate and deploy New Relic facilities for displaying sample application reporting data to customers. Establish support and sustaining engineering processes. Agree on a process for support coordination and refresh of New Relic software. Set up communication. Tip: We've found that partners typically complete integration with one to two developer weeks of effort. For more information, see Typical component tasks. Accelerated process Where circumstances and/or proximity permit, we have found that bringing your developers on site to New Relic's San Francisco offices can dramatically accelerate development of your integration. At New Relic's offices your developers will work in close proximity to the engineering team that is responsible for the development and maintenance of New Relic's APIs. Development issues that would under other circumstances require hours or days to resolve can be addressed in minutes. Typically development time for an integration can be cut in half. Should you elect to pursue this option, please talk to your New Relic technical contact. Typical component tasks The checklist for creating a successful integration will vary with each partner and specific circumstances. As a general guide, here's a typical outline of the components and rough sequencing of tasks involved in creating an integration with New Relic. Done Component tasks of a typical partner integration Finalize business relationship. Have introductory conference call or meeting for technical team. Review partner integration documentation and other integration materials. Review roles and responsibilities. Develop integration plan with timeline. Plan account and agent provisioning. Create and deploy account provisioning system. Determine which agents and how to provision. Create and deploy webpages to support provisioning and deployment. Set up test partnership and accounts on New Relic's staging server. Plan for co-branding. Create and deploy CSS. Create and deploy header and footer. Create branded URL (cname). Drive adoption through creating awareness. Add the New Relic widget to the user console. Use data API integration. Test integration on staging. Set up partnership on New Relic's production server. Modify integration to point to production server. Test integration on production. Establish a support plan. Designate support contacts. Introduce New Relic Support to your technical support team. Create sustaining engineering plans. Get test account. Prepare for launch. Walk through integration review and signoff (conference call). Document final signup flow. Coordinate on launch co-marketing and PR. Go live!",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.893,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>integration</em> requirements",
        "sections": "<em>Partner</em> <em>integration</em> requirements",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " will vary with each <em>partner</em> and specific circumstances. As a general <em>guide</em>, here&#x27;s a typical outline of the components and rough sequencing of tasks involved in creating an <em>integration</em> with <em>New</em> <em>Relic</em>. Done Component tasks of a typical <em>partner</em> <em>integration</em> Finalize business relationship. Have"
      },
      "id": "603ed3e728ccbcba09eba7b7"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/getting-started/partner-integration-requirements": [
    {
      "sections": [
        "Partnership admin console",
        "Console components",
        "Partnership configuration settings",
        "Customer activity monitoring",
        "State-of-the-Partnership report",
        "Partner customer monitoring",
        "View an arbitrary customer",
        "Viewing detailed customer data"
      ],
      "title": "Partnership admin console",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "670e4d2e1db957100b23a7b8b0af6bf50cc8c996",
      "image": "https://docs.newrelic.com/static/43369c88523ebf526ae58fa5719d4efe/0abdd/crop-partnership-owner-account-settings.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partnership-admin-console/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The Partnership Admin Console is the interface for managing your customers' accounts and integration with New Relic. To access the console, sign into the partnership owner account, and go to: https://partner-admin-console.newrelic.com/accounts/ACCOUNT_ID/admin_console/ Copy You can also access the console from the New Relic UI: Go to rpm.newrelic.com > (account dropdown) > Account settings. From the left menu bar, select Partnerships. rpm.newrelic.com > (account dropdown) > Account settings > Partnerships: Partnership owners can access the Partnership Admin Console from their account settings in the New Relic UI. Console components The Partnership Admin Console has two main components: Partnership configuration settings Customer activity monitoring If multiple partnerships are associated with the New Relic master account, the menu also includes an option to switch partnership accounts. Partnership configuration settings In developing your integration with New Relic, you must specify a number of settings. For your convenience these settings are grouped together in the partnership console, including URLs for header/footer and various redirects, SSO configuration, and keys and the ability to manipulate them. Customer activity monitoring New Relic provides you with two tools for managing your customers: State-of-the-Partnership reports and live monitoring of all deployed New Relic agents in your partnership. Both of these tools provide insight into your customers who are using New Relic. They can be used to identify up-sale opportunities or to assist your support group in proactive support. State-of-the-Partnership report The State-of-the-Partnership report provides a summary of your customers with New Relic accounts and their activities. The report is broken down by language of the agents deployed, the agent version and the language version for each account. This report is run weekly for each partner. It is available on request from your New Relic Business Development contact. This report is an excellent way to see which of your customers with New Relic accounts are in fact using the service. Partner customer monitoring The Partner customer monitoring facility provides application performance data on the New Relic enabled applications that are running on your service. This facility allows you to easily identify customers experiencing performance problems. Where the performance problems are caused by under capacity, these customers are excellent sales opportunities. Alternatively your support or services organization will find this information useful in pre-emptively identifying customer issues or as good prospects for consulting services. View an arbitrary customer To view activity of a customer that does not appear in any of the filtered views: Go to rpm.newrelic.com > (account dropdown) > Switch accounts > Other accounts. New Relic will list all of the reporting accounts in the partnership. You can filter or search the list. Viewing detailed customer data Under normal circumstances a partner will be able to see only the summary level data in a customer's New Relic account. Through the Partnership Admin Console, partners will be permitted to drill down to the more detailed presentation. If you want to drill down from the Partnership Admin Console, add your user (typically support@partner.com or something similar) to the account. Typically this will be done at account creation. Avoid provisioning this user as the account Owner.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89334,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> admin console",
        "sections": "<em>Partnership</em> admin console",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "The <em>Partnership</em> Admin Console is the interface for managing your customers&#x27; accounts and <em>integration</em> with <em>New</em> <em>Relic</em>. To access the console, sign into the <em>partnership</em> owner account, and go to: https:&#x2F;&#x2F;<em>partner</em>-admin-console.newrelic.com&#x2F;accounts&#x2F;ACCOUNT_ID&#x2F;admin_console&#x2F; Copy You can also access"
      },
      "id": "603ed3e3196a6735baa83dad"
    },
    {
      "sections": [
        "Partners: Contact New Relic",
        "Integration assistance",
        "Technical assistance (regular priority)",
        "Emergency technical assistance",
        "Customer support"
      ],
      "title": "Partners: Contact New Relic",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "0ccf40e755893e6c718ec900144a46f9d4f31230",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partners-contact-new-relic/",
      "published_at": "2021-05-05T18:28:01Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Here are New Relic's resources for partners. If you are not a New Relic partner, follow standard procedures to find help or file a support ticket. Integration assistance For technical assistance or coordination to create your integration, contact your New Relic account representative. In addition, if you are interested in becoming a new partner, contact your New Relic account representative. Technical assistance (regular priority) Once your integration is live, follow standard procedures to find help or file a support ticket. Emergency technical assistance The New Relic partner support queue is continually monitored during business hours (Pacific time). New Relic strives to respond to partner support requests sent by email within an hour. For emergency assistance, email support @ newrelic.com, or contact your New Relic account representative. Customer support When your integration with New Relic is implemented and ready to launch, New Relic will arrange an introduction to your technical support contacts at New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "sections": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Here are <em>New</em> <em>Relic</em>&#x27;s resources for partners. If you are not a <em>New</em> <em>Relic</em> <em>partner</em>, follow standard procedures to find help or file a support ticket. <em>Integration</em> assistance For technical assistance or coordination to create your <em>integration</em>, contact your <em>New</em> <em>Relic</em> account representative. In addition"
      },
      "id": "603ed39f64441fbe7f4e887d"
    },
    {
      "sections": [
        "Co-branding for New Relic partners",
        "Co-branding example",
        "Headers and footers",
        "Tip",
        "Layouts and styles",
        "Sub-domains"
      ],
      "title": "Co-branding for New Relic partners",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "62a555ec5ade26eda9c5f40b96ab25873c89da1a",
      "image": "https://docs.newrelic.com/static/9bc57293646e4fe206ffe0a20ce06406/3996e/screen-co-branding-heroku.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/co-branding-new-relic-partners/",
      "published_at": "2021-05-05T18:34:27Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Partners who bundle New Relic into their console can \"skin\" New Relic with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku's New Relic integration. In this case Heroku has chosen to use a header only. New Relic partner co-branding example: Here is an example of co-branding with New Relic by using a header. Headers and footers To implement headers and footers: Create a header and/or footer page, consisting of content enclosed in < div> tags. Make sure the pages do not import any CSS or contain any inline CSS. Take any CSS needed for the header and footer, and make it available in a separate CSS file. For example, prepend a custom string such as yourcompany_ to the various style names, to avoid overriding New Relic's standard style definitions. Post the three files to publicly accessible locations hosted by the partner. Use https so your customers do not see any mixed content warnings. For example: https://yourcompany.com/newrelic_header.htm https://yourcompany.com/newrelic_footer.htm https://yourcompany.com/newrelic_styles.css Copy Enter the URLs for the header, footer, and CSS page locations into the appropriate fields in the New Relic Partnership console. Tip To view the headers, log in to one of the accounts in the partnership. Layouts and styles Header and footer layouts and styles are loaded and cached on New Relic's collector servers for insertion into each page output. Updates made to the layout on the partner's site are automatically refreshed hourly. Customized links to the partner's website may be added to the layout. If single sign-on is enabled, the partner may inject customer-specific information into the New Relic user session for use by the layout. For more information, see Single sign on and access control. Sub-domains Partners can optionally display a custom subdomain; for example, yourcompany.newrelic.com, to customers accessing New Relic accounts. To arrange this, contact New Relic's Business Enablement team.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "sections": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Partners who bundle <em>New</em> <em>Relic</em> into their console can &quot;skin&quot; <em>New</em> <em>Relic</em> with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku&#x27;s <em>New</em> <em>Relic</em> <em>integration</em>. In this case Heroku has chosen to use a header only. <em>New</em> <em>Relic</em> <em>partner</em>"
      },
      "id": "603ec8b428ccbc9be1eba7a8"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/getting-started/partners-contact-new-relic": [
    {
      "sections": [
        "Partnership admin console",
        "Console components",
        "Partnership configuration settings",
        "Customer activity monitoring",
        "State-of-the-Partnership report",
        "Partner customer monitoring",
        "View an arbitrary customer",
        "Viewing detailed customer data"
      ],
      "title": "Partnership admin console",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "670e4d2e1db957100b23a7b8b0af6bf50cc8c996",
      "image": "https://docs.newrelic.com/static/43369c88523ebf526ae58fa5719d4efe/0abdd/crop-partnership-owner-account-settings.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partnership-admin-console/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The Partnership Admin Console is the interface for managing your customers' accounts and integration with New Relic. To access the console, sign into the partnership owner account, and go to: https://partner-admin-console.newrelic.com/accounts/ACCOUNT_ID/admin_console/ Copy You can also access the console from the New Relic UI: Go to rpm.newrelic.com > (account dropdown) > Account settings. From the left menu bar, select Partnerships. rpm.newrelic.com > (account dropdown) > Account settings > Partnerships: Partnership owners can access the Partnership Admin Console from their account settings in the New Relic UI. Console components The Partnership Admin Console has two main components: Partnership configuration settings Customer activity monitoring If multiple partnerships are associated with the New Relic master account, the menu also includes an option to switch partnership accounts. Partnership configuration settings In developing your integration with New Relic, you must specify a number of settings. For your convenience these settings are grouped together in the partnership console, including URLs for header/footer and various redirects, SSO configuration, and keys and the ability to manipulate them. Customer activity monitoring New Relic provides you with two tools for managing your customers: State-of-the-Partnership reports and live monitoring of all deployed New Relic agents in your partnership. Both of these tools provide insight into your customers who are using New Relic. They can be used to identify up-sale opportunities or to assist your support group in proactive support. State-of-the-Partnership report The State-of-the-Partnership report provides a summary of your customers with New Relic accounts and their activities. The report is broken down by language of the agents deployed, the agent version and the language version for each account. This report is run weekly for each partner. It is available on request from your New Relic Business Development contact. This report is an excellent way to see which of your customers with New Relic accounts are in fact using the service. Partner customer monitoring The Partner customer monitoring facility provides application performance data on the New Relic enabled applications that are running on your service. This facility allows you to easily identify customers experiencing performance problems. Where the performance problems are caused by under capacity, these customers are excellent sales opportunities. Alternatively your support or services organization will find this information useful in pre-emptively identifying customer issues or as good prospects for consulting services. View an arbitrary customer To view activity of a customer that does not appear in any of the filtered views: Go to rpm.newrelic.com > (account dropdown) > Switch accounts > Other accounts. New Relic will list all of the reporting accounts in the partnership. You can filter or search the list. Viewing detailed customer data Under normal circumstances a partner will be able to see only the summary level data in a customer's New Relic account. Through the Partnership Admin Console, partners will be permitted to drill down to the more detailed presentation. If you want to drill down from the Partnership Admin Console, add your user (typically support@partner.com or something similar) to the account. Typically this will be done at account creation. Avoid provisioning this user as the account Owner.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89334,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> admin console",
        "sections": "<em>Partnership</em> admin console",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "The <em>Partnership</em> Admin Console is the interface for managing your customers&#x27; accounts and <em>integration</em> with <em>New</em> <em>Relic</em>. To access the console, sign into the <em>partnership</em> owner account, and go to: https:&#x2F;&#x2F;<em>partner</em>-admin-console.newrelic.com&#x2F;accounts&#x2F;ACCOUNT_ID&#x2F;admin_console&#x2F; Copy You can also access"
      },
      "id": "603ed3e3196a6735baa83dad"
    },
    {
      "sections": [
        "Co-branding for New Relic partners",
        "Co-branding example",
        "Headers and footers",
        "Tip",
        "Layouts and styles",
        "Sub-domains"
      ],
      "title": "Co-branding for New Relic partners",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "62a555ec5ade26eda9c5f40b96ab25873c89da1a",
      "image": "https://docs.newrelic.com/static/9bc57293646e4fe206ffe0a20ce06406/3996e/screen-co-branding-heroku.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/co-branding-new-relic-partners/",
      "published_at": "2021-05-05T18:34:27Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Partners who bundle New Relic into their console can \"skin\" New Relic with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku's New Relic integration. In this case Heroku has chosen to use a header only. New Relic partner co-branding example: Here is an example of co-branding with New Relic by using a header. Headers and footers To implement headers and footers: Create a header and/or footer page, consisting of content enclosed in < div> tags. Make sure the pages do not import any CSS or contain any inline CSS. Take any CSS needed for the header and footer, and make it available in a separate CSS file. For example, prepend a custom string such as yourcompany_ to the various style names, to avoid overriding New Relic's standard style definitions. Post the three files to publicly accessible locations hosted by the partner. Use https so your customers do not see any mixed content warnings. For example: https://yourcompany.com/newrelic_header.htm https://yourcompany.com/newrelic_footer.htm https://yourcompany.com/newrelic_styles.css Copy Enter the URLs for the header, footer, and CSS page locations into the appropriate fields in the New Relic Partnership console. Tip To view the headers, log in to one of the accounts in the partnership. Layouts and styles Header and footer layouts and styles are loaded and cached on New Relic's collector servers for insertion into each page output. Updates made to the layout on the partner's site are automatically refreshed hourly. Customized links to the partner's website may be added to the layout. If single sign-on is enabled, the partner may inject customer-specific information into the New Relic user session for use by the layout. For more information, see Single sign on and access control. Sub-domains Partners can optionally display a custom subdomain; for example, yourcompany.newrelic.com, to customers accessing New Relic accounts. To arrange this, contact New Relic's Business Enablement team.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "sections": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Partners who bundle <em>New</em> <em>Relic</em> into their console can &quot;skin&quot; <em>New</em> <em>Relic</em> with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku&#x27;s <em>New</em> <em>Relic</em> <em>integration</em>. In this case Heroku has chosen to use a header only. <em>New</em> <em>Relic</em> <em>partner</em>"
      },
      "id": "603ec8b428ccbc9be1eba7a8"
    },
    {
      "sections": [
        "Partner integration requirements",
        "Process",
        "Accelerated process",
        "Typical component tasks"
      ],
      "title": "Partner integration requirements",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "5df8f0dc281afba95823d8896a55ceec56cd4a8a",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partner-integration-requirements/",
      "published_at": "2021-05-05T18:33:37Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Thank you for your interest in partnering with New Relic. We look forward to providing your customers with powerful, easy-to-use application performance monitoring. This guide explains how to bundle New Relic services with yours. An effective bundling includes technical tasks (such as agent provisioning and console integration) as well as marketing and promotional activities (such as branding and awareness generation). Process To achieve a full and productive integration with New Relic you will need to: What How Integrate your user console with New Relic. Update your user portal to automatically create New Relic accounts and make them available to your customers in a convenient, compelling, co-branded way. Provision the New Relic agent. For your customers to benefit from New Relic, they will need our monitoring agent installed into their apps. Update your provisioning systems to install New Relic automatically. Generate awareness. Integrate and deploy New Relic facilities for displaying sample application reporting data to customers. Establish support and sustaining engineering processes. Agree on a process for support coordination and refresh of New Relic software. Set up communication. Tip: We've found that partners typically complete integration with one to two developer weeks of effort. For more information, see Typical component tasks. Accelerated process Where circumstances and/or proximity permit, we have found that bringing your developers on site to New Relic's San Francisco offices can dramatically accelerate development of your integration. At New Relic's offices your developers will work in close proximity to the engineering team that is responsible for the development and maintenance of New Relic's APIs. Development issues that would under other circumstances require hours or days to resolve can be addressed in minutes. Typically development time for an integration can be cut in half. Should you elect to pursue this option, please talk to your New Relic technical contact. Typical component tasks The checklist for creating a successful integration will vary with each partner and specific circumstances. As a general guide, here's a typical outline of the components and rough sequencing of tasks involved in creating an integration with New Relic. Done Component tasks of a typical partner integration Finalize business relationship. Have introductory conference call or meeting for technical team. Review partner integration documentation and other integration materials. Review roles and responsibilities. Develop integration plan with timeline. Plan account and agent provisioning. Create and deploy account provisioning system. Determine which agents and how to provision. Create and deploy webpages to support provisioning and deployment. Set up test partnership and accounts on New Relic's staging server. Plan for co-branding. Create and deploy CSS. Create and deploy header and footer. Create branded URL (cname). Drive adoption through creating awareness. Add the New Relic widget to the user console. Use data API integration. Test integration on staging. Set up partnership on New Relic's production server. Modify integration to point to production server. Test integration on production. Establish a support plan. Designate support contacts. Introduce New Relic Support to your technical support team. Create sustaining engineering plans. Get test account. Prepare for launch. Walk through integration review and signoff (conference call). Document final signup flow. Coordinate on launch co-marketing and PR. Go live!",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>integration</em> requirements",
        "sections": "<em>Partner</em> <em>integration</em> requirements",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " will vary with each <em>partner</em> and specific circumstances. As a general <em>guide</em>, here&#x27;s a typical outline of the components and rough sequencing of tasks involved in creating an <em>integration</em> with <em>New</em> <em>Relic</em>. Done Component tasks of a typical <em>partner</em> <em>integration</em> Finalize business relationship. Have"
      },
      "id": "603ed3e728ccbcba09eba7b7"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/getting-started/partnership-admin-console": [
    {
      "sections": [
        "Partners: Contact New Relic",
        "Integration assistance",
        "Technical assistance (regular priority)",
        "Emergency technical assistance",
        "Customer support"
      ],
      "title": "Partners: Contact New Relic",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "0ccf40e755893e6c718ec900144a46f9d4f31230",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partners-contact-new-relic/",
      "published_at": "2021-05-05T18:28:01Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Here are New Relic's resources for partners. If you are not a New Relic partner, follow standard procedures to find help or file a support ticket. Integration assistance For technical assistance or coordination to create your integration, contact your New Relic account representative. In addition, if you are interested in becoming a new partner, contact your New Relic account representative. Technical assistance (regular priority) Once your integration is live, follow standard procedures to find help or file a support ticket. Emergency technical assistance The New Relic partner support queue is continually monitored during business hours (Pacific time). New Relic strives to respond to partner support requests sent by email within an hour. For emergency assistance, email support @ newrelic.com, or contact your New Relic account representative. Customer support When your integration with New Relic is implemented and ready to launch, New Relic will arrange an introduction to your technical support contacts at New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "sections": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Here are <em>New</em> <em>Relic</em>&#x27;s resources for partners. If you are not a <em>New</em> <em>Relic</em> <em>partner</em>, follow standard procedures to find help or file a support ticket. <em>Integration</em> assistance For technical assistance or coordination to create your <em>integration</em>, contact your <em>New</em> <em>Relic</em> account representative. In addition"
      },
      "id": "603ed39f64441fbe7f4e887d"
    },
    {
      "sections": [
        "Co-branding for New Relic partners",
        "Co-branding example",
        "Headers and footers",
        "Tip",
        "Layouts and styles",
        "Sub-domains"
      ],
      "title": "Co-branding for New Relic partners",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "62a555ec5ade26eda9c5f40b96ab25873c89da1a",
      "image": "https://docs.newrelic.com/static/9bc57293646e4fe206ffe0a20ce06406/3996e/screen-co-branding-heroku.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/co-branding-new-relic-partners/",
      "published_at": "2021-05-05T18:34:27Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Partners who bundle New Relic into their console can \"skin\" New Relic with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku's New Relic integration. In this case Heroku has chosen to use a header only. New Relic partner co-branding example: Here is an example of co-branding with New Relic by using a header. Headers and footers To implement headers and footers: Create a header and/or footer page, consisting of content enclosed in < div> tags. Make sure the pages do not import any CSS or contain any inline CSS. Take any CSS needed for the header and footer, and make it available in a separate CSS file. For example, prepend a custom string such as yourcompany_ to the various style names, to avoid overriding New Relic's standard style definitions. Post the three files to publicly accessible locations hosted by the partner. Use https so your customers do not see any mixed content warnings. For example: https://yourcompany.com/newrelic_header.htm https://yourcompany.com/newrelic_footer.htm https://yourcompany.com/newrelic_styles.css Copy Enter the URLs for the header, footer, and CSS page locations into the appropriate fields in the New Relic Partnership console. Tip To view the headers, log in to one of the accounts in the partnership. Layouts and styles Header and footer layouts and styles are loaded and cached on New Relic's collector servers for insertion into each page output. Updates made to the layout on the partner's site are automatically refreshed hourly. Customized links to the partner's website may be added to the layout. If single sign-on is enabled, the partner may inject customer-specific information into the New Relic user session for use by the layout. For more information, see Single sign on and access control. Sub-domains Partners can optionally display a custom subdomain; for example, yourcompany.newrelic.com, to customers accessing New Relic accounts. To arrange this, contact New Relic's Business Enablement team.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "sections": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Partners who bundle <em>New</em> <em>Relic</em> into their console can &quot;skin&quot; <em>New</em> <em>Relic</em> with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku&#x27;s <em>New</em> <em>Relic</em> <em>integration</em>. In this case Heroku has chosen to use a header only. <em>New</em> <em>Relic</em> <em>partner</em>"
      },
      "id": "603ec8b428ccbc9be1eba7a8"
    },
    {
      "sections": [
        "Partner integration requirements",
        "Process",
        "Accelerated process",
        "Typical component tasks"
      ],
      "title": "Partner integration requirements",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "5df8f0dc281afba95823d8896a55ceec56cd4a8a",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partner-integration-requirements/",
      "published_at": "2021-05-05T18:33:37Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Thank you for your interest in partnering with New Relic. We look forward to providing your customers with powerful, easy-to-use application performance monitoring. This guide explains how to bundle New Relic services with yours. An effective bundling includes technical tasks (such as agent provisioning and console integration) as well as marketing and promotional activities (such as branding and awareness generation). Process To achieve a full and productive integration with New Relic you will need to: What How Integrate your user console with New Relic. Update your user portal to automatically create New Relic accounts and make them available to your customers in a convenient, compelling, co-branded way. Provision the New Relic agent. For your customers to benefit from New Relic, they will need our monitoring agent installed into their apps. Update your provisioning systems to install New Relic automatically. Generate awareness. Integrate and deploy New Relic facilities for displaying sample application reporting data to customers. Establish support and sustaining engineering processes. Agree on a process for support coordination and refresh of New Relic software. Set up communication. Tip: We've found that partners typically complete integration with one to two developer weeks of effort. For more information, see Typical component tasks. Accelerated process Where circumstances and/or proximity permit, we have found that bringing your developers on site to New Relic's San Francisco offices can dramatically accelerate development of your integration. At New Relic's offices your developers will work in close proximity to the engineering team that is responsible for the development and maintenance of New Relic's APIs. Development issues that would under other circumstances require hours or days to resolve can be addressed in minutes. Typically development time for an integration can be cut in half. Should you elect to pursue this option, please talk to your New Relic technical contact. Typical component tasks The checklist for creating a successful integration will vary with each partner and specific circumstances. As a general guide, here's a typical outline of the components and rough sequencing of tasks involved in creating an integration with New Relic. Done Component tasks of a typical partner integration Finalize business relationship. Have introductory conference call or meeting for technical team. Review partner integration documentation and other integration materials. Review roles and responsibilities. Develop integration plan with timeline. Plan account and agent provisioning. Create and deploy account provisioning system. Determine which agents and how to provision. Create and deploy webpages to support provisioning and deployment. Set up test partnership and accounts on New Relic's staging server. Plan for co-branding. Create and deploy CSS. Create and deploy header and footer. Create branded URL (cname). Drive adoption through creating awareness. Add the New Relic widget to the user console. Use data API integration. Test integration on staging. Set up partnership on New Relic's production server. Modify integration to point to production server. Test integration on production. Establish a support plan. Designate support contacts. Introduce New Relic Support to your technical support team. Create sustaining engineering plans. Get test account. Prepare for launch. Walk through integration review and signoff (conference call). Document final signup flow. Coordinate on launch co-marketing and PR. Go live!",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>integration</em> requirements",
        "sections": "<em>Partner</em> <em>integration</em> requirements",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " will vary with each <em>partner</em> and specific circumstances. As a general <em>guide</em>, here&#x27;s a typical outline of the components and rough sequencing of tasks involved in creating an <em>integration</em> with <em>New</em> <em>Relic</em>. Done Component tasks of a typical <em>partner</em> <em>integration</em> Finalize business relationship. Have"
      },
      "id": "603ed3e728ccbcba09eba7b7"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/getting-started/support-resources-new-relic-partners": [
    {
      "sections": [
        "Partnership admin console",
        "Console components",
        "Partnership configuration settings",
        "Customer activity monitoring",
        "State-of-the-Partnership report",
        "Partner customer monitoring",
        "View an arbitrary customer",
        "Viewing detailed customer data"
      ],
      "title": "Partnership admin console",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "670e4d2e1db957100b23a7b8b0af6bf50cc8c996",
      "image": "https://docs.newrelic.com/static/43369c88523ebf526ae58fa5719d4efe/0abdd/crop-partnership-owner-account-settings.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partnership-admin-console/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The Partnership Admin Console is the interface for managing your customers' accounts and integration with New Relic. To access the console, sign into the partnership owner account, and go to: https://partner-admin-console.newrelic.com/accounts/ACCOUNT_ID/admin_console/ Copy You can also access the console from the New Relic UI: Go to rpm.newrelic.com > (account dropdown) > Account settings. From the left menu bar, select Partnerships. rpm.newrelic.com > (account dropdown) > Account settings > Partnerships: Partnership owners can access the Partnership Admin Console from their account settings in the New Relic UI. Console components The Partnership Admin Console has two main components: Partnership configuration settings Customer activity monitoring If multiple partnerships are associated with the New Relic master account, the menu also includes an option to switch partnership accounts. Partnership configuration settings In developing your integration with New Relic, you must specify a number of settings. For your convenience these settings are grouped together in the partnership console, including URLs for header/footer and various redirects, SSO configuration, and keys and the ability to manipulate them. Customer activity monitoring New Relic provides you with two tools for managing your customers: State-of-the-Partnership reports and live monitoring of all deployed New Relic agents in your partnership. Both of these tools provide insight into your customers who are using New Relic. They can be used to identify up-sale opportunities or to assist your support group in proactive support. State-of-the-Partnership report The State-of-the-Partnership report provides a summary of your customers with New Relic accounts and their activities. The report is broken down by language of the agents deployed, the agent version and the language version for each account. This report is run weekly for each partner. It is available on request from your New Relic Business Development contact. This report is an excellent way to see which of your customers with New Relic accounts are in fact using the service. Partner customer monitoring The Partner customer monitoring facility provides application performance data on the New Relic enabled applications that are running on your service. This facility allows you to easily identify customers experiencing performance problems. Where the performance problems are caused by under capacity, these customers are excellent sales opportunities. Alternatively your support or services organization will find this information useful in pre-emptively identifying customer issues or as good prospects for consulting services. View an arbitrary customer To view activity of a customer that does not appear in any of the filtered views: Go to rpm.newrelic.com > (account dropdown) > Switch accounts > Other accounts. New Relic will list all of the reporting accounts in the partnership. You can filter or search the list. Viewing detailed customer data Under normal circumstances a partner will be able to see only the summary level data in a customer's New Relic account. Through the Partnership Admin Console, partners will be permitted to drill down to the more detailed presentation. If you want to drill down from the Partnership Admin Console, add your user (typically support@partner.com or something similar) to the account. Typically this will be done at account creation. Avoid provisioning this user as the account Owner.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89334,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> admin console",
        "sections": "<em>Partnership</em> admin console",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "The <em>Partnership</em> Admin Console is the interface for managing your customers&#x27; accounts and <em>integration</em> with <em>New</em> <em>Relic</em>. To access the console, sign into the <em>partnership</em> owner account, and go to: https:&#x2F;&#x2F;<em>partner</em>-admin-console.newrelic.com&#x2F;accounts&#x2F;ACCOUNT_ID&#x2F;admin_console&#x2F; Copy You can also access"
      },
      "id": "603ed3e3196a6735baa83dad"
    },
    {
      "sections": [
        "Partners: Contact New Relic",
        "Integration assistance",
        "Technical assistance (regular priority)",
        "Emergency technical assistance",
        "Customer support"
      ],
      "title": "Partners: Contact New Relic",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "0ccf40e755893e6c718ec900144a46f9d4f31230",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partners-contact-new-relic/",
      "published_at": "2021-05-05T18:28:01Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Here are New Relic's resources for partners. If you are not a New Relic partner, follow standard procedures to find help or file a support ticket. Integration assistance For technical assistance or coordination to create your integration, contact your New Relic account representative. In addition, if you are interested in becoming a new partner, contact your New Relic account representative. Technical assistance (regular priority) Once your integration is live, follow standard procedures to find help or file a support ticket. Emergency technical assistance The New Relic partner support queue is continually monitored during business hours (Pacific time). New Relic strives to respond to partner support requests sent by email within an hour. For emergency assistance, email support @ newrelic.com, or contact your New Relic account representative. Customer support When your integration with New Relic is implemented and ready to launch, New Relic will arrange an introduction to your technical support contacts at New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "sections": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Here are <em>New</em> <em>Relic</em>&#x27;s resources for partners. If you are not a <em>New</em> <em>Relic</em> <em>partner</em>, follow standard procedures to find help or file a support ticket. <em>Integration</em> assistance For technical assistance or coordination to create your <em>integration</em>, contact your <em>New</em> <em>Relic</em> account representative. In addition"
      },
      "id": "603ed39f64441fbe7f4e887d"
    },
    {
      "sections": [
        "Co-branding for New Relic partners",
        "Co-branding example",
        "Headers and footers",
        "Tip",
        "Layouts and styles",
        "Sub-domains"
      ],
      "title": "Co-branding for New Relic partners",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "62a555ec5ade26eda9c5f40b96ab25873c89da1a",
      "image": "https://docs.newrelic.com/static/9bc57293646e4fe206ffe0a20ce06406/3996e/screen-co-branding-heroku.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/co-branding-new-relic-partners/",
      "published_at": "2021-05-05T18:34:27Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Partners who bundle New Relic into their console can \"skin\" New Relic with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku's New Relic integration. In this case Heroku has chosen to use a header only. New Relic partner co-branding example: Here is an example of co-branding with New Relic by using a header. Headers and footers To implement headers and footers: Create a header and/or footer page, consisting of content enclosed in < div> tags. Make sure the pages do not import any CSS or contain any inline CSS. Take any CSS needed for the header and footer, and make it available in a separate CSS file. For example, prepend a custom string such as yourcompany_ to the various style names, to avoid overriding New Relic's standard style definitions. Post the three files to publicly accessible locations hosted by the partner. Use https so your customers do not see any mixed content warnings. For example: https://yourcompany.com/newrelic_header.htm https://yourcompany.com/newrelic_footer.htm https://yourcompany.com/newrelic_styles.css Copy Enter the URLs for the header, footer, and CSS page locations into the appropriate fields in the New Relic Partnership console. Tip To view the headers, log in to one of the accounts in the partnership. Layouts and styles Header and footer layouts and styles are loaded and cached on New Relic's collector servers for insertion into each page output. Updates made to the layout on the partner's site are automatically refreshed hourly. Customized links to the partner's website may be added to the layout. If single sign-on is enabled, the partner may inject customer-specific information into the New Relic user session for use by the layout. For more information, see Single sign on and access control. Sub-domains Partners can optionally display a custom subdomain; for example, yourcompany.newrelic.com, to customers accessing New Relic accounts. To arrange this, contact New Relic's Business Enablement team.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "sections": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Partners who bundle <em>New</em> <em>Relic</em> into their console can &quot;skin&quot; <em>New</em> <em>Relic</em> with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku&#x27;s <em>New</em> <em>Relic</em> <em>integration</em>. In this case Heroku has chosen to use a header only. <em>New</em> <em>Relic</em> <em>partner</em>"
      },
      "id": "603ec8b428ccbc9be1eba7a8"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/getting-started/walkthrough-signoff": [
    {
      "sections": [
        "Partnership admin console",
        "Console components",
        "Partnership configuration settings",
        "Customer activity monitoring",
        "State-of-the-Partnership report",
        "Partner customer monitoring",
        "View an arbitrary customer",
        "Viewing detailed customer data"
      ],
      "title": "Partnership admin console",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "670e4d2e1db957100b23a7b8b0af6bf50cc8c996",
      "image": "https://docs.newrelic.com/static/43369c88523ebf526ae58fa5719d4efe/0abdd/crop-partnership-owner-account-settings.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partnership-admin-console/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The Partnership Admin Console is the interface for managing your customers' accounts and integration with New Relic. To access the console, sign into the partnership owner account, and go to: https://partner-admin-console.newrelic.com/accounts/ACCOUNT_ID/admin_console/ Copy You can also access the console from the New Relic UI: Go to rpm.newrelic.com > (account dropdown) > Account settings. From the left menu bar, select Partnerships. rpm.newrelic.com > (account dropdown) > Account settings > Partnerships: Partnership owners can access the Partnership Admin Console from their account settings in the New Relic UI. Console components The Partnership Admin Console has two main components: Partnership configuration settings Customer activity monitoring If multiple partnerships are associated with the New Relic master account, the menu also includes an option to switch partnership accounts. Partnership configuration settings In developing your integration with New Relic, you must specify a number of settings. For your convenience these settings are grouped together in the partnership console, including URLs for header/footer and various redirects, SSO configuration, and keys and the ability to manipulate them. Customer activity monitoring New Relic provides you with two tools for managing your customers: State-of-the-Partnership reports and live monitoring of all deployed New Relic agents in your partnership. Both of these tools provide insight into your customers who are using New Relic. They can be used to identify up-sale opportunities or to assist your support group in proactive support. State-of-the-Partnership report The State-of-the-Partnership report provides a summary of your customers with New Relic accounts and their activities. The report is broken down by language of the agents deployed, the agent version and the language version for each account. This report is run weekly for each partner. It is available on request from your New Relic Business Development contact. This report is an excellent way to see which of your customers with New Relic accounts are in fact using the service. Partner customer monitoring The Partner customer monitoring facility provides application performance data on the New Relic enabled applications that are running on your service. This facility allows you to easily identify customers experiencing performance problems. Where the performance problems are caused by under capacity, these customers are excellent sales opportunities. Alternatively your support or services organization will find this information useful in pre-emptively identifying customer issues or as good prospects for consulting services. View an arbitrary customer To view activity of a customer that does not appear in any of the filtered views: Go to rpm.newrelic.com > (account dropdown) > Switch accounts > Other accounts. New Relic will list all of the reporting accounts in the partnership. You can filter or search the list. Viewing detailed customer data Under normal circumstances a partner will be able to see only the summary level data in a customer's New Relic account. Through the Partnership Admin Console, partners will be permitted to drill down to the more detailed presentation. If you want to drill down from the Partnership Admin Console, add your user (typically support@partner.com or something similar) to the account. Typically this will be done at account creation. Avoid provisioning this user as the account Owner.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89334,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> admin console",
        "sections": "<em>Partnership</em> admin console",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "The <em>Partnership</em> Admin Console is the interface for managing your customers&#x27; accounts and <em>integration</em> with <em>New</em> <em>Relic</em>. To access the console, sign into the <em>partnership</em> owner account, and go to: https:&#x2F;&#x2F;<em>partner</em>-admin-console.newrelic.com&#x2F;accounts&#x2F;ACCOUNT_ID&#x2F;admin_console&#x2F; Copy You can also access"
      },
      "id": "603ed3e3196a6735baa83dad"
    },
    {
      "sections": [
        "Partners: Contact New Relic",
        "Integration assistance",
        "Technical assistance (regular priority)",
        "Emergency technical assistance",
        "Customer support"
      ],
      "title": "Partners: Contact New Relic",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "0ccf40e755893e6c718ec900144a46f9d4f31230",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/partners-contact-new-relic/",
      "published_at": "2021-05-05T18:28:01Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Here are New Relic's resources for partners. If you are not a New Relic partner, follow standard procedures to find help or file a support ticket. Integration assistance For technical assistance or coordination to create your integration, contact your New Relic account representative. In addition, if you are interested in becoming a new partner, contact your New Relic account representative. Technical assistance (regular priority) Once your integration is live, follow standard procedures to find help or file a support ticket. Emergency technical assistance The New Relic partner support queue is continually monitored during business hours (Pacific time). New Relic strives to respond to partner support requests sent by email within an hour. For emergency assistance, email support @ newrelic.com, or contact your New Relic account representative. Customer support When your integration with New Relic is implemented and ready to launch, New Relic will arrange an introduction to your technical support contacts at New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "sections": "<em>Partners</em>: Contact <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Here are <em>New</em> <em>Relic</em>&#x27;s resources for partners. If you are not a <em>New</em> <em>Relic</em> <em>partner</em>, follow standard procedures to find help or file a support ticket. <em>Integration</em> assistance For technical assistance or coordination to create your <em>integration</em>, contact your <em>New</em> <em>Relic</em> account representative. In addition"
      },
      "id": "603ed39f64441fbe7f4e887d"
    },
    {
      "sections": [
        "Co-branding for New Relic partners",
        "Co-branding example",
        "Headers and footers",
        "Tip",
        "Layouts and styles",
        "Sub-domains"
      ],
      "title": "Co-branding for New Relic partners",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "62a555ec5ade26eda9c5f40b96ab25873c89da1a",
      "image": "https://docs.newrelic.com/static/9bc57293646e4fe206ffe0a20ce06406/3996e/screen-co-branding-heroku.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/co-branding-new-relic-partners/",
      "published_at": "2021-05-05T18:34:27Z",
      "updated_at": "2021-03-16T10:06:23Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Partners who bundle New Relic into their console can \"skin\" New Relic with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku's New Relic integration. In this case Heroku has chosen to use a header only. New Relic partner co-branding example: Here is an example of co-branding with New Relic by using a header. Headers and footers To implement headers and footers: Create a header and/or footer page, consisting of content enclosed in < div> tags. Make sure the pages do not import any CSS or contain any inline CSS. Take any CSS needed for the header and footer, and make it available in a separate CSS file. For example, prepend a custom string such as yourcompany_ to the various style names, to avoid overriding New Relic's standard style definitions. Post the three files to publicly accessible locations hosted by the partner. Use https so your customers do not see any mixed content warnings. For example: https://yourcompany.com/newrelic_header.htm https://yourcompany.com/newrelic_footer.htm https://yourcompany.com/newrelic_styles.css Copy Enter the URLs for the header, footer, and CSS page locations into the appropriate fields in the New Relic Partnership console. Tip To view the headers, log in to one of the accounts in the partnership. Layouts and styles Header and footer layouts and styles are loaded and cached on New Relic's collector servers for insertion into each page output. Updates made to the layout on the partner's site are automatically refreshed hourly. Customized links to the partner's website may be added to the layout. If single sign-on is enabled, the partner may inject customer-specific information into the New Relic user session for use by the layout. For more information, see Single sign on and access control. Sub-domains Partners can optionally display a custom subdomain; for example, yourcompany.newrelic.com, to customers accessing New Relic accounts. To arrange this, contact New Relic's Business Enablement team.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 162.89299,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "sections": "Co-branding for <em>New</em> <em>Relic</em> <em>partners</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Partners who bundle <em>New</em> <em>Relic</em> into their console can &quot;skin&quot; <em>New</em> <em>Relic</em> with their own look and feel, including customized layouts, menus, and sub-domains. Co-branding example This example is from Heroku&#x27;s <em>New</em> <em>Relic</em> <em>integration</em>. In this case Heroku has chosen to use a header only. <em>New</em> <em>Relic</em> <em>partner</em>"
      },
      "id": "603ec8b428ccbc9be1eba7a8"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/new-relic-products-features/other-partnership-settings": [
    {
      "sections": [
        "Partner products, pricing, and billing",
        "Important",
        "Commitment levels",
        "Customized partnership pricing",
        "Partnership billing options",
        "Cancellations",
        "Promotions",
        "Legacy products and commitment levels",
        "For more help"
      ],
      "title": "Partner products, pricing, and billing",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "New Relic products features"
      ],
      "external_id": "05d2d31e3eb7c18d7d0b13eac2d3fead6fd58bbf",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/new-relic-products-features/partner-products-pricing-billing/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important This information is for New Relic partners. If you are not a New Relic partner, refer to the information about pricing and billing for New Relic accounts. Partners: For account setup procedures, see New Relic's Partner API documentation. For specific product pricing details (such as New Relic APM), visit New Relic's website, or contact your Alliance & Channels representative at New Relic. Commitment levels When customers choose a product, they also choose a monthly or annual commitment level. Existing partnerships have the option of limiting available product offerings for their customers. Reseller partners may be able to modify these subscription terms based on the contractual terms in the partner agreement with New Relic. Customized partnership pricing Partnership accounts may offer customized pricing. Customized pricing models, rates, minimums, discounts, and options vary by partnership--the actual pricing model used is subject to the contractual terms of the partner's agreement with New Relic. Contact your Alliance & Channels representative at New Relic to learn more. Partnership billing options New Relic supports the following billing options for partnerships. All subscriptions commence and expire at midnight GMT. For host-based subscriptions, fees are charged in advance for the month. Upgrade requests are honored immediately without any billing for partial use during the month. Downgrades take effect at the next payment date. To view New Relic account billing details and history from the user interface: From rpm.newrelic.com, select (account dropdown) > Account settings > Account > Billing. Billing option Description Credit card When partners choose credit card billing, your customers are directly charged using the credit card information provided during their New Relic subscription signup. This does not include any license fees paid directly by the partner for their customers' accounts. Invoice When partners choose invoice billing, your customers are billed directly by New Relic via invoice for their subscriptions. This option is normally provided on special request to customers with large monthly costs for which credit card billing would be impractical. Reseller For resellers, partners are billed directly for all customer accounts based on the calendar month. Partners may be responsible for accounting for customer usage, pricing, and subscriptions. Resellers have the option to implement an integration between our respective accounting systems. New Relic will invoice the partner monthly, using the Billing integration API for each of the paying accounts under the partnership. Cancellations Once a New Relic account cancellation takes effect, you must uninstall and/or delete all agents or other data-reporting integrations. For uninstallation details, see the documentation for the relevant agents and integrations. Customers may continue to access their data on New Relic until it is purged in accordance with the data retention policy corresponding to the product level. For existing accounts with paid, fixed host subscriptions, cancellations take effect at the next payment date. New Relic will continue to accept data for cancelled accounts until this date. Cancellations for accounts with free or paid based subscriptions take effect immediately. Promotions New Relic allows promotions for accounts offered through partnerships. Promotions associated with a specific partnership may only be redeemed on accounts associated with the partnership. Each promotion has a unique code. This promotion code may be applied only once per account. New Relic may impose further limits on the number of promotions that a customer may apply to an account. Promotion Description Free trials New Relic may include a free trial period for features normally available only through a paid subscription level. This option is provided for a specified number of days. The customer's subscription automatically reverts to its prior level at the conclusion of the trial. Payments for paid subscriptions are not interrupted by the redemption of a free trial promotion on the account. Single use Single use trials expire after they are used once. Discount (deprecated) A one-time percentage discount is applied to a paid subscription. This discount is applied in addition to any volume discounts and customized partner prices. The discount remains in effect until the subscription is modified or cancelled. Legacy products and commitment levels If you have questions about older New Relic products that have been converted to new pricing models, contact your Alliance & Channels representative at New Relic. For more help Additional documentation resources include: Partnership API account object (the primary JSON container object in the API) Partnership API user object (defined as an array within the account object) Partnership API subscription object (the level of service a customer purchases for one or more New Relic products) Billing integration API (functions to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 221.55586,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>products</em>, pricing, and billing",
        "sections": "<em>Partner</em> <em>products</em>, pricing, and billing",
        "tags": "<em>New</em> <em>Relic</em> <em>products</em> <em>features</em>",
        "body": " API user object (defined as an array within the account object) <em>Partnership</em> API subscription object (the level of service a customer purchases for one or more <em>New</em> <em>Relic</em> <em>products</em>) Billing <em>integration</em> API (functions to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts)"
      },
      "id": "603ece55e7b9d254192a080c"
    },
    {
      "sections": [
        "Partnership accounts: Single sign on and access control",
        "Implement Single Sign On",
        "Use shared secret method",
        "SSO API",
        "Description",
        "Method",
        "URI",
        "Parameters",
        "**cURL examples**",
        "For more help"
      ],
      "title": "Partnership accounts: Single sign on and access control",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "New Relic products features"
      ],
      "external_id": "7054f72ececf6692e3abdcc1573276559be841ca",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/new-relic-products-features/single-sign-access-control/",
      "published_at": "2021-05-05T18:30:18Z",
      "updated_at": "2021-03-13T02:45:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic supports Single Sign On (SSO) as a convenience for partner customers. Partners implementing SSO also have the option to restrict access by requiring customers to access New Relic via the partner's management site or product login. Single Sign On is a convenience for your customers, eliminating the requirement of entering sign on credentials multiple times, and it creates a more unified experience for the user. In situations where this distinction is desired, SSO is recommended. Where it is desirable to maintain a distinction between the services or where technical considerations preclude implementing SSO, a fully functioning integration is still achievable. Implement Single Sign On Two methods for SSO are supported by New Relic. New Relic upgraded its single sign on system during 2011. If you implemented single sign on with New Relic prior to September 2011, you will have used the old system. That method of implementing SSO has been deprecated. All new integrations must use the new system. Existing implementations using the old system will continue to work indefinitely. However, we encourage all partners using the old system to upgrade to the new model. Use shared secret method The upgraded shared secret version of New Relic's SSO implementation offers several improvements over the old handshake version. Most important, the system is more secure. Security is enhanced by the use of passing a SHA1 digest of a shared secret, a timestamp, and request specific data in the authentication SSO request. The shared secret can be any string. Whatever shared secret is chosen, enter it in the appropriate field in the New Relic Partner console. To edit the SSO settings: Log in to the partnership owner account. From the account dropdown in the New Relic UI, select Account settings > Partnerships > Edit settings. For SSO type, select signature. For SSO data, type the shared secret. Select Save. In addition to enhanced security, the new SSO method supports a session cookie. Nav data may be stored in the session cookie to support enhanced functionality of headers and footers. The name of the cookie is specified through the Partner console. If unspecified the cookie name defaults to nav_data. To successfully use this SSO method, the SSO URI must be invoked from the user's browser. On success the browser will be automatically logged into New Relic and the redirect URL to that account returned. The SSO URI however should not be generated on the browser, as this would expose the shared secret and allow the login to be spoofed. The URI should be generated on a host and passed to the user's browser. SSO API Description SSO authentication request Method POST or GET URI https://rpm.newrelic.com/accounts/sso_access Copy Parameters Name Required Description id Yes ID of the New Relic account. email No Email address of user logging in (optional). If given, the user must already have been added to the account. By default, the account Owner role is used. Account Owners have full privileges on accounts. If some lesser degree of account privileges or a different user is desired, the email must be provided. timestamp Yes Timestamp used to generate token, in seconds since the epoch. Only timestamps within five minutes (300 seconds) of the New Relic system clock are accepted. nav-data OR nav_data No Partner navigation data. This data will be set in the session cookie using the name as specified in the partnership configuration, or nav_data by default. token Yes Signed token. The signature token is generated by applying a SHA1 hex digest on a seed string, which is composed as Account_id:secret:timestamp or Account_id:secret:timestamp:email. Each component is separated by a colon (:). Example without email: \"12345:MySecret:0987654321\" Using Ruby syntax: \"#{account_id}:#{secret}:#{timestamp}\" Example with email: \"12345:MySecret:0987654321:user@host.com\" Using Ruby syntax: \"#{account_id}:#{secret}:#{timestamp}:#{email}\" remote_url No Relative path of a New Relic page to which the users will be directed. ** cURL examples * * curl -X POST -d \"id=63790\" -d \"timestamp=1319659982\" -d \"token=a4d30d6f1f1a5b6c2872ab\" https://rpm.newrelic.com/accounts/sso_access Copy curl -X POST -d \"id=63790\" -d \"timestamp=1319659982\" -d \"token=a4d30d6f1f1a5b6c2872ab\" -d \"remote_url=/account/63790/servers\" https://rpm.newrelic.com/accounts/sso_access Copy On success returns: <html><body>You are being redirected.</body></html> Copy For more help Additional documentation resources include: SAML service providers (overview of New Relic's SSO feature, providers supported by New Relic) New Relic Partners and SAML SSO (additional options for partner accounts)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 219.75725,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> accounts: Single sign on and access control",
        "sections": "<em>Partnership</em> accounts: Single sign on and access control",
        "tags": "<em>New</em> <em>Relic</em> <em>products</em> <em>features</em>",
        "body": "<em>New</em> <em>Relic</em> supports Single Sign On (SSO) as a convenience for <em>partner</em> customers. Partners implementing SSO also have the option to restrict access by requiring customers to access <em>New</em> <em>Relic</em> via the <em>partner</em>&#x27;s management site or <em>product</em> login. Single Sign On is a convenience for your customers"
      },
      "id": "6044175564441fd3fa378f1f"
    },
    {
      "sections": [
        "Support resources for New Relic partners",
        "Tip",
        "New Relic Support",
        "Documentation",
        "Agent documentation",
        "Agent release notes",
        "Online Technical Community"
      ],
      "title": "Support resources for New Relic partners",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "56246fb8462659d929766125f8afbbc429f42ee5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/support-resources-new-relic-partners/",
      "published_at": "2021-05-05T18:30:25Z",
      "updated_at": "2021-03-13T03:39:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This document is for New Relic partners. After you complete your partnership integration, you will be introduced to your technical contacts at New Relic. Use these channels for non-urgent escalations. Tip If you are not a New Relic partner, see New Relic's resources for finding help or filing a support ticket. New Relic Support To obtain support for partner accounts, create a ticket at support.newrelic.com. If you need to call New Relic directly, contact your Business Development representative. Documentation Documentation from New Relic's Docs site is an important resource for your support group when providing Level 1 support to your New Relic subscribers. Posting these links on your support pages is an effective way to encourage self help and reduce your support efforts. Top level entry point for New Relic documentation: https://docs.newrelic.com/docs/. From here you can select information about New Relic products and features by category. Tip The Docs site includes a Partnerships category with information for New Relic partners and some partnership customers. Here are the five most commonly consulted articles on the New Relic Docs site. Providing easily found and direct links to these articles can provide many users with self-serve answers to their questions. Create your New Relic account Name your application Configure the agent Not seeing data Apdex: Measuring user satisfaction Agent documentation Here are links to New Relic documentation categories organized by APM agent languages: Go Java .NET Node.js PHP Python Ruby Agent release notes Here are links to New Relic release notes organized by agent languages: Go Java .NET Node.js PHP Python Ruby Online Technical Community The New Relic Explorers Hub brings together the expertise of New Relic employees, our Partners, and our community regarding all things New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 144.30101,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Support resources for <em>New</em> <em>Relic</em> <em>partners</em>",
        "sections": "Support resources for <em>New</em> <em>Relic</em> <em>partners</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " information about <em>New</em> <em>Relic</em> <em>products</em> and <em>features</em> by category. Tip The Docs site includes a <em>Partnerships</em> category with information for <em>New</em> <em>Relic</em> partners and some <em>partnership</em> customers. Here are the five most commonly consulted articles on the <em>New</em> <em>Relic</em> Docs site. Providing easily found and direct links"
      },
      "id": "60450ecf28ccbc45632c6095"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/new-relic-products-features/partner-products-pricing-billing": [
    {
      "sections": [
        "Other partnership settings",
        "Types of settings",
        "For more help"
      ],
      "title": "Other partnership settings",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "New Relic products features"
      ],
      "external_id": "df23328a14acab54c7f100c723f6feee68927c6b",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/new-relic-products-features/other-partnership-settings/",
      "published_at": "2021-05-05T18:33:23Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "There are a number of miscellaneous settings that are available to partners for customization of their partnership integration. Most of these settings enable or disable the presentation of New Relic features. These settings must be set by New Relic and are not configurable through the Partnership Console. Types of settings Contact your partnership technical contact to have any of these settings modified. Download links: Show agent link Show configuration file link Welcome messages: Signup message: A customized welcome message Hide or show banner welcome message Hide or show invoice message Email control: Send deploy reminders Send trial emails Billing email: This is for partnerships where the billing method is \"Reseller\" and invoices should be directed to the attention of a specific party. Feature access: Server monitoring User administration For more help Additional documentation resources include: Partnership console (overview of how to use the Partnership Console to change account settings in New Relic) The New Relic user interface (overview of how to use the UI)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 221.55586,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Other <em>partnership</em> settings",
        "sections": "Other <em>partnership</em> settings",
        "tags": "<em>New</em> <em>Relic</em> <em>products</em> <em>features</em>",
        "body": "There are a number of miscellaneous settings that are available to partners for customization of their <em>partnership</em> <em>integration</em>. Most of these settings enable or disable the presentation of <em>New</em> <em>Relic</em> <em>features</em>. These settings must be set by <em>New</em> <em>Relic</em> and are not configurable through the <em>Partnership</em>"
      },
      "id": "603ed42364441fb51f4e88a9"
    },
    {
      "sections": [
        "Partnership accounts: Single sign on and access control",
        "Implement Single Sign On",
        "Use shared secret method",
        "SSO API",
        "Description",
        "Method",
        "URI",
        "Parameters",
        "**cURL examples**",
        "For more help"
      ],
      "title": "Partnership accounts: Single sign on and access control",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "New Relic products features"
      ],
      "external_id": "7054f72ececf6692e3abdcc1573276559be841ca",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/new-relic-products-features/single-sign-access-control/",
      "published_at": "2021-05-05T18:30:18Z",
      "updated_at": "2021-03-13T02:45:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic supports Single Sign On (SSO) as a convenience for partner customers. Partners implementing SSO also have the option to restrict access by requiring customers to access New Relic via the partner's management site or product login. Single Sign On is a convenience for your customers, eliminating the requirement of entering sign on credentials multiple times, and it creates a more unified experience for the user. In situations where this distinction is desired, SSO is recommended. Where it is desirable to maintain a distinction between the services or where technical considerations preclude implementing SSO, a fully functioning integration is still achievable. Implement Single Sign On Two methods for SSO are supported by New Relic. New Relic upgraded its single sign on system during 2011. If you implemented single sign on with New Relic prior to September 2011, you will have used the old system. That method of implementing SSO has been deprecated. All new integrations must use the new system. Existing implementations using the old system will continue to work indefinitely. However, we encourage all partners using the old system to upgrade to the new model. Use shared secret method The upgraded shared secret version of New Relic's SSO implementation offers several improvements over the old handshake version. Most important, the system is more secure. Security is enhanced by the use of passing a SHA1 digest of a shared secret, a timestamp, and request specific data in the authentication SSO request. The shared secret can be any string. Whatever shared secret is chosen, enter it in the appropriate field in the New Relic Partner console. To edit the SSO settings: Log in to the partnership owner account. From the account dropdown in the New Relic UI, select Account settings > Partnerships > Edit settings. For SSO type, select signature. For SSO data, type the shared secret. Select Save. In addition to enhanced security, the new SSO method supports a session cookie. Nav data may be stored in the session cookie to support enhanced functionality of headers and footers. The name of the cookie is specified through the Partner console. If unspecified the cookie name defaults to nav_data. To successfully use this SSO method, the SSO URI must be invoked from the user's browser. On success the browser will be automatically logged into New Relic and the redirect URL to that account returned. The SSO URI however should not be generated on the browser, as this would expose the shared secret and allow the login to be spoofed. The URI should be generated on a host and passed to the user's browser. SSO API Description SSO authentication request Method POST or GET URI https://rpm.newrelic.com/accounts/sso_access Copy Parameters Name Required Description id Yes ID of the New Relic account. email No Email address of user logging in (optional). If given, the user must already have been added to the account. By default, the account Owner role is used. Account Owners have full privileges on accounts. If some lesser degree of account privileges or a different user is desired, the email must be provided. timestamp Yes Timestamp used to generate token, in seconds since the epoch. Only timestamps within five minutes (300 seconds) of the New Relic system clock are accepted. nav-data OR nav_data No Partner navigation data. This data will be set in the session cookie using the name as specified in the partnership configuration, or nav_data by default. token Yes Signed token. The signature token is generated by applying a SHA1 hex digest on a seed string, which is composed as Account_id:secret:timestamp or Account_id:secret:timestamp:email. Each component is separated by a colon (:). Example without email: \"12345:MySecret:0987654321\" Using Ruby syntax: \"#{account_id}:#{secret}:#{timestamp}\" Example with email: \"12345:MySecret:0987654321:user@host.com\" Using Ruby syntax: \"#{account_id}:#{secret}:#{timestamp}:#{email}\" remote_url No Relative path of a New Relic page to which the users will be directed. ** cURL examples * * curl -X POST -d \"id=63790\" -d \"timestamp=1319659982\" -d \"token=a4d30d6f1f1a5b6c2872ab\" https://rpm.newrelic.com/accounts/sso_access Copy curl -X POST -d \"id=63790\" -d \"timestamp=1319659982\" -d \"token=a4d30d6f1f1a5b6c2872ab\" -d \"remote_url=/account/63790/servers\" https://rpm.newrelic.com/accounts/sso_access Copy On success returns: <html><body>You are being redirected.</body></html> Copy For more help Additional documentation resources include: SAML service providers (overview of New Relic's SSO feature, providers supported by New Relic) New Relic Partners and SAML SSO (additional options for partner accounts)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 219.75725,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> accounts: Single sign on and access control",
        "sections": "<em>Partnership</em> accounts: Single sign on and access control",
        "tags": "<em>New</em> <em>Relic</em> <em>products</em> <em>features</em>",
        "body": "<em>New</em> <em>Relic</em> supports Single Sign On (SSO) as a convenience for <em>partner</em> customers. Partners implementing SSO also have the option to restrict access by requiring customers to access <em>New</em> <em>Relic</em> via the <em>partner</em>&#x27;s management site or <em>product</em> login. Single Sign On is a convenience for your customers"
      },
      "id": "6044175564441fd3fa378f1f"
    },
    {
      "sections": [
        "Support resources for New Relic partners",
        "Tip",
        "New Relic Support",
        "Documentation",
        "Agent documentation",
        "Agent release notes",
        "Online Technical Community"
      ],
      "title": "Support resources for New Relic partners",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "56246fb8462659d929766125f8afbbc429f42ee5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/support-resources-new-relic-partners/",
      "published_at": "2021-05-05T18:30:25Z",
      "updated_at": "2021-03-13T03:39:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This document is for New Relic partners. After you complete your partnership integration, you will be introduced to your technical contacts at New Relic. Use these channels for non-urgent escalations. Tip If you are not a New Relic partner, see New Relic's resources for finding help or filing a support ticket. New Relic Support To obtain support for partner accounts, create a ticket at support.newrelic.com. If you need to call New Relic directly, contact your Business Development representative. Documentation Documentation from New Relic's Docs site is an important resource for your support group when providing Level 1 support to your New Relic subscribers. Posting these links on your support pages is an effective way to encourage self help and reduce your support efforts. Top level entry point for New Relic documentation: https://docs.newrelic.com/docs/. From here you can select information about New Relic products and features by category. Tip The Docs site includes a Partnerships category with information for New Relic partners and some partnership customers. Here are the five most commonly consulted articles on the New Relic Docs site. Providing easily found and direct links to these articles can provide many users with self-serve answers to their questions. Create your New Relic account Name your application Configure the agent Not seeing data Apdex: Measuring user satisfaction Agent documentation Here are links to New Relic documentation categories organized by APM agent languages: Go Java .NET Node.js PHP Python Ruby Agent release notes Here are links to New Relic release notes organized by agent languages: Go Java .NET Node.js PHP Python Ruby Online Technical Community The New Relic Explorers Hub brings together the expertise of New Relic employees, our Partners, and our community regarding all things New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 144.30101,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Support resources for <em>New</em> <em>Relic</em> <em>partners</em>",
        "sections": "Support resources for <em>New</em> <em>Relic</em> <em>partners</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " information about <em>New</em> <em>Relic</em> <em>products</em> and <em>features</em> by category. Tip The Docs site includes a <em>Partnerships</em> category with information for <em>New</em> <em>Relic</em> partners and some <em>partnership</em> customers. Here are the five most commonly consulted articles on the <em>New</em> <em>Relic</em> Docs site. Providing easily found and direct links"
      },
      "id": "60450ecf28ccbc45632c6095"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/new-relic-products-features/single-sign-access-control": [
    {
      "sections": [
        "Partner products, pricing, and billing",
        "Important",
        "Commitment levels",
        "Customized partnership pricing",
        "Partnership billing options",
        "Cancellations",
        "Promotions",
        "Legacy products and commitment levels",
        "For more help"
      ],
      "title": "Partner products, pricing, and billing",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "New Relic products features"
      ],
      "external_id": "05d2d31e3eb7c18d7d0b13eac2d3fead6fd58bbf",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/new-relic-products-features/partner-products-pricing-billing/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important This information is for New Relic partners. If you are not a New Relic partner, refer to the information about pricing and billing for New Relic accounts. Partners: For account setup procedures, see New Relic's Partner API documentation. For specific product pricing details (such as New Relic APM), visit New Relic's website, or contact your Alliance & Channels representative at New Relic. Commitment levels When customers choose a product, they also choose a monthly or annual commitment level. Existing partnerships have the option of limiting available product offerings for their customers. Reseller partners may be able to modify these subscription terms based on the contractual terms in the partner agreement with New Relic. Customized partnership pricing Partnership accounts may offer customized pricing. Customized pricing models, rates, minimums, discounts, and options vary by partnership--the actual pricing model used is subject to the contractual terms of the partner's agreement with New Relic. Contact your Alliance & Channels representative at New Relic to learn more. Partnership billing options New Relic supports the following billing options for partnerships. All subscriptions commence and expire at midnight GMT. For host-based subscriptions, fees are charged in advance for the month. Upgrade requests are honored immediately without any billing for partial use during the month. Downgrades take effect at the next payment date. To view New Relic account billing details and history from the user interface: From rpm.newrelic.com, select (account dropdown) > Account settings > Account > Billing. Billing option Description Credit card When partners choose credit card billing, your customers are directly charged using the credit card information provided during their New Relic subscription signup. This does not include any license fees paid directly by the partner for their customers' accounts. Invoice When partners choose invoice billing, your customers are billed directly by New Relic via invoice for their subscriptions. This option is normally provided on special request to customers with large monthly costs for which credit card billing would be impractical. Reseller For resellers, partners are billed directly for all customer accounts based on the calendar month. Partners may be responsible for accounting for customer usage, pricing, and subscriptions. Resellers have the option to implement an integration between our respective accounting systems. New Relic will invoice the partner monthly, using the Billing integration API for each of the paying accounts under the partnership. Cancellations Once a New Relic account cancellation takes effect, you must uninstall and/or delete all agents or other data-reporting integrations. For uninstallation details, see the documentation for the relevant agents and integrations. Customers may continue to access their data on New Relic until it is purged in accordance with the data retention policy corresponding to the product level. For existing accounts with paid, fixed host subscriptions, cancellations take effect at the next payment date. New Relic will continue to accept data for cancelled accounts until this date. Cancellations for accounts with free or paid based subscriptions take effect immediately. Promotions New Relic allows promotions for accounts offered through partnerships. Promotions associated with a specific partnership may only be redeemed on accounts associated with the partnership. Each promotion has a unique code. This promotion code may be applied only once per account. New Relic may impose further limits on the number of promotions that a customer may apply to an account. Promotion Description Free trials New Relic may include a free trial period for features normally available only through a paid subscription level. This option is provided for a specified number of days. The customer's subscription automatically reverts to its prior level at the conclusion of the trial. Payments for paid subscriptions are not interrupted by the redemption of a free trial promotion on the account. Single use Single use trials expire after they are used once. Discount (deprecated) A one-time percentage discount is applied to a paid subscription. This discount is applied in addition to any volume discounts and customized partner prices. The discount remains in effect until the subscription is modified or cancelled. Legacy products and commitment levels If you have questions about older New Relic products that have been converted to new pricing models, contact your Alliance & Channels representative at New Relic. For more help Additional documentation resources include: Partnership API account object (the primary JSON container object in the API) Partnership API user object (defined as an array within the account object) Partnership API subscription object (the level of service a customer purchases for one or more New Relic products) Billing integration API (functions to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 221.55586,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>products</em>, pricing, and billing",
        "sections": "<em>Partner</em> <em>products</em>, pricing, and billing",
        "tags": "<em>New</em> <em>Relic</em> <em>products</em> <em>features</em>",
        "body": " API user object (defined as an array within the account object) <em>Partnership</em> API subscription object (the level of service a customer purchases for one or more <em>New</em> <em>Relic</em> <em>products</em>) Billing <em>integration</em> API (functions to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts)"
      },
      "id": "603ece55e7b9d254192a080c"
    },
    {
      "sections": [
        "Other partnership settings",
        "Types of settings",
        "For more help"
      ],
      "title": "Other partnership settings",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "New Relic products features"
      ],
      "external_id": "df23328a14acab54c7f100c723f6feee68927c6b",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/new-relic-products-features/other-partnership-settings/",
      "published_at": "2021-05-05T18:33:23Z",
      "updated_at": "2021-03-16T10:07:34Z",
      "document_type": "page",
      "popularity": 1,
      "body": "There are a number of miscellaneous settings that are available to partners for customization of their partnership integration. Most of these settings enable or disable the presentation of New Relic features. These settings must be set by New Relic and are not configurable through the Partnership Console. Types of settings Contact your partnership technical contact to have any of these settings modified. Download links: Show agent link Show configuration file link Welcome messages: Signup message: A customized welcome message Hide or show banner welcome message Hide or show invoice message Email control: Send deploy reminders Send trial emails Billing email: This is for partnerships where the billing method is \"Reseller\" and invoices should be directed to the attention of a specific party. Feature access: Server monitoring User administration For more help Additional documentation resources include: Partnership console (overview of how to use the Partnership Console to change account settings in New Relic) The New Relic user interface (overview of how to use the UI)",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 221.55586,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Other <em>partnership</em> settings",
        "sections": "Other <em>partnership</em> settings",
        "tags": "<em>New</em> <em>Relic</em> <em>products</em> <em>features</em>",
        "body": "There are a number of miscellaneous settings that are available to partners for customization of their <em>partnership</em> <em>integration</em>. Most of these settings enable or disable the presentation of <em>New</em> <em>Relic</em> <em>features</em>. These settings must be set by <em>New</em> <em>Relic</em> and are not configurable through the <em>Partnership</em>"
      },
      "id": "603ed42364441fb51f4e88a9"
    },
    {
      "sections": [
        "Support resources for New Relic partners",
        "Tip",
        "New Relic Support",
        "Documentation",
        "Agent documentation",
        "Agent release notes",
        "Online Technical Community"
      ],
      "title": "Support resources for New Relic partners",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Getting started"
      ],
      "external_id": "56246fb8462659d929766125f8afbbc429f42ee5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/getting-started/support-resources-new-relic-partners/",
      "published_at": "2021-05-05T18:30:25Z",
      "updated_at": "2021-03-13T03:39:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This document is for New Relic partners. After you complete your partnership integration, you will be introduced to your technical contacts at New Relic. Use these channels for non-urgent escalations. Tip If you are not a New Relic partner, see New Relic's resources for finding help or filing a support ticket. New Relic Support To obtain support for partner accounts, create a ticket at support.newrelic.com. If you need to call New Relic directly, contact your Business Development representative. Documentation Documentation from New Relic's Docs site is an important resource for your support group when providing Level 1 support to your New Relic subscribers. Posting these links on your support pages is an effective way to encourage self help and reduce your support efforts. Top level entry point for New Relic documentation: https://docs.newrelic.com/docs/. From here you can select information about New Relic products and features by category. Tip The Docs site includes a Partnerships category with information for New Relic partners and some partnership customers. Here are the five most commonly consulted articles on the New Relic Docs site. Providing easily found and direct links to these articles can provide many users with self-serve answers to their questions. Create your New Relic account Name your application Configure the agent Not seeing data Apdex: Measuring user satisfaction Agent documentation Here are links to New Relic documentation categories organized by APM agent languages: Go Java .NET Node.js PHP Python Ruby Agent release notes Here are links to New Relic release notes organized by agent languages: Go Java .NET Node.js PHP Python Ruby Online Technical Community The New Relic Explorers Hub brings together the expertise of New Relic employees, our Partners, and our community regarding all things New Relic.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 144.301,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Support resources for <em>New</em> <em>Relic</em> <em>partners</em>",
        "sections": "Support resources for <em>New</em> <em>Relic</em> <em>partners</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " information about <em>New</em> <em>Relic</em> <em>products</em> and <em>features</em> by category. Tip The Docs site includes a <em>Partnerships</em> category with information for <em>New</em> <em>Relic</em> partners and some <em>partnership</em> customers. Here are the five most commonly consulted articles on the <em>New</em> <em>Relic</em> Docs site. Providing easily found and direct links"
      },
      "id": "60450ecf28ccbc45632c6095"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-account-access-administrators": [
    {
      "sections": [
        "Intro to Partnership API",
        "Requirements",
        "Customer partnership restrictions",
        "Password requirements",
        "Things you can do",
        "Get started"
      ],
      "title": "Intro to Partnership API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "074cf4e7c590dfa2332284a7b7f394e2f7ba45ec",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-api/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-29T20:10:08Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our Partnership API allows New Relic partners, and New Relic accounts set up as customer partnerships, to manage accounts, users, and subscription-related settings. Requirements The Partnership API can be used by two types of New Relic accounts: partners (managed service providers, resellers) and customer partnerships (larger customers who have been given access to our partnership account structure). These docs are for version 2 of the Partner API. Earlier versions have been deprecated. If you have problems with an older integration, upgrade to version 2. Access to the partnership account structure and the Partnership API requires prior setup and approval by New Relic. Partnership API calls require authentication with both your partnership owner account's REST API key and your Partner ID. Accounts that are genuine New Relic partners (managed service providers, resellers) have no restrictions on using the API. Accounts set up as customer partnerships have restrictions that follow. Customer partnership restrictions If your New Relic organization is set up as a customer partnership, there are some restrictions in place if your organization is on our newer pricing plan or our newer account/user model. Details: Pricing plan. If you’re on New Relic One pricing, you can't use API calls that govern our original pricing plan. The API impacts are: You can't use the subscription object You can't use the NerdGraph Provisioning API. User model. If your New Relic account has been converted to be entirely on the New Relic One account/user model, you can no longer use API calls that create or govern users on our original user model. The API impacts are: You can't use the user object. Instead, you'd manage users with these user management docs. For the account object: you can't add users via the users field. Instead, you'd manage users with these user management docs. To determine your pricing plan or account/user model, see Overview of pricing and user model changes. Password requirements Passwords passed for account creation have these requirements: 8 to 50 characters in length Only contain letters, numbers, or special characters Cannot contain spaces Must contain at least 1 letter Must contain at least 1 number or special character Things you can do Here is an overview of the API's functionality. Account: The account object is what you use to create and update accounts. You can do the following with it: Create new Show Update Cancel Show usage Set primary admin (some accounts) Set subscription (some accounts) There is also a sub-account object for creating sub-accounts. Users: Some organizations that meet the requirements can use the user object to: Add user access to account Remove user access from account Subscription: Organizations that meet the requirements and are on our original product pricing plan can use the subscription object to configure various subscription-related traits. Get started To start using the Partnership API, see the Partner API reference docs.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.98657,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Intro to <em>Partnership</em> API",
        "sections": "Intro to <em>Partnership</em> API",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": ") and customer <em>partnerships</em> (larger customers who have been given access to our <em>partnership</em> <em>account</em> structure). These docs are for version 2 of the <em>Partner</em> API. Earlier versions have been deprecated. If you have problems with an older <em>integration</em>, upgrade to version 2. Access to the <em>partnership</em> <em>account</em>"
      },
      "id": "603ed42328ccbcd4b3eba7ca"
    },
    {
      "sections": [
        "Partnership accounts, users, and subscriptions",
        "Partnerships with New Relic",
        "Account hierarchy",
        "Tip",
        "Partnership owner accounts (POA)",
        "Sub-accounts with partnerships",
        "Account users",
        "Partnership pricing"
      ],
      "title": "Partnership accounts, users, and subscriptions",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "ae2f39a8ff0395815b3e31a9d8ad9361beca2c4e",
      "image": "https://docs.newrelic.com/static/acecf0ec89c448506faef0e4eeff87e6/db3a5/partnership-hierarchy.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partnership-accounts-users-subscriptions/",
      "published_at": "2021-05-05T04:04:48Z",
      "updated_at": "2021-03-29T16:17:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic organizations set up as partnership accounts have access to an enhanced hierarchical way of organizing their account structure. Partnerships with New Relic There are two types of New Relic organizations that are able to use our partnership account structure and the Partnership API: An actual partnership: A partnership refers to managed service providers or resellers, who offer New Relic products to their customers. Heroku is one example of such a New Relic partner. A customer partnership: some of our larger organizations also make use of our partnership account structure. We call these customers \"customer partnerships.\" Use of our partnership account structure requires prior approval and set up by New Relic representatives. For customer partnerships, New Relic contacts organizations that would benefit from such a structure. Partnerships are identified by a numeric PARTNER_ID. In some cases, a New Relic customer may have more than one partnership; for example, when one section of New Relic users must be managed differently from another. Partnerships are administered by a partnership owner account. The account that owns a partnership functions differently from a regular account. If multiple partnerships have been set up, each has a unique PARTNER_ID. Account hierarchy New Relic partnership organizations consist of the partnership owning account, partnerships, master accounts, and sub-accounts. A partnership can have multiple master accounts and sub-accounts. To understand how sub-accounts and master accounts scale with EU region accounts, see EU region account hierarchy. Tip If you do not have a partnership organization, you can only have one master account. For more information, see Manage apps or users with sub-accounts. All master accounts and sub-accounts roll up to your partnership account. Partnership owner accounts (POA) The partnership owner account (POA) is the entity that is used to administer a partnership. It controls which users manage accounts under partnerships, have access to the partner API, and manage other aspects of the partnership. Do not monitor your own applications from the partnership owner account. Instead, create an account within the partnership and monitor apps from that account. Users on the partnership owner account can access accounts under their partnerships and enjoy User level privileges. Admins on the POA can access accounts under their partnerships and enjoy Admin level privileges, including permission to manage users. The Owner of the partnership owner account will still only have Admin level access on accounts under the partnership. That means that the owner cannot enable SAML SSO, change the account owner, cancel the account via the UI, etc. The partnership owner account enjoys special privileges, and it lets you exercise the capabilities defined in your partnership agreement with New Relic. For example, you may use your partnership owner account with the New Relic Partnership API to set up and manage users on your accounts or to view your customers' performance data in the New Relic UI. Tip Many of the Partnership API calls return an account status as part of the XML. Sub-accounts with partnerships Sub-accounts behave differently than other New Relic accounts provisioned through your partnership: Sub-accounts Comments Account creation Sub-accounts can be created through the Partnership API or New Relic user interface. In order to group accounts through the New Relic user interface, your partnership must have Admin privileges, and the account must have the appropriate subscription level. If you have any questions about partnership privileges or subscription levels, contact your New Relic account representative. Sub-accounts do not have a New Relic subscription of their own. They inherit the master account's subscription. Billing Billing is applied at the master account level. Exception: Reseller partnerships receive consolidated billing for all accounts under the partnership. Permissions Admin-level users on a master account have the ability to create, modify, and delete sub-accounts for the master account. Users that have been granted access permissions on a master account automatically inherit the same level of access for all sub-accounts. This is also true for add-on roles. Exception: Sub-account users will not receive alert emails or weekly report emails unless they are explicitly granted permission on these sub-accounts. Account users You can use the Partnership user API to add and maintain your customer users. An account must always have at least one person (the Owner) associated with it. For security purposes, you cannot change an account Owner with the Partnership user API. Instead, you must change the account Owner from the Users page in the New Relic UI. In addition, a specific user may be associated with multiple accounts. For example, many New Relic users have accounts through a partnership, and they also have accounts they created directly with New Relic. Partnership pricing Accounts within a partnership organization may have different levels of access to New Relic products. Tip Many of the Partnership API calls return a subscription status as part of the XML. For accounts set up through a partnership: An account can have multiple New Relic products associated with it. However, only one subscription per product may be active at any time. For example, a user may have both an Essentials subscription and a higher service level Pro Trial subscription. When the Pro Trial subscription expires, the service level returns to the Essentials subscription. Promotions may appear as a subscription change. Several factors affect starting and stopping subscriptions, including how New Relic handles pricing and billing.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.84528,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>accounts</em>, users, and subscriptions",
        "sections": "<em>Partnerships</em> with <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " these customers &quot;customer <em>partnerships</em>.&quot; Use of our <em>partnership</em> <em>account</em> structure requires prior approval and set up by <em>New</em> <em>Relic</em> representatives. For customer <em>partnerships</em>, <em>New</em> <em>Relic</em> contacts organizations that would benefit from such a structure. <em>Partnerships</em> are identified by a numeric <em>PARTNER</em>"
      },
      "id": "603ece55e7b9d273782a0804"
    },
    {
      "sections": [
        "Tips and tricks",
        "Account creation and deletion",
        "Partnership owner account"
      ],
      "title": "Tips and tricks",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "ba123e58f5acafea5b65e09350eba65abf430b2e",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/tips-tricks/",
      "published_at": "2021-05-05T18:33:38Z",
      "updated_at": "2021-03-13T03:11:35Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Here are some tips and tricks for creating and deleting New Relic partner accounts. Account creation and deletion When you create an account through the New Relic Partner API, the system checks the string submitted as the account name to ensure it is unique. If it is not unique, the system will append a number to the submitted string to ensure uniqueness; for example, account-name_1. When an account is canceled, it is not deleted from the New Relic database. Rather, it is made inactive by removing all subscriptions from the account. If you attempt to reinstate an account by calling the Account Creation API using the same account name, the system will check for uniqueness, determine that the name is not unique and create a new account with an appended number. This is in most cases not what is desired. To avoid this problem, as part of account creation, store the numeric account_id with the account name. When re-creating an account, check for the existence of this ID. If detected, rather than using the Account Creation API, use the Change Subscription API to add a new subscription to the account. Adding an active subscription to the account will re-activate the account. Partnership owner account The Partnership Owner Account is not part of the partnership. It owns the partnership. Attempts to treat it as if it were in the partnership will fail. This includes but is not limited to: Attempting to SSO into the partnership owner account using the partnership shared secret Expecting the partnership pricing to apply to the partnership owner account",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 202.20833,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Partnership</em> owner <em>account</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Here are some tips and tricks for creating and deleting <em>New</em> <em>Relic</em> <em>partner</em> accounts. <em>Account</em> creation and deletion When you create an <em>account</em> through the <em>New</em> <em>Relic</em> <em>Partner</em> API, the system checks the string submitted as the <em>account</em> name to ensure it is unique. If it is not unique, the system"
      },
      "id": "60441785196a676aed960f46"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-api": [
    {
      "sections": [
        "Partnership accounts, users, and subscriptions",
        "Partnerships with New Relic",
        "Account hierarchy",
        "Tip",
        "Partnership owner accounts (POA)",
        "Sub-accounts with partnerships",
        "Account users",
        "Partnership pricing"
      ],
      "title": "Partnership accounts, users, and subscriptions",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "ae2f39a8ff0395815b3e31a9d8ad9361beca2c4e",
      "image": "https://docs.newrelic.com/static/acecf0ec89c448506faef0e4eeff87e6/db3a5/partnership-hierarchy.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partnership-accounts-users-subscriptions/",
      "published_at": "2021-05-05T04:04:48Z",
      "updated_at": "2021-03-29T16:17:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic organizations set up as partnership accounts have access to an enhanced hierarchical way of organizing their account structure. Partnerships with New Relic There are two types of New Relic organizations that are able to use our partnership account structure and the Partnership API: An actual partnership: A partnership refers to managed service providers or resellers, who offer New Relic products to their customers. Heroku is one example of such a New Relic partner. A customer partnership: some of our larger organizations also make use of our partnership account structure. We call these customers \"customer partnerships.\" Use of our partnership account structure requires prior approval and set up by New Relic representatives. For customer partnerships, New Relic contacts organizations that would benefit from such a structure. Partnerships are identified by a numeric PARTNER_ID. In some cases, a New Relic customer may have more than one partnership; for example, when one section of New Relic users must be managed differently from another. Partnerships are administered by a partnership owner account. The account that owns a partnership functions differently from a regular account. If multiple partnerships have been set up, each has a unique PARTNER_ID. Account hierarchy New Relic partnership organizations consist of the partnership owning account, partnerships, master accounts, and sub-accounts. A partnership can have multiple master accounts and sub-accounts. To understand how sub-accounts and master accounts scale with EU region accounts, see EU region account hierarchy. Tip If you do not have a partnership organization, you can only have one master account. For more information, see Manage apps or users with sub-accounts. All master accounts and sub-accounts roll up to your partnership account. Partnership owner accounts (POA) The partnership owner account (POA) is the entity that is used to administer a partnership. It controls which users manage accounts under partnerships, have access to the partner API, and manage other aspects of the partnership. Do not monitor your own applications from the partnership owner account. Instead, create an account within the partnership and monitor apps from that account. Users on the partnership owner account can access accounts under their partnerships and enjoy User level privileges. Admins on the POA can access accounts under their partnerships and enjoy Admin level privileges, including permission to manage users. The Owner of the partnership owner account will still only have Admin level access on accounts under the partnership. That means that the owner cannot enable SAML SSO, change the account owner, cancel the account via the UI, etc. The partnership owner account enjoys special privileges, and it lets you exercise the capabilities defined in your partnership agreement with New Relic. For example, you may use your partnership owner account with the New Relic Partnership API to set up and manage users on your accounts or to view your customers' performance data in the New Relic UI. Tip Many of the Partnership API calls return an account status as part of the XML. Sub-accounts with partnerships Sub-accounts behave differently than other New Relic accounts provisioned through your partnership: Sub-accounts Comments Account creation Sub-accounts can be created through the Partnership API or New Relic user interface. In order to group accounts through the New Relic user interface, your partnership must have Admin privileges, and the account must have the appropriate subscription level. If you have any questions about partnership privileges or subscription levels, contact your New Relic account representative. Sub-accounts do not have a New Relic subscription of their own. They inherit the master account's subscription. Billing Billing is applied at the master account level. Exception: Reseller partnerships receive consolidated billing for all accounts under the partnership. Permissions Admin-level users on a master account have the ability to create, modify, and delete sub-accounts for the master account. Users that have been granted access permissions on a master account automatically inherit the same level of access for all sub-accounts. This is also true for add-on roles. Exception: Sub-account users will not receive alert emails or weekly report emails unless they are explicitly granted permission on these sub-accounts. Account users You can use the Partnership user API to add and maintain your customer users. An account must always have at least one person (the Owner) associated with it. For security purposes, you cannot change an account Owner with the Partnership user API. Instead, you must change the account Owner from the Users page in the New Relic UI. In addition, a specific user may be associated with multiple accounts. For example, many New Relic users have accounts through a partnership, and they also have accounts they created directly with New Relic. Partnership pricing Accounts within a partnership organization may have different levels of access to New Relic products. Tip Many of the Partnership API calls return a subscription status as part of the XML. For accounts set up through a partnership: An account can have multiple New Relic products associated with it. However, only one subscription per product may be active at any time. For example, a user may have both an Essentials subscription and a higher service level Pro Trial subscription. When the Pro Trial subscription expires, the service level returns to the Essentials subscription. Promotions may appear as a subscription change. Several factors affect starting and stopping subscriptions, including how New Relic handles pricing and billing.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.84526,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>accounts</em>, users, and subscriptions",
        "sections": "<em>Partnerships</em> with <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " these customers &quot;customer <em>partnerships</em>.&quot; Use of our <em>partnership</em> <em>account</em> structure requires prior approval and set up by <em>New</em> <em>Relic</em> representatives. For customer <em>partnerships</em>, <em>New</em> <em>Relic</em> contacts organizations that would benefit from such a structure. <em>Partnerships</em> are identified by a numeric <em>PARTNER</em>"
      },
      "id": "603ece55e7b9d273782a0804"
    },
    {
      "sections": [
        "Partner account access for administrators",
        "Guest level access",
        "Administrative level access"
      ],
      "title": "Partner account access for administrators",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "619eaa0ec75341c74c05afc0b888d2cc46d08767",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-account-access-administrators/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic offers the option for partner administrators to access their customers' accounts, subject to the contractual terms of the partnership agreement. These settings are controlled by a New Relic admin. For permissions for non-partner accounts, see Users and roles. Guest level access Guest level access allows administrators to view application data on their customers' accounts. This is particularly useful for troubleshooting customer issues related to performance. Administrative level access Administrative level access, in addition to viewing application data, allows partner administrators to modify the account and subscription terms, and add or remove users from an account. This access level is required for partners who will remotely administer customer accounts using the API or who enable Restricted access on their accounts.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 203.8549,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>account</em> access for administrators",
        "sections": "<em>Partner</em> <em>account</em> access for administrators",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em> offers the option for <em>partner</em> administrators to access their customers&#x27; accounts, subject to the contractual terms of the <em>partnership</em> agreement. These settings are controlled by a <em>New</em> <em>Relic</em> admin. For permissions for non-<em>partner</em> accounts, see Users and roles. Guest level access Guest"
      },
      "id": "603ec86ee7b9d2756c2a07c7"
    },
    {
      "sections": [
        "Tips and tricks",
        "Account creation and deletion",
        "Partnership owner account"
      ],
      "title": "Tips and tricks",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "ba123e58f5acafea5b65e09350eba65abf430b2e",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/tips-tricks/",
      "published_at": "2021-05-05T18:33:38Z",
      "updated_at": "2021-03-13T03:11:35Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Here are some tips and tricks for creating and deleting New Relic partner accounts. Account creation and deletion When you create an account through the New Relic Partner API, the system checks the string submitted as the account name to ensure it is unique. If it is not unique, the system will append a number to the submitted string to ensure uniqueness; for example, account-name_1. When an account is canceled, it is not deleted from the New Relic database. Rather, it is made inactive by removing all subscriptions from the account. If you attempt to reinstate an account by calling the Account Creation API using the same account name, the system will check for uniqueness, determine that the name is not unique and create a new account with an appended number. This is in most cases not what is desired. To avoid this problem, as part of account creation, store the numeric account_id with the account name. When re-creating an account, check for the existence of this ID. If detected, rather than using the Account Creation API, use the Change Subscription API to add a new subscription to the account. Adding an active subscription to the account will re-activate the account. Partnership owner account The Partnership Owner Account is not part of the partnership. It owns the partnership. Attempts to treat it as if it were in the partnership will fail. This includes but is not limited to: Attempting to SSO into the partnership owner account using the partnership shared secret Expecting the partnership pricing to apply to the partnership owner account",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 202.20831,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Partnership</em> owner <em>account</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Here are some tips and tricks for creating and deleting <em>New</em> <em>Relic</em> <em>partner</em> accounts. <em>Account</em> creation and deletion When you create an <em>account</em> through the <em>New</em> <em>Relic</em> <em>Partner</em> API, the system checks the string submitted as the <em>account</em> name to ensure it is unique. If it is not unique, the system"
      },
      "id": "60441785196a676aed960f46"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partnership-accounts-users-subscriptions": [
    {
      "sections": [
        "Intro to Partnership API",
        "Requirements",
        "Customer partnership restrictions",
        "Password requirements",
        "Things you can do",
        "Get started"
      ],
      "title": "Intro to Partnership API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "074cf4e7c590dfa2332284a7b7f394e2f7ba45ec",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-api/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-29T20:10:08Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our Partnership API allows New Relic partners, and New Relic accounts set up as customer partnerships, to manage accounts, users, and subscription-related settings. Requirements The Partnership API can be used by two types of New Relic accounts: partners (managed service providers, resellers) and customer partnerships (larger customers who have been given access to our partnership account structure). These docs are for version 2 of the Partner API. Earlier versions have been deprecated. If you have problems with an older integration, upgrade to version 2. Access to the partnership account structure and the Partnership API requires prior setup and approval by New Relic. Partnership API calls require authentication with both your partnership owner account's REST API key and your Partner ID. Accounts that are genuine New Relic partners (managed service providers, resellers) have no restrictions on using the API. Accounts set up as customer partnerships have restrictions that follow. Customer partnership restrictions If your New Relic organization is set up as a customer partnership, there are some restrictions in place if your organization is on our newer pricing plan or our newer account/user model. Details: Pricing plan. If you’re on New Relic One pricing, you can't use API calls that govern our original pricing plan. The API impacts are: You can't use the subscription object You can't use the NerdGraph Provisioning API. User model. If your New Relic account has been converted to be entirely on the New Relic One account/user model, you can no longer use API calls that create or govern users on our original user model. The API impacts are: You can't use the user object. Instead, you'd manage users with these user management docs. For the account object: you can't add users via the users field. Instead, you'd manage users with these user management docs. To determine your pricing plan or account/user model, see Overview of pricing and user model changes. Password requirements Passwords passed for account creation have these requirements: 8 to 50 characters in length Only contain letters, numbers, or special characters Cannot contain spaces Must contain at least 1 letter Must contain at least 1 number or special character Things you can do Here is an overview of the API's functionality. Account: The account object is what you use to create and update accounts. You can do the following with it: Create new Show Update Cancel Show usage Set primary admin (some accounts) Set subscription (some accounts) There is also a sub-account object for creating sub-accounts. Users: Some organizations that meet the requirements can use the user object to: Add user access to account Remove user access from account Subscription: Organizations that meet the requirements and are on our original product pricing plan can use the subscription object to configure various subscription-related traits. Get started To start using the Partnership API, see the Partner API reference docs.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.98654,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Intro to <em>Partnership</em> API",
        "sections": "Intro to <em>Partnership</em> API",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": ") and customer <em>partnerships</em> (larger customers who have been given access to our <em>partnership</em> <em>account</em> structure). These docs are for version 2 of the <em>Partner</em> API. Earlier versions have been deprecated. If you have problems with an older <em>integration</em>, upgrade to version 2. Access to the <em>partnership</em> <em>account</em>"
      },
      "id": "603ed42328ccbcd4b3eba7ca"
    },
    {
      "sections": [
        "Partner account access for administrators",
        "Guest level access",
        "Administrative level access"
      ],
      "title": "Partner account access for administrators",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "619eaa0ec75341c74c05afc0b888d2cc46d08767",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-account-access-administrators/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic offers the option for partner administrators to access their customers' accounts, subject to the contractual terms of the partnership agreement. These settings are controlled by a New Relic admin. For permissions for non-partner accounts, see Users and roles. Guest level access Guest level access allows administrators to view application data on their customers' accounts. This is particularly useful for troubleshooting customer issues related to performance. Administrative level access Administrative level access, in addition to viewing application data, allows partner administrators to modify the account and subscription terms, and add or remove users from an account. This access level is required for partners who will remotely administer customer accounts using the API or who enable Restricted access on their accounts.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 203.85489,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>account</em> access for administrators",
        "sections": "<em>Partner</em> <em>account</em> access for administrators",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em> offers the option for <em>partner</em> administrators to access their customers&#x27; accounts, subject to the contractual terms of the <em>partnership</em> agreement. These settings are controlled by a <em>New</em> <em>Relic</em> admin. For permissions for non-<em>partner</em> accounts, see Users and roles. Guest level access Guest"
      },
      "id": "603ec86ee7b9d2756c2a07c7"
    },
    {
      "sections": [
        "Tips and tricks",
        "Account creation and deletion",
        "Partnership owner account"
      ],
      "title": "Tips and tricks",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "ba123e58f5acafea5b65e09350eba65abf430b2e",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/tips-tricks/",
      "published_at": "2021-05-05T18:33:38Z",
      "updated_at": "2021-03-13T03:11:35Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Here are some tips and tricks for creating and deleting New Relic partner accounts. Account creation and deletion When you create an account through the New Relic Partner API, the system checks the string submitted as the account name to ensure it is unique. If it is not unique, the system will append a number to the submitted string to ensure uniqueness; for example, account-name_1. When an account is canceled, it is not deleted from the New Relic database. Rather, it is made inactive by removing all subscriptions from the account. If you attempt to reinstate an account by calling the Account Creation API using the same account name, the system will check for uniqueness, determine that the name is not unique and create a new account with an appended number. This is in most cases not what is desired. To avoid this problem, as part of account creation, store the numeric account_id with the account name. When re-creating an account, check for the existence of this ID. If detected, rather than using the Account Creation API, use the Change Subscription API to add a new subscription to the account. Adding an active subscription to the account will re-activate the account. Partnership owner account The Partnership Owner Account is not part of the partnership. It owns the partnership. Attempts to treat it as if it were in the partnership will fail. This includes but is not limited to: Attempting to SSO into the partnership owner account using the partnership shared secret Expecting the partnership pricing to apply to the partnership owner account",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 202.20831,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Partnership</em> owner <em>account</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Here are some tips and tricks for creating and deleting <em>New</em> <em>Relic</em> <em>partner</em> accounts. <em>Account</em> creation and deletion When you create an <em>account</em> through the <em>New</em> <em>Relic</em> <em>Partner</em> API, the system checks the string submitted as the <em>account</em> name to ensure it is unique. If it is not unique, the system"
      },
      "id": "60441785196a676aed960f46"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/restricted-access-partnerships": [
    {
      "sections": [
        "Intro to Partnership API",
        "Requirements",
        "Customer partnership restrictions",
        "Password requirements",
        "Things you can do",
        "Get started"
      ],
      "title": "Intro to Partnership API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "074cf4e7c590dfa2332284a7b7f394e2f7ba45ec",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-api/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-29T20:10:08Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our Partnership API allows New Relic partners, and New Relic accounts set up as customer partnerships, to manage accounts, users, and subscription-related settings. Requirements The Partnership API can be used by two types of New Relic accounts: partners (managed service providers, resellers) and customer partnerships (larger customers who have been given access to our partnership account structure). These docs are for version 2 of the Partner API. Earlier versions have been deprecated. If you have problems with an older integration, upgrade to version 2. Access to the partnership account structure and the Partnership API requires prior setup and approval by New Relic. Partnership API calls require authentication with both your partnership owner account's REST API key and your Partner ID. Accounts that are genuine New Relic partners (managed service providers, resellers) have no restrictions on using the API. Accounts set up as customer partnerships have restrictions that follow. Customer partnership restrictions If your New Relic organization is set up as a customer partnership, there are some restrictions in place if your organization is on our newer pricing plan or our newer account/user model. Details: Pricing plan. If you’re on New Relic One pricing, you can't use API calls that govern our original pricing plan. The API impacts are: You can't use the subscription object You can't use the NerdGraph Provisioning API. User model. If your New Relic account has been converted to be entirely on the New Relic One account/user model, you can no longer use API calls that create or govern users on our original user model. The API impacts are: You can't use the user object. Instead, you'd manage users with these user management docs. For the account object: you can't add users via the users field. Instead, you'd manage users with these user management docs. To determine your pricing plan or account/user model, see Overview of pricing and user model changes. Password requirements Passwords passed for account creation have these requirements: 8 to 50 characters in length Only contain letters, numbers, or special characters Cannot contain spaces Must contain at least 1 letter Must contain at least 1 number or special character Things you can do Here is an overview of the API's functionality. Account: The account object is what you use to create and update accounts. You can do the following with it: Create new Show Update Cancel Show usage Set primary admin (some accounts) Set subscription (some accounts) There is also a sub-account object for creating sub-accounts. Users: Some organizations that meet the requirements can use the user object to: Add user access to account Remove user access from account Subscription: Organizations that meet the requirements and are on our original product pricing plan can use the subscription object to configure various subscription-related traits. Get started To start using the Partnership API, see the Partner API reference docs.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.98654,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Intro to <em>Partnership</em> API",
        "sections": "Intro to <em>Partnership</em> API",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": ") and customer <em>partnerships</em> (larger customers who have been given access to our <em>partnership</em> <em>account</em> structure). These docs are for version 2 of the <em>Partner</em> API. Earlier versions have been deprecated. If you have problems with an older <em>integration</em>, upgrade to version 2. Access to the <em>partnership</em> <em>account</em>"
      },
      "id": "603ed42328ccbcd4b3eba7ca"
    },
    {
      "sections": [
        "Partnership accounts, users, and subscriptions",
        "Partnerships with New Relic",
        "Account hierarchy",
        "Tip",
        "Partnership owner accounts (POA)",
        "Sub-accounts with partnerships",
        "Account users",
        "Partnership pricing"
      ],
      "title": "Partnership accounts, users, and subscriptions",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "ae2f39a8ff0395815b3e31a9d8ad9361beca2c4e",
      "image": "https://docs.newrelic.com/static/acecf0ec89c448506faef0e4eeff87e6/db3a5/partnership-hierarchy.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partnership-accounts-users-subscriptions/",
      "published_at": "2021-05-05T04:04:48Z",
      "updated_at": "2021-03-29T16:17:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic organizations set up as partnership accounts have access to an enhanced hierarchical way of organizing their account structure. Partnerships with New Relic There are two types of New Relic organizations that are able to use our partnership account structure and the Partnership API: An actual partnership: A partnership refers to managed service providers or resellers, who offer New Relic products to their customers. Heroku is one example of such a New Relic partner. A customer partnership: some of our larger organizations also make use of our partnership account structure. We call these customers \"customer partnerships.\" Use of our partnership account structure requires prior approval and set up by New Relic representatives. For customer partnerships, New Relic contacts organizations that would benefit from such a structure. Partnerships are identified by a numeric PARTNER_ID. In some cases, a New Relic customer may have more than one partnership; for example, when one section of New Relic users must be managed differently from another. Partnerships are administered by a partnership owner account. The account that owns a partnership functions differently from a regular account. If multiple partnerships have been set up, each has a unique PARTNER_ID. Account hierarchy New Relic partnership organizations consist of the partnership owning account, partnerships, master accounts, and sub-accounts. A partnership can have multiple master accounts and sub-accounts. To understand how sub-accounts and master accounts scale with EU region accounts, see EU region account hierarchy. Tip If you do not have a partnership organization, you can only have one master account. For more information, see Manage apps or users with sub-accounts. All master accounts and sub-accounts roll up to your partnership account. Partnership owner accounts (POA) The partnership owner account (POA) is the entity that is used to administer a partnership. It controls which users manage accounts under partnerships, have access to the partner API, and manage other aspects of the partnership. Do not monitor your own applications from the partnership owner account. Instead, create an account within the partnership and monitor apps from that account. Users on the partnership owner account can access accounts under their partnerships and enjoy User level privileges. Admins on the POA can access accounts under their partnerships and enjoy Admin level privileges, including permission to manage users. The Owner of the partnership owner account will still only have Admin level access on accounts under the partnership. That means that the owner cannot enable SAML SSO, change the account owner, cancel the account via the UI, etc. The partnership owner account enjoys special privileges, and it lets you exercise the capabilities defined in your partnership agreement with New Relic. For example, you may use your partnership owner account with the New Relic Partnership API to set up and manage users on your accounts or to view your customers' performance data in the New Relic UI. Tip Many of the Partnership API calls return an account status as part of the XML. Sub-accounts with partnerships Sub-accounts behave differently than other New Relic accounts provisioned through your partnership: Sub-accounts Comments Account creation Sub-accounts can be created through the Partnership API or New Relic user interface. In order to group accounts through the New Relic user interface, your partnership must have Admin privileges, and the account must have the appropriate subscription level. If you have any questions about partnership privileges or subscription levels, contact your New Relic account representative. Sub-accounts do not have a New Relic subscription of their own. They inherit the master account's subscription. Billing Billing is applied at the master account level. Exception: Reseller partnerships receive consolidated billing for all accounts under the partnership. Permissions Admin-level users on a master account have the ability to create, modify, and delete sub-accounts for the master account. Users that have been granted access permissions on a master account automatically inherit the same level of access for all sub-accounts. This is also true for add-on roles. Exception: Sub-account users will not receive alert emails or weekly report emails unless they are explicitly granted permission on these sub-accounts. Account users You can use the Partnership user API to add and maintain your customer users. An account must always have at least one person (the Owner) associated with it. For security purposes, you cannot change an account Owner with the Partnership user API. Instead, you must change the account Owner from the Users page in the New Relic UI. In addition, a specific user may be associated with multiple accounts. For example, many New Relic users have accounts through a partnership, and they also have accounts they created directly with New Relic. Partnership pricing Accounts within a partnership organization may have different levels of access to New Relic products. Tip Many of the Partnership API calls return a subscription status as part of the XML. For accounts set up through a partnership: An account can have multiple New Relic products associated with it. However, only one subscription per product may be active at any time. For example, a user may have both an Essentials subscription and a higher service level Pro Trial subscription. When the Pro Trial subscription expires, the service level returns to the Essentials subscription. Promotions may appear as a subscription change. Several factors affect starting and stopping subscriptions, including how New Relic handles pricing and billing.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.84525,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>accounts</em>, users, and subscriptions",
        "sections": "<em>Partnerships</em> with <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " these customers &quot;customer <em>partnerships</em>.&quot; Use of our <em>partnership</em> <em>account</em> structure requires prior approval and set up by <em>New</em> <em>Relic</em> representatives. For customer <em>partnerships</em>, <em>New</em> <em>Relic</em> contacts organizations that would benefit from such a structure. <em>Partnerships</em> are identified by a numeric <em>PARTNER</em>"
      },
      "id": "603ece55e7b9d273782a0804"
    },
    {
      "sections": [
        "Partner account access for administrators",
        "Guest level access",
        "Administrative level access"
      ],
      "title": "Partner account access for administrators",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "619eaa0ec75341c74c05afc0b888d2cc46d08767",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-account-access-administrators/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic offers the option for partner administrators to access their customers' accounts, subject to the contractual terms of the partnership agreement. These settings are controlled by a New Relic admin. For permissions for non-partner accounts, see Users and roles. Guest level access Guest level access allows administrators to view application data on their customers' accounts. This is particularly useful for troubleshooting customer issues related to performance. Administrative level access Administrative level access, in addition to viewing application data, allows partner administrators to modify the account and subscription terms, and add or remove users from an account. This access level is required for partners who will remotely administer customer accounts using the API or who enable Restricted access on their accounts.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 203.85489,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>account</em> access for administrators",
        "sections": "<em>Partner</em> <em>account</em> access for administrators",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em> offers the option for <em>partner</em> administrators to access their customers&#x27; accounts, subject to the contractual terms of the <em>partnership</em> agreement. These settings are controlled by a <em>New</em> <em>Relic</em> admin. For permissions for non-<em>partner</em> accounts, see Users and roles. Guest level access Guest"
      },
      "id": "603ec86ee7b9d2756c2a07c7"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/staging-production": [
    {
      "sections": [
        "Intro to Partnership API",
        "Requirements",
        "Customer partnership restrictions",
        "Password requirements",
        "Things you can do",
        "Get started"
      ],
      "title": "Intro to Partnership API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "074cf4e7c590dfa2332284a7b7f394e2f7ba45ec",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-api/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-29T20:10:08Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our Partnership API allows New Relic partners, and New Relic accounts set up as customer partnerships, to manage accounts, users, and subscription-related settings. Requirements The Partnership API can be used by two types of New Relic accounts: partners (managed service providers, resellers) and customer partnerships (larger customers who have been given access to our partnership account structure). These docs are for version 2 of the Partner API. Earlier versions have been deprecated. If you have problems with an older integration, upgrade to version 2. Access to the partnership account structure and the Partnership API requires prior setup and approval by New Relic. Partnership API calls require authentication with both your partnership owner account's REST API key and your Partner ID. Accounts that are genuine New Relic partners (managed service providers, resellers) have no restrictions on using the API. Accounts set up as customer partnerships have restrictions that follow. Customer partnership restrictions If your New Relic organization is set up as a customer partnership, there are some restrictions in place if your organization is on our newer pricing plan or our newer account/user model. Details: Pricing plan. If you’re on New Relic One pricing, you can't use API calls that govern our original pricing plan. The API impacts are: You can't use the subscription object You can't use the NerdGraph Provisioning API. User model. If your New Relic account has been converted to be entirely on the New Relic One account/user model, you can no longer use API calls that create or govern users on our original user model. The API impacts are: You can't use the user object. Instead, you'd manage users with these user management docs. For the account object: you can't add users via the users field. Instead, you'd manage users with these user management docs. To determine your pricing plan or account/user model, see Overview of pricing and user model changes. Password requirements Passwords passed for account creation have these requirements: 8 to 50 characters in length Only contain letters, numbers, or special characters Cannot contain spaces Must contain at least 1 letter Must contain at least 1 number or special character Things you can do Here is an overview of the API's functionality. Account: The account object is what you use to create and update accounts. You can do the following with it: Create new Show Update Cancel Show usage Set primary admin (some accounts) Set subscription (some accounts) There is also a sub-account object for creating sub-accounts. Users: Some organizations that meet the requirements can use the user object to: Add user access to account Remove user access from account Subscription: Organizations that meet the requirements and are on our original product pricing plan can use the subscription object to configure various subscription-related traits. Get started To start using the Partnership API, see the Partner API reference docs.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.98654,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Intro to <em>Partnership</em> API",
        "sections": "Intro to <em>Partnership</em> API",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": ") and customer <em>partnerships</em> (larger customers who have been given access to our <em>partnership</em> <em>account</em> structure). These docs are for version 2 of the <em>Partner</em> API. Earlier versions have been deprecated. If you have problems with an older <em>integration</em>, upgrade to version 2. Access to the <em>partnership</em> <em>account</em>"
      },
      "id": "603ed42328ccbcd4b3eba7ca"
    },
    {
      "sections": [
        "Partnership accounts, users, and subscriptions",
        "Partnerships with New Relic",
        "Account hierarchy",
        "Tip",
        "Partnership owner accounts (POA)",
        "Sub-accounts with partnerships",
        "Account users",
        "Partnership pricing"
      ],
      "title": "Partnership accounts, users, and subscriptions",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "ae2f39a8ff0395815b3e31a9d8ad9361beca2c4e",
      "image": "https://docs.newrelic.com/static/acecf0ec89c448506faef0e4eeff87e6/db3a5/partnership-hierarchy.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partnership-accounts-users-subscriptions/",
      "published_at": "2021-05-05T04:04:48Z",
      "updated_at": "2021-03-29T16:17:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic organizations set up as partnership accounts have access to an enhanced hierarchical way of organizing their account structure. Partnerships with New Relic There are two types of New Relic organizations that are able to use our partnership account structure and the Partnership API: An actual partnership: A partnership refers to managed service providers or resellers, who offer New Relic products to their customers. Heroku is one example of such a New Relic partner. A customer partnership: some of our larger organizations also make use of our partnership account structure. We call these customers \"customer partnerships.\" Use of our partnership account structure requires prior approval and set up by New Relic representatives. For customer partnerships, New Relic contacts organizations that would benefit from such a structure. Partnerships are identified by a numeric PARTNER_ID. In some cases, a New Relic customer may have more than one partnership; for example, when one section of New Relic users must be managed differently from another. Partnerships are administered by a partnership owner account. The account that owns a partnership functions differently from a regular account. If multiple partnerships have been set up, each has a unique PARTNER_ID. Account hierarchy New Relic partnership organizations consist of the partnership owning account, partnerships, master accounts, and sub-accounts. A partnership can have multiple master accounts and sub-accounts. To understand how sub-accounts and master accounts scale with EU region accounts, see EU region account hierarchy. Tip If you do not have a partnership organization, you can only have one master account. For more information, see Manage apps or users with sub-accounts. All master accounts and sub-accounts roll up to your partnership account. Partnership owner accounts (POA) The partnership owner account (POA) is the entity that is used to administer a partnership. It controls which users manage accounts under partnerships, have access to the partner API, and manage other aspects of the partnership. Do not monitor your own applications from the partnership owner account. Instead, create an account within the partnership and monitor apps from that account. Users on the partnership owner account can access accounts under their partnerships and enjoy User level privileges. Admins on the POA can access accounts under their partnerships and enjoy Admin level privileges, including permission to manage users. The Owner of the partnership owner account will still only have Admin level access on accounts under the partnership. That means that the owner cannot enable SAML SSO, change the account owner, cancel the account via the UI, etc. The partnership owner account enjoys special privileges, and it lets you exercise the capabilities defined in your partnership agreement with New Relic. For example, you may use your partnership owner account with the New Relic Partnership API to set up and manage users on your accounts or to view your customers' performance data in the New Relic UI. Tip Many of the Partnership API calls return an account status as part of the XML. Sub-accounts with partnerships Sub-accounts behave differently than other New Relic accounts provisioned through your partnership: Sub-accounts Comments Account creation Sub-accounts can be created through the Partnership API or New Relic user interface. In order to group accounts through the New Relic user interface, your partnership must have Admin privileges, and the account must have the appropriate subscription level. If you have any questions about partnership privileges or subscription levels, contact your New Relic account representative. Sub-accounts do not have a New Relic subscription of their own. They inherit the master account's subscription. Billing Billing is applied at the master account level. Exception: Reseller partnerships receive consolidated billing for all accounts under the partnership. Permissions Admin-level users on a master account have the ability to create, modify, and delete sub-accounts for the master account. Users that have been granted access permissions on a master account automatically inherit the same level of access for all sub-accounts. This is also true for add-on roles. Exception: Sub-account users will not receive alert emails or weekly report emails unless they are explicitly granted permission on these sub-accounts. Account users You can use the Partnership user API to add and maintain your customer users. An account must always have at least one person (the Owner) associated with it. For security purposes, you cannot change an account Owner with the Partnership user API. Instead, you must change the account Owner from the Users page in the New Relic UI. In addition, a specific user may be associated with multiple accounts. For example, many New Relic users have accounts through a partnership, and they also have accounts they created directly with New Relic. Partnership pricing Accounts within a partnership organization may have different levels of access to New Relic products. Tip Many of the Partnership API calls return a subscription status as part of the XML. For accounts set up through a partnership: An account can have multiple New Relic products associated with it. However, only one subscription per product may be active at any time. For example, a user may have both an Essentials subscription and a higher service level Pro Trial subscription. When the Pro Trial subscription expires, the service level returns to the Essentials subscription. Promotions may appear as a subscription change. Several factors affect starting and stopping subscriptions, including how New Relic handles pricing and billing.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.84525,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>accounts</em>, users, and subscriptions",
        "sections": "<em>Partnerships</em> with <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " these customers &quot;customer <em>partnerships</em>.&quot; Use of our <em>partnership</em> <em>account</em> structure requires prior approval and set up by <em>New</em> <em>Relic</em> representatives. For customer <em>partnerships</em>, <em>New</em> <em>Relic</em> contacts organizations that would benefit from such a structure. <em>Partnerships</em> are identified by a numeric <em>PARTNER</em>"
      },
      "id": "603ece55e7b9d273782a0804"
    },
    {
      "sections": [
        "Partner account access for administrators",
        "Guest level access",
        "Administrative level access"
      ],
      "title": "Partner account access for administrators",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "619eaa0ec75341c74c05afc0b888d2cc46d08767",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-account-access-administrators/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic offers the option for partner administrators to access their customers' accounts, subject to the contractual terms of the partnership agreement. These settings are controlled by a New Relic admin. For permissions for non-partner accounts, see Users and roles. Guest level access Guest level access allows administrators to view application data on their customers' accounts. This is particularly useful for troubleshooting customer issues related to performance. Administrative level access Administrative level access, in addition to viewing application data, allows partner administrators to modify the account and subscription terms, and add or remove users from an account. This access level is required for partners who will remotely administer customer accounts using the API or who enable Restricted access on their accounts.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 203.85489,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>account</em> access for administrators",
        "sections": "<em>Partner</em> <em>account</em> access for administrators",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em> offers the option for <em>partner</em> administrators to access their customers&#x27; accounts, subject to the contractual terms of the <em>partnership</em> agreement. These settings are controlled by a <em>New</em> <em>Relic</em> admin. For permissions for non-<em>partner</em> accounts, see Users and roles. Guest level access Guest"
      },
      "id": "603ec86ee7b9d2756c2a07c7"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/tips-tricks": [
    {
      "sections": [
        "Intro to Partnership API",
        "Requirements",
        "Customer partnership restrictions",
        "Password requirements",
        "Things you can do",
        "Get started"
      ],
      "title": "Intro to Partnership API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "074cf4e7c590dfa2332284a7b7f394e2f7ba45ec",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-api/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-29T20:10:08Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our Partnership API allows New Relic partners, and New Relic accounts set up as customer partnerships, to manage accounts, users, and subscription-related settings. Requirements The Partnership API can be used by two types of New Relic accounts: partners (managed service providers, resellers) and customer partnerships (larger customers who have been given access to our partnership account structure). These docs are for version 2 of the Partner API. Earlier versions have been deprecated. If you have problems with an older integration, upgrade to version 2. Access to the partnership account structure and the Partnership API requires prior setup and approval by New Relic. Partnership API calls require authentication with both your partnership owner account's REST API key and your Partner ID. Accounts that are genuine New Relic partners (managed service providers, resellers) have no restrictions on using the API. Accounts set up as customer partnerships have restrictions that follow. Customer partnership restrictions If your New Relic organization is set up as a customer partnership, there are some restrictions in place if your organization is on our newer pricing plan or our newer account/user model. Details: Pricing plan. If you’re on New Relic One pricing, you can't use API calls that govern our original pricing plan. The API impacts are: You can't use the subscription object You can't use the NerdGraph Provisioning API. User model. If your New Relic account has been converted to be entirely on the New Relic One account/user model, you can no longer use API calls that create or govern users on our original user model. The API impacts are: You can't use the user object. Instead, you'd manage users with these user management docs. For the account object: you can't add users via the users field. Instead, you'd manage users with these user management docs. To determine your pricing plan or account/user model, see Overview of pricing and user model changes. Password requirements Passwords passed for account creation have these requirements: 8 to 50 characters in length Only contain letters, numbers, or special characters Cannot contain spaces Must contain at least 1 letter Must contain at least 1 number or special character Things you can do Here is an overview of the API's functionality. Account: The account object is what you use to create and update accounts. You can do the following with it: Create new Show Update Cancel Show usage Set primary admin (some accounts) Set subscription (some accounts) There is also a sub-account object for creating sub-accounts. Users: Some organizations that meet the requirements can use the user object to: Add user access to account Remove user access from account Subscription: Organizations that meet the requirements and are on our original product pricing plan can use the subscription object to configure various subscription-related traits. Get started To start using the Partnership API, see the Partner API reference docs.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.98654,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Intro to <em>Partnership</em> API",
        "sections": "Intro to <em>Partnership</em> API",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": ") and customer <em>partnerships</em> (larger customers who have been given access to our <em>partnership</em> <em>account</em> structure). These docs are for version 2 of the <em>Partner</em> API. Earlier versions have been deprecated. If you have problems with an older <em>integration</em>, upgrade to version 2. Access to the <em>partnership</em> <em>account</em>"
      },
      "id": "603ed42328ccbcd4b3eba7ca"
    },
    {
      "sections": [
        "Partnership accounts, users, and subscriptions",
        "Partnerships with New Relic",
        "Account hierarchy",
        "Tip",
        "Partnership owner accounts (POA)",
        "Sub-accounts with partnerships",
        "Account users",
        "Partnership pricing"
      ],
      "title": "Partnership accounts, users, and subscriptions",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "ae2f39a8ff0395815b3e31a9d8ad9361beca2c4e",
      "image": "https://docs.newrelic.com/static/acecf0ec89c448506faef0e4eeff87e6/db3a5/partnership-hierarchy.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partnership-accounts-users-subscriptions/",
      "published_at": "2021-05-05T04:04:48Z",
      "updated_at": "2021-03-29T16:17:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic organizations set up as partnership accounts have access to an enhanced hierarchical way of organizing their account structure. Partnerships with New Relic There are two types of New Relic organizations that are able to use our partnership account structure and the Partnership API: An actual partnership: A partnership refers to managed service providers or resellers, who offer New Relic products to their customers. Heroku is one example of such a New Relic partner. A customer partnership: some of our larger organizations also make use of our partnership account structure. We call these customers \"customer partnerships.\" Use of our partnership account structure requires prior approval and set up by New Relic representatives. For customer partnerships, New Relic contacts organizations that would benefit from such a structure. Partnerships are identified by a numeric PARTNER_ID. In some cases, a New Relic customer may have more than one partnership; for example, when one section of New Relic users must be managed differently from another. Partnerships are administered by a partnership owner account. The account that owns a partnership functions differently from a regular account. If multiple partnerships have been set up, each has a unique PARTNER_ID. Account hierarchy New Relic partnership organizations consist of the partnership owning account, partnerships, master accounts, and sub-accounts. A partnership can have multiple master accounts and sub-accounts. To understand how sub-accounts and master accounts scale with EU region accounts, see EU region account hierarchy. Tip If you do not have a partnership organization, you can only have one master account. For more information, see Manage apps or users with sub-accounts. All master accounts and sub-accounts roll up to your partnership account. Partnership owner accounts (POA) The partnership owner account (POA) is the entity that is used to administer a partnership. It controls which users manage accounts under partnerships, have access to the partner API, and manage other aspects of the partnership. Do not monitor your own applications from the partnership owner account. Instead, create an account within the partnership and monitor apps from that account. Users on the partnership owner account can access accounts under their partnerships and enjoy User level privileges. Admins on the POA can access accounts under their partnerships and enjoy Admin level privileges, including permission to manage users. The Owner of the partnership owner account will still only have Admin level access on accounts under the partnership. That means that the owner cannot enable SAML SSO, change the account owner, cancel the account via the UI, etc. The partnership owner account enjoys special privileges, and it lets you exercise the capabilities defined in your partnership agreement with New Relic. For example, you may use your partnership owner account with the New Relic Partnership API to set up and manage users on your accounts or to view your customers' performance data in the New Relic UI. Tip Many of the Partnership API calls return an account status as part of the XML. Sub-accounts with partnerships Sub-accounts behave differently than other New Relic accounts provisioned through your partnership: Sub-accounts Comments Account creation Sub-accounts can be created through the Partnership API or New Relic user interface. In order to group accounts through the New Relic user interface, your partnership must have Admin privileges, and the account must have the appropriate subscription level. If you have any questions about partnership privileges or subscription levels, contact your New Relic account representative. Sub-accounts do not have a New Relic subscription of their own. They inherit the master account's subscription. Billing Billing is applied at the master account level. Exception: Reseller partnerships receive consolidated billing for all accounts under the partnership. Permissions Admin-level users on a master account have the ability to create, modify, and delete sub-accounts for the master account. Users that have been granted access permissions on a master account automatically inherit the same level of access for all sub-accounts. This is also true for add-on roles. Exception: Sub-account users will not receive alert emails or weekly report emails unless they are explicitly granted permission on these sub-accounts. Account users You can use the Partnership user API to add and maintain your customer users. An account must always have at least one person (the Owner) associated with it. For security purposes, you cannot change an account Owner with the Partnership user API. Instead, you must change the account Owner from the Users page in the New Relic UI. In addition, a specific user may be associated with multiple accounts. For example, many New Relic users have accounts through a partnership, and they also have accounts they created directly with New Relic. Partnership pricing Accounts within a partnership organization may have different levels of access to New Relic products. Tip Many of the Partnership API calls return a subscription status as part of the XML. For accounts set up through a partnership: An account can have multiple New Relic products associated with it. However, only one subscription per product may be active at any time. For example, a user may have both an Essentials subscription and a higher service level Pro Trial subscription. When the Pro Trial subscription expires, the service level returns to the Essentials subscription. Promotions may appear as a subscription change. Several factors affect starting and stopping subscriptions, including how New Relic handles pricing and billing.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.84525,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>accounts</em>, users, and subscriptions",
        "sections": "<em>Partnerships</em> with <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " these customers &quot;customer <em>partnerships</em>.&quot; Use of our <em>partnership</em> <em>account</em> structure requires prior approval and set up by <em>New</em> <em>Relic</em> representatives. For customer <em>partnerships</em>, <em>New</em> <em>Relic</em> contacts organizations that would benefit from such a structure. <em>Partnerships</em> are identified by a numeric <em>PARTNER</em>"
      },
      "id": "603ece55e7b9d273782a0804"
    },
    {
      "sections": [
        "Partner account access for administrators",
        "Guest level access",
        "Administrative level access"
      ],
      "title": "Partner account access for administrators",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "619eaa0ec75341c74c05afc0b888d2cc46d08767",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-account-access-administrators/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic offers the option for partner administrators to access their customers' accounts, subject to the contractual terms of the partnership agreement. These settings are controlled by a New Relic admin. For permissions for non-partner accounts, see Users and roles. Guest level access Guest level access allows administrators to view application data on their customers' accounts. This is particularly useful for troubleshooting customer issues related to performance. Administrative level access Administrative level access, in addition to viewing application data, allows partner administrators to modify the account and subscription terms, and add or remove users from an account. This access level is required for partners who will remotely administer customer accounts using the API or who enable Restricted access on their accounts.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 203.85489,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>account</em> access for administrators",
        "sections": "<em>Partner</em> <em>account</em> access for administrators",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em> offers the option for <em>partner</em> administrators to access their customers&#x27; accounts, subject to the contractual terms of the <em>partnership</em> agreement. These settings are controlled by a <em>New</em> <em>Relic</em> admin. For permissions for non-<em>partner</em> accounts, see Users and roles. Guest level access Guest"
      },
      "id": "603ec86ee7b9d2756c2a07c7"
    }
  ],
  "/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/welcome-messages-partnerships": [
    {
      "sections": [
        "Intro to Partnership API",
        "Requirements",
        "Customer partnership restrictions",
        "Password requirements",
        "Things you can do",
        "Get started"
      ],
      "title": "Intro to Partnership API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "074cf4e7c590dfa2332284a7b7f394e2f7ba45ec",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-api/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-29T20:10:08Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Our Partnership API allows New Relic partners, and New Relic accounts set up as customer partnerships, to manage accounts, users, and subscription-related settings. Requirements The Partnership API can be used by two types of New Relic accounts: partners (managed service providers, resellers) and customer partnerships (larger customers who have been given access to our partnership account structure). These docs are for version 2 of the Partner API. Earlier versions have been deprecated. If you have problems with an older integration, upgrade to version 2. Access to the partnership account structure and the Partnership API requires prior setup and approval by New Relic. Partnership API calls require authentication with both your partnership owner account's REST API key and your Partner ID. Accounts that are genuine New Relic partners (managed service providers, resellers) have no restrictions on using the API. Accounts set up as customer partnerships have restrictions that follow. Customer partnership restrictions If your New Relic organization is set up as a customer partnership, there are some restrictions in place if your organization is on our newer pricing plan or our newer account/user model. Details: Pricing plan. If you’re on New Relic One pricing, you can't use API calls that govern our original pricing plan. The API impacts are: You can't use the subscription object You can't use the NerdGraph Provisioning API. User model. If your New Relic account has been converted to be entirely on the New Relic One account/user model, you can no longer use API calls that create or govern users on our original user model. The API impacts are: You can't use the user object. Instead, you'd manage users with these user management docs. For the account object: you can't add users via the users field. Instead, you'd manage users with these user management docs. To determine your pricing plan or account/user model, see Overview of pricing and user model changes. Password requirements Passwords passed for account creation have these requirements: 8 to 50 characters in length Only contain letters, numbers, or special characters Cannot contain spaces Must contain at least 1 letter Must contain at least 1 number or special character Things you can do Here is an overview of the API's functionality. Account: The account object is what you use to create and update accounts. You can do the following with it: Create new Show Update Cancel Show usage Set primary admin (some accounts) Set subscription (some accounts) There is also a sub-account object for creating sub-accounts. Users: Some organizations that meet the requirements can use the user object to: Add user access to account Remove user access from account Subscription: Organizations that meet the requirements and are on our original product pricing plan can use the subscription object to configure various subscription-related traits. Get started To start using the Partnership API, see the Partner API reference docs.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.98653,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Intro to <em>Partnership</em> API",
        "sections": "Intro to <em>Partnership</em> API",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": ") and customer <em>partnerships</em> (larger customers who have been given access to our <em>partnership</em> <em>account</em> structure). These docs are for version 2 of the <em>Partner</em> API. Earlier versions have been deprecated. If you have problems with an older <em>integration</em>, upgrade to version 2. Access to the <em>partnership</em> <em>account</em>"
      },
      "id": "603ed42328ccbcd4b3eba7ca"
    },
    {
      "sections": [
        "Partnership accounts, users, and subscriptions",
        "Partnerships with New Relic",
        "Account hierarchy",
        "Tip",
        "Partnership owner accounts (POA)",
        "Sub-accounts with partnerships",
        "Account users",
        "Partnership pricing"
      ],
      "title": "Partnership accounts, users, and subscriptions",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "ae2f39a8ff0395815b3e31a9d8ad9361beca2c4e",
      "image": "https://docs.newrelic.com/static/acecf0ec89c448506faef0e4eeff87e6/db3a5/partnership-hierarchy.png",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partnership-accounts-users-subscriptions/",
      "published_at": "2021-05-05T04:04:48Z",
      "updated_at": "2021-03-29T16:17:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic organizations set up as partnership accounts have access to an enhanced hierarchical way of organizing their account structure. Partnerships with New Relic There are two types of New Relic organizations that are able to use our partnership account structure and the Partnership API: An actual partnership: A partnership refers to managed service providers or resellers, who offer New Relic products to their customers. Heroku is one example of such a New Relic partner. A customer partnership: some of our larger organizations also make use of our partnership account structure. We call these customers \"customer partnerships.\" Use of our partnership account structure requires prior approval and set up by New Relic representatives. For customer partnerships, New Relic contacts organizations that would benefit from such a structure. Partnerships are identified by a numeric PARTNER_ID. In some cases, a New Relic customer may have more than one partnership; for example, when one section of New Relic users must be managed differently from another. Partnerships are administered by a partnership owner account. The account that owns a partnership functions differently from a regular account. If multiple partnerships have been set up, each has a unique PARTNER_ID. Account hierarchy New Relic partnership organizations consist of the partnership owning account, partnerships, master accounts, and sub-accounts. A partnership can have multiple master accounts and sub-accounts. To understand how sub-accounts and master accounts scale with EU region accounts, see EU region account hierarchy. Tip If you do not have a partnership organization, you can only have one master account. For more information, see Manage apps or users with sub-accounts. All master accounts and sub-accounts roll up to your partnership account. Partnership owner accounts (POA) The partnership owner account (POA) is the entity that is used to administer a partnership. It controls which users manage accounts under partnerships, have access to the partner API, and manage other aspects of the partnership. Do not monitor your own applications from the partnership owner account. Instead, create an account within the partnership and monitor apps from that account. Users on the partnership owner account can access accounts under their partnerships and enjoy User level privileges. Admins on the POA can access accounts under their partnerships and enjoy Admin level privileges, including permission to manage users. The Owner of the partnership owner account will still only have Admin level access on accounts under the partnership. That means that the owner cannot enable SAML SSO, change the account owner, cancel the account via the UI, etc. The partnership owner account enjoys special privileges, and it lets you exercise the capabilities defined in your partnership agreement with New Relic. For example, you may use your partnership owner account with the New Relic Partnership API to set up and manage users on your accounts or to view your customers' performance data in the New Relic UI. Tip Many of the Partnership API calls return an account status as part of the XML. Sub-accounts with partnerships Sub-accounts behave differently than other New Relic accounts provisioned through your partnership: Sub-accounts Comments Account creation Sub-accounts can be created through the Partnership API or New Relic user interface. In order to group accounts through the New Relic user interface, your partnership must have Admin privileges, and the account must have the appropriate subscription level. If you have any questions about partnership privileges or subscription levels, contact your New Relic account representative. Sub-accounts do not have a New Relic subscription of their own. They inherit the master account's subscription. Billing Billing is applied at the master account level. Exception: Reseller partnerships receive consolidated billing for all accounts under the partnership. Permissions Admin-level users on a master account have the ability to create, modify, and delete sub-accounts for the master account. Users that have been granted access permissions on a master account automatically inherit the same level of access for all sub-accounts. This is also true for add-on roles. Exception: Sub-account users will not receive alert emails or weekly report emails unless they are explicitly granted permission on these sub-accounts. Account users You can use the Partnership user API to add and maintain your customer users. An account must always have at least one person (the Owner) associated with it. For security purposes, you cannot change an account Owner with the Partnership user API. Instead, you must change the account Owner from the Users page in the New Relic UI. In addition, a specific user may be associated with multiple accounts. For example, many New Relic users have accounts through a partnership, and they also have accounts they created directly with New Relic. Partnership pricing Accounts within a partnership organization may have different levels of access to New Relic products. Tip Many of the Partnership API calls return a subscription status as part of the XML. For accounts set up through a partnership: An account can have multiple New Relic products associated with it. However, only one subscription per product may be active at any time. For example, a user may have both an Essentials subscription and a higher service level Pro Trial subscription. When the Pro Trial subscription expires, the service level returns to the Essentials subscription. Promotions may appear as a subscription change. Several factors affect starting and stopping subscriptions, including how New Relic handles pricing and billing.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 212.84523,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>accounts</em>, users, and subscriptions",
        "sections": "<em>Partnerships</em> with <em>New</em> <em>Relic</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " these customers &quot;customer <em>partnerships</em>.&quot; Use of our <em>partnership</em> <em>account</em> structure requires prior approval and set up by <em>New</em> <em>Relic</em> representatives. For customer <em>partnerships</em>, <em>New</em> <em>Relic</em> contacts organizations that would benefit from such a structure. <em>Partnerships</em> are identified by a numeric <em>PARTNER</em>"
      },
      "id": "603ece55e7b9d273782a0804"
    },
    {
      "sections": [
        "Partner account access for administrators",
        "Guest level access",
        "Administrative level access"
      ],
      "title": "Partner account access for administrators",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partner integration guide",
        "Partner account maintenance"
      ],
      "external_id": "619eaa0ec75341c74c05afc0b888d2cc46d08767",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partner-integration-guide/partner-account-maintenance/partner-account-access-administrators/",
      "published_at": "2021-05-05T18:32:45Z",
      "updated_at": "2021-03-16T10:08:40Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic offers the option for partner administrators to access their customers' accounts, subject to the contractual terms of the partnership agreement. These settings are controlled by a New Relic admin. For permissions for non-partner accounts, see Users and roles. Guest level access Guest level access allows administrators to view application data on their customers' accounts. This is particularly useful for troubleshooting customer issues related to performance. Administrative level access Administrative level access, in addition to viewing application data, allows partner administrators to modify the account and subscription terms, and add or remove users from an account. This access level is required for partners who will remotely administer customer accounts using the API or who enable Restricted access on their accounts.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 203.85489,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partner</em> <em>account</em> access for administrators",
        "sections": "<em>Partner</em> <em>account</em> access for administrators",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em> offers the option for <em>partner</em> administrators to access their customers&#x27; accounts, subject to the contractual terms of the <em>partnership</em> agreement. These settings are controlled by a <em>New</em> <em>Relic</em> admin. For permissions for non-<em>partner</em> accounts, see Users and roles. Guest level access Guest"
      },
      "id": "603ec86ee7b9d2756c2a07c7"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/getting-started/partner-marketing": [
    {
      "sections": [
        "NerdGraph tutorial: Partner and reseller subscriptions",
        "Important",
        "Get started: endpoint and API key",
        "Product subscriptions for an account",
        "Tip",
        "Mapping for products (productId)",
        "APM",
        "Example Requests",
        "Mobile",
        "Example Request",
        "Insights",
        "Browser",
        "Synthetics",
        "Infrastructure",
        "Serverless for Lambda",
        "Traces",
        "Logs",
        "Metrics",
        "GraphQL Types",
        "Subscription",
        "Product",
        "Unit of measure",
        "Examples",
        "Create (replace existing) subscription with many products",
        "Create (replace existing) subscription with one product - Logs",
        "Variations from the Partnership API"
      ],
      "title": "NerdGraph tutorial: Partner and reseller subscriptions",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Getting started"
      ],
      "external_id": "b5831e3798a6356482988d72fc3b5dc2d39c6aad",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/tutorials/provisions-your-subscriptions-nerdgraph/",
      "published_at": "2021-05-05T04:13:40Z",
      "updated_at": "2021-04-22T09:39:52Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important The Provisioning API is only available for Partner accounts. The Provisioning NerdGraph API allows you, as a New Relic partner to create subscriptions for your accounts containing a more extensive range of New Relic products than the Partner API. The Provisioning API and Partnership API are compatible when it comes to the products supported by both (APM, Mobile, Insights, Browser, Synthetics, and Infrastructure). If you use the Provisioning API to create a subscription for any of the newer products, you will no longer be able to update the account using the Partnership API V2. The Provisioning API is a GraphQL mutation field named organizationProvisioningUpdatePartnerSubscription. To learn more about how to use this mutation, see Introduction to NerdGraph. Get started: endpoint and API key The provisioning API uses your user key. The endpoint for the Provisioning API is: https://api.newrelic.com/graphql Copy To get started, run the following command: curl -v -d'{\"query\": \"mutation { organizationProvisioningUpdatePartnerSubscription(accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [{id: 9200, name: \\\"Traces\\\", unitsOfMeasure: [{unit: SPANS_IN_MILLIONS, quantity: 40}]}]) {enqueued errors {message path } } }\"}' -H'Content-type: application/json' -H'Api-key: PERSONAL_API_KEY' https://api.newrelic.com/graphql Copy Product subscriptions for an account The Provisioning API does not allow you to upgrade or downgrade individual product subscriptions for an account. Instead, the API requires you to replace (add) the configuration for all product subscriptions for the account. Tip If any product configurations are not included, the Provisioning API automatically provisions the account with a free product (when available). Mapping for products (productId) With each account creation call, you must supply at least one New Relic product type. The mutation query only accepts the numeric productId for the type. APM The number of allowable hosts per account and the data retention period vary by subscription level within New Relic APM’s pricing structure. For example, New Relic APM allows an unlimited number of allowable hosts for Lite accounts, but only a 24-hour data retention period. In addition, pricing and data retention depend on whether you select pricing plans based on hosts or compute units (CU). Use the product ID’s integer format to identify the subscription level and type of plan. Subscription level products.id unitsOfMeasure.unit Lite 18 Not applicable Standard 41 HOSTS Standard Annual 38 HOSTS Pro (Host) 42 HOSTS Pro Annual (Host) 39 HOSTS Enterprise 43 HOSTS Enterprise Annual 40 HOSTS Enterprise Annual 40 HOSTS If you select pricing plans based on compute units (CU), use these product ID integer formats to identify the subscription level and type of plan. Subscription level products.id unitsOfMeasure.unit Pro CU 126 COMPUTE_UNIT Pro Annual CU 127 COMPUTE_UNIT APM Essentials CU 128 COMPUTE_UNIT APM Essentials Annual CU 129 COMPUTE_UNIT Example Requests APM Pro with 5 hosts mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: :PARTNER_ACCOUNT_ID, affectedAccountId: :ACCOUNT_ID, products: [ { id: 42, unitsOfMeasure: [ { unit: HOSTS, quantity: 5 } ] } ] ) { enqueued errors { message path } } } Copy APM Pro CU with 3000 Compute Units mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 126, unitsOfMeasure: [ { unit: COMPUTE_UNIT, quantity: 3000 } ] } ] ) { enqueued errors { message path } } } Copy Mobile New Relic Mobile’s pricing structure allows 100,000 monthly active users per account at the Enterprise subscription level. Data retention varies by subscription level. Use the product ID’s integer format to identify the subscription level. Subscription level products.id unitsOfMeasure.unit.1 unitsOfMeasure.unit.2 Lite 49 Not applicable Not applicable Enterprise 54 APPS USERS Enterprise Annual 55 APPS USERS Example Request Mobile Enterprise with 1 App and 100,000 Monthly Active user mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 54, unitsOfMeasure: [ { unit: APPS, quantity: 1 }, { unit: USERS, quantity: 100000 } ] } ] ) { enqueued errors { message path } } } Copy Insights New Relic Insights bases the pricing structure on the number of allowable events stored and the associated data retention policy. For example, data retention for Insights Free is one day. Subscription level products.id unitsOfMeasure.unit.1 unitsOfMeasure.unit.2 Free 67 Not applicable Not applicable None 65 Not applicable Not applicable Pro 66 DATA_RETENTION_IN_DAYS EVENTS_IN_MILLIONS Pro Annual 69 DATA_RETENTION_IN_DAYS EVENTS_IN_MILLIONS Example Request Insights Pro with 7 days data retention and 25 million events mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 66, unitsOfMeasure: [ { unit: DATA_RETENTION_IN_DAYS, quantity: 7 }, { unit: EVENTS_IN_MILLIONS, quantity: 25 } ] } ] ) { enqueued errors { message path } } } Copy Browser New Relic Browser’s pricing structure allows an unlimited number of app users, regardless of subscription level. However, the number of allowable page views per month and the data retention period vary by subscription level. For example: Lite accounts include an unlimited number of page views per month and 24-hour data retention. Pro account pricing starts at 500,000 page views per month and three months data retention. Use the product ID’s integer format to identify the subscription level. Subscription level products.id unitsOfMeasure.unit Lite 20 Not applicable Pro 21 PAGE_VIEWS Pro Annual 22 PAGE_VIEWS Example Request Browser Pro with 500,000 page views mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 42, unitsOfMeasure: [ { unit: PAGE_VIEWS, quantity: 500000 } ] } ] ) { enqueued errors { message path } } } Copy Synthetics With New Relic Synthetics' pricing structure, the default number of allowable monitoring checks and the data retention period vary by subscription level. Use the product ID’s integer format to identify the subscription level. Subscription level products.id unitsOfMeasure.unit.1 Lite 81 Not applicable Pro 77 CHECKS Pro Annual 78 CHECKS Example Request Synthetics Pro with 10,000 checks mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 77, unitsOfMeasure: [ { unit: CHECKS, quantity: 10000 } ] } ] ) { enqueued errors { message path } } } Copy Infrastructure With New Relic Infrastructure’s pricing structure, the default number of instances and the data retention period vary by subscription level. Infrastructure events do not count against your New Relic Insights quota, even though you can query them in Insights. New Relic Infrastructure offers pricing plans based on Compute Units (CU) only. Use the product ID’s integer format to identify the subscription level. Subscription level products.id unitsOfMeasure.unit Infrastructure None 142 Not applicable Infrastructure Pro (CU) 134 COMPUTE_UNIT Infrastructure Pro Annual (CU) 135 COMPUTE_UNIT Infrastructure Essentials (CU) 136 COMPUTE_UNIT Infrastructure Essentials Annual (CU) 137 COMPUTE_UNIT Example Request Infrastructure Pro with 5,000 Compute Units mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 134, unitsOfMeasure: [ { unit: COMPUTE_UNIT, quantity: 5000 } ] } ] ) { enqueued errors { message path } } } Copy Serverless for Lambda Subscription level products.id unitsOfMeasure.unit.1 Serverless Annual 9010 INGESTED_EVENTS Serverless Monthly 9000 INGESTED_EVENTS Example Request Serverless Monthly with 3,000 ingested events in millions mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9000, unitsOfMeasure: [ { unit: INGESTED_EVENTS, quantity: 3000 } ] } ] ) { enqueued errors { message path } } } Copy Traces Subscription level products.id unitsOfMeasure.unit.1 Traces Annual 9200 SPANS_IN_MILLIONS Traces Monthly 9210 SPANS_IN_MILLIONS Example Request Traces Annual with 3,000 spans in millions mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9200, unitsOfMeasure: [ { unit: SPANS_IN_MILLIONS, quantity: 3000 } ] } ] ) { enqueued errors { message path } } } Copy Logs Subscription level products.id unitsOfMeasure.unit.1 Logs Annual Commit - 8 Days 9110 GB_PER_DAY Logs Annual Commit - 15 Days 9111 GB_PER_DAY Logs Annual Commit - 30 Days 9112 GB_PER_DAY Logs Monthly Commit - 8 Days 9100 GB_PER_DAY Logs Monthly Commit - 15 Days 9101 GB_PER_DAY Logs Monthly Commit - 30 Days 9102 GB_PER_DAY Example Request Logs with 8 days data retention and 100 Gigabytes per day mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9100, unitsOfMeasure: [ { unit: GB_PER_DAY, quantity: 100 } ] } ] ) { enqueued errors { message path } } } Copy Metrics Subscription level products.id unitsOfMeasure.unit.1 Metrics Annual Commit 9310 DPM Metrics Monthly Commit 9300 DPM Example Request Metrics Monthly Commitment with 50 Data Points Per Minute mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9300, unitsOfMeasure: [ { unit: DPM, quantity: 50 } ] } ] ) { enqueued errors { message path } } } Copy GraphQL Types The Provisioning API uses the following GraphQL types: Subscription Name Type Description account_id Integer Numeric ID of the partner account for the partnership to which the affected account belongs. affected_account_id Integer Numeric ID of the account to which the changes described in the products field will be applied. products Array of Product Collection of type Product representing the values that will compose the new Subscription for the Affected Account. Product Name Type Description Id Integer Numeric ID for the Product to be added to the Subscription. Name String Name of the Product to be added to the Subscription. Unit of Measure Array of Unit of Measure Collection of type Unit of Measure for this single product. Unit of measure Name Type Description quantity Integer Numeric value for the amount of units to be applied to the Subscription. unit String Name of the unit to be applied to the product (varies by product line). Examples Here are examples of an API call to create a subscription and the JSON response. Create (replace existing) subscription with many products mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9410, unitsOfMeasure: [{unit: INCIDENT_EVENTS, quantity: 50}] }, { id: 42, unitsOfMeasure: [{unit: HOSTS, quantity: 5 }] }, { id: 42, unitsOfMeasure: [{unit: PAGE_VIEWS, quantity: 500000}] }, { id: 134, unitsOfMeasure: [{unit: COMPUTE_UNIT, quantity: 5000}] }, { id: 66, unitsOfMeasure: [ {unit: DATA_RETENTION_IN_DAYS, quantity: 7 }, {unit: EVENTS_IN_MILLIONS, quantity: 25 } ] }, { id: 9100, unitsOfMeasure: [{unit: GB_PER_DAY, quantity: 100 } ] }, { id: 9300, unitsOfMeasure: [{unit: DPM, quantity: 50 } ] }, { id: 54, unitsOfMeasure: [ {unit: APPS, quantity: 1 }, {unit: USERS, quantity: 100000 } ] }, { id: 9000, unitsOfMeasure: [{unit: INGESTED_EVENTS, quantity: 3000 } ] }, { id: 77, unitsOfMeasure: [{unit: CHECKS, quantity: 10000 } ] }, { id: 9200, unitsOfMeasure: [{unit: SPANS_IN_MILLIONS, quantity: 3000 } ] } ] ) { enqueued errors { message path } } } Copy This query returns the following: { \"data\": { \"organizationProvisioningUpdatePartnerSubscription\": { \"enqueued\": true, \"errors\": [] } } } Copy Create (replace existing) subscription with one product - Logs mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: :PARTNER_ACCOUNT_ID, affectedAccountId: :ACCOUNT_ID, products: [ { id: 9110, unitsOfMeasure: [ { unit: GB_PER_DAY, quantity: 100 }, { unit: DATA_RETENTION_IN_DAYS, quantity: 8 } ] } ] ) { enqueued errors { message path } } } Copy This query returns the following: { \"data\": { \"organizationProvisioningUpdatePartnerSubscription\": { \"enqueued\": true, \"errors\": [] } } } Copy Response: Once the Provisioning API has received your request and has validated it is in the right format it will respond with a message like this. This does not mean that your message has been successfully processed or applied; but it has been validated to be in the right format and it enqueued for processing. { \"data\": { \"organizationProvisioningUpdatePartnerSubscription\": { \"enqueued\": true, \"errors\": [] } } } Copy Variations from the Partnership API These are some key differences between the Provisioning API and the Partner API that frequent Partner API users should know: Feature Description API keys The Provisioning API uses a Personal API key. The Partner API uses the Partnership API key. productId and product_id The product id’s used for the Provisioning API are different than the ones documented for the Partner API. Curl request format To make a curl request to the Provisioning API, the format will be different than the Partner API: The url endpoint is different The required api key is your personal API key Provisioning API responds only to HTTP POST requests Serverless INGESTED_EVENTS units are in millions sending unitsOfMeasure: [{unit: INGESTED_EVENTS, quantity: 3000 } ] will be interpreted by the Provisioning API as 3,000 million events. Insights and Mobile require 2 units of measure Insights requires DATA_RETENTION_IN_DAYS and EVENTS_IN_MILLIONS Mobile requires APPS and USERS. Logs data retention unit of measure is determined by productID This is specified in the product name: Logs Annual Commit - 8 Days | product ID: 9110 Logs Annual Commit - 15 Days | product ID: 9111 Logs Annual Commit - 30 Days | product ID: 9112 Logs Monthly Commit - 8 Days | product ID: 9100 Logs Monthly Commit - 15 Days | product ID: 9101 Logs Monthly Commit - 30 Days | product ID: 9102",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 187.20546,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Get</em> <em>started</em>: endpoint and API key",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Important The Provisioning API is only available for Partner accounts. The Provisioning NerdGraph API allows you, as a <em>New</em> <em>Relic</em> partner to create subscriptions for your accounts containing a more extensive range of <em>New</em> <em>Relic</em> products than the Partner API. The Provisioning API and <em>Partnership</em> API"
      },
      "id": "6043ff97e7b9d25a6f5799c1"
    },
    {
      "sections": [
        "Typical Partnership integration example",
        "Account creation and value storage",
        "Deploying the agent",
        "Deploying the page widget with SSO"
      ],
      "title": "Typical Partnership integration example",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "491849d6f08b80969013fb1d0c9ce154cbbc2e64",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/typical-integration-example/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-29T21:07:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This provides the step-by-step details of a typical integration using the page widget and SSO. Recommendation: Start new projects by referring to Getting started with API and the New Relic REST API v2 examples. Also, begin migrating any of your API v1 scripts to their v2 equivalent. Account creation and value storage Using the accounts/create endpoint, create an account, subscription and user. From the payload, extract and store the account values. Typically you will create a new table in your accounts database and associate the record containing this information with your user record. The values used in this scenario include data-access-key, id, and license-key. You may want to store additional values. Deploying the agent New Relic highly recommends automatically deploying the agents for your customers if your architecture and choice of languages permit. Our experience is that even the best documented and easiest user deployment of the agent results in only a 75% success rate. Auto-deploying the agent for your customers eliminates this dropout. Whether your intention is to auto-deploy or allow the user to do so, the license key from the account creation payload is required for this operation. If you are planning a manual deploy, it is helpful to make the license key easily available to your users. This is a convenience for your users. The key is available by logging into the account. Deploying the page widget with SSO Using the data access key from the newly created account and the user's email, along with the partnership shared secret and timestamp, create a digest that can be transformed into an SHA-2 hash. The elements are assembled into the widget URL. Note: As a standard security measure for data collection, New Relic requires that your application server supports SHA-2 (256-bit). SHA-1 is not supported.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 152.68617,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Typical <em>Partnership</em> integration example",
        "sections": "Typical <em>Partnership</em> integration example",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "This provides the step-by-step details of a typical integration using the page widget and SSO. Recommendation: <em>Start</em> <em>new</em> projects by referring to <em>Getting</em> <em>started</em> with API and the <em>New</em> <em>Relic</em> REST API v2 examples. Also, begin migrating any of your API v1 scripts to their v2 equivalent. Account"
      },
      "id": "603ed3e7e7b9d2e5b52a07c8"
    },
    {
      "sections": [
        "Using the Partner Portal",
        "For more help"
      ],
      "title": "Using the Partner Portal",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Getting started"
      ],
      "external_id": "2f149ab0c15dadf598fa1833be58caeecb6ed493",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/getting-started/using-partner-portal/",
      "published_at": "2021-05-05T18:35:22Z",
      "updated_at": "2021-03-16T10:09:49Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic provides a web portal for partners to easily access valuable resources provided to them by the New Relic Partner Program, such as partner sales enablement content, training, marketing materials, etc. If you are a partner and do not have access to this already, contact your Partner Sales Manager or email partnersales @ newrelic.com. To access the Partner Portal: From your browser, type (or bookmark) the following URL, and then log in with your user name and password. https://partners.newrelic-external.com/English/ Copy For more help For more information about partner content provided by New Relic, see Partner marketing.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 149.69878,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em> provides a web portal for partners to easily access valuable resources provided to them by the <em>New</em> <em>Relic</em> Partner Program, such as partner sales enablement content, training, marketing materials, etc. If you are a partner and do not have access to this already, contact your Partner Sales"
      },
      "id": "603ebb3528ccbc63d5eba791"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/getting-started/using-partner-portal": [
    {
      "sections": [
        "NerdGraph tutorial: Partner and reseller subscriptions",
        "Important",
        "Get started: endpoint and API key",
        "Product subscriptions for an account",
        "Tip",
        "Mapping for products (productId)",
        "APM",
        "Example Requests",
        "Mobile",
        "Example Request",
        "Insights",
        "Browser",
        "Synthetics",
        "Infrastructure",
        "Serverless for Lambda",
        "Traces",
        "Logs",
        "Metrics",
        "GraphQL Types",
        "Subscription",
        "Product",
        "Unit of measure",
        "Examples",
        "Create (replace existing) subscription with many products",
        "Create (replace existing) subscription with one product - Logs",
        "Variations from the Partnership API"
      ],
      "title": "NerdGraph tutorial: Partner and reseller subscriptions",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Getting started"
      ],
      "external_id": "b5831e3798a6356482988d72fc3b5dc2d39c6aad",
      "image": "",
      "url": "https://docs.newrelic.com/docs/apis/nerdgraph/tutorials/provisions-your-subscriptions-nerdgraph/",
      "published_at": "2021-05-05T04:13:40Z",
      "updated_at": "2021-04-22T09:39:52Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Important The Provisioning API is only available for Partner accounts. The Provisioning NerdGraph API allows you, as a New Relic partner to create subscriptions for your accounts containing a more extensive range of New Relic products than the Partner API. The Provisioning API and Partnership API are compatible when it comes to the products supported by both (APM, Mobile, Insights, Browser, Synthetics, and Infrastructure). If you use the Provisioning API to create a subscription for any of the newer products, you will no longer be able to update the account using the Partnership API V2. The Provisioning API is a GraphQL mutation field named organizationProvisioningUpdatePartnerSubscription. To learn more about how to use this mutation, see Introduction to NerdGraph. Get started: endpoint and API key The provisioning API uses your user key. The endpoint for the Provisioning API is: https://api.newrelic.com/graphql Copy To get started, run the following command: curl -v -d'{\"query\": \"mutation { organizationProvisioningUpdatePartnerSubscription(accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [{id: 9200, name: \\\"Traces\\\", unitsOfMeasure: [{unit: SPANS_IN_MILLIONS, quantity: 40}]}]) {enqueued errors {message path } } }\"}' -H'Content-type: application/json' -H'Api-key: PERSONAL_API_KEY' https://api.newrelic.com/graphql Copy Product subscriptions for an account The Provisioning API does not allow you to upgrade or downgrade individual product subscriptions for an account. Instead, the API requires you to replace (add) the configuration for all product subscriptions for the account. Tip If any product configurations are not included, the Provisioning API automatically provisions the account with a free product (when available). Mapping for products (productId) With each account creation call, you must supply at least one New Relic product type. The mutation query only accepts the numeric productId for the type. APM The number of allowable hosts per account and the data retention period vary by subscription level within New Relic APM’s pricing structure. For example, New Relic APM allows an unlimited number of allowable hosts for Lite accounts, but only a 24-hour data retention period. In addition, pricing and data retention depend on whether you select pricing plans based on hosts or compute units (CU). Use the product ID’s integer format to identify the subscription level and type of plan. Subscription level products.id unitsOfMeasure.unit Lite 18 Not applicable Standard 41 HOSTS Standard Annual 38 HOSTS Pro (Host) 42 HOSTS Pro Annual (Host) 39 HOSTS Enterprise 43 HOSTS Enterprise Annual 40 HOSTS Enterprise Annual 40 HOSTS If you select pricing plans based on compute units (CU), use these product ID integer formats to identify the subscription level and type of plan. Subscription level products.id unitsOfMeasure.unit Pro CU 126 COMPUTE_UNIT Pro Annual CU 127 COMPUTE_UNIT APM Essentials CU 128 COMPUTE_UNIT APM Essentials Annual CU 129 COMPUTE_UNIT Example Requests APM Pro with 5 hosts mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: :PARTNER_ACCOUNT_ID, affectedAccountId: :ACCOUNT_ID, products: [ { id: 42, unitsOfMeasure: [ { unit: HOSTS, quantity: 5 } ] } ] ) { enqueued errors { message path } } } Copy APM Pro CU with 3000 Compute Units mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 126, unitsOfMeasure: [ { unit: COMPUTE_UNIT, quantity: 3000 } ] } ] ) { enqueued errors { message path } } } Copy Mobile New Relic Mobile’s pricing structure allows 100,000 monthly active users per account at the Enterprise subscription level. Data retention varies by subscription level. Use the product ID’s integer format to identify the subscription level. Subscription level products.id unitsOfMeasure.unit.1 unitsOfMeasure.unit.2 Lite 49 Not applicable Not applicable Enterprise 54 APPS USERS Enterprise Annual 55 APPS USERS Example Request Mobile Enterprise with 1 App and 100,000 Monthly Active user mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 54, unitsOfMeasure: [ { unit: APPS, quantity: 1 }, { unit: USERS, quantity: 100000 } ] } ] ) { enqueued errors { message path } } } Copy Insights New Relic Insights bases the pricing structure on the number of allowable events stored and the associated data retention policy. For example, data retention for Insights Free is one day. Subscription level products.id unitsOfMeasure.unit.1 unitsOfMeasure.unit.2 Free 67 Not applicable Not applicable None 65 Not applicable Not applicable Pro 66 DATA_RETENTION_IN_DAYS EVENTS_IN_MILLIONS Pro Annual 69 DATA_RETENTION_IN_DAYS EVENTS_IN_MILLIONS Example Request Insights Pro with 7 days data retention and 25 million events mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 66, unitsOfMeasure: [ { unit: DATA_RETENTION_IN_DAYS, quantity: 7 }, { unit: EVENTS_IN_MILLIONS, quantity: 25 } ] } ] ) { enqueued errors { message path } } } Copy Browser New Relic Browser’s pricing structure allows an unlimited number of app users, regardless of subscription level. However, the number of allowable page views per month and the data retention period vary by subscription level. For example: Lite accounts include an unlimited number of page views per month and 24-hour data retention. Pro account pricing starts at 500,000 page views per month and three months data retention. Use the product ID’s integer format to identify the subscription level. Subscription level products.id unitsOfMeasure.unit Lite 20 Not applicable Pro 21 PAGE_VIEWS Pro Annual 22 PAGE_VIEWS Example Request Browser Pro with 500,000 page views mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 42, unitsOfMeasure: [ { unit: PAGE_VIEWS, quantity: 500000 } ] } ] ) { enqueued errors { message path } } } Copy Synthetics With New Relic Synthetics' pricing structure, the default number of allowable monitoring checks and the data retention period vary by subscription level. Use the product ID’s integer format to identify the subscription level. Subscription level products.id unitsOfMeasure.unit.1 Lite 81 Not applicable Pro 77 CHECKS Pro Annual 78 CHECKS Example Request Synthetics Pro with 10,000 checks mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 77, unitsOfMeasure: [ { unit: CHECKS, quantity: 10000 } ] } ] ) { enqueued errors { message path } } } Copy Infrastructure With New Relic Infrastructure’s pricing structure, the default number of instances and the data retention period vary by subscription level. Infrastructure events do not count against your New Relic Insights quota, even though you can query them in Insights. New Relic Infrastructure offers pricing plans based on Compute Units (CU) only. Use the product ID’s integer format to identify the subscription level. Subscription level products.id unitsOfMeasure.unit Infrastructure None 142 Not applicable Infrastructure Pro (CU) 134 COMPUTE_UNIT Infrastructure Pro Annual (CU) 135 COMPUTE_UNIT Infrastructure Essentials (CU) 136 COMPUTE_UNIT Infrastructure Essentials Annual (CU) 137 COMPUTE_UNIT Example Request Infrastructure Pro with 5,000 Compute Units mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 134, unitsOfMeasure: [ { unit: COMPUTE_UNIT, quantity: 5000 } ] } ] ) { enqueued errors { message path } } } Copy Serverless for Lambda Subscription level products.id unitsOfMeasure.unit.1 Serverless Annual 9010 INGESTED_EVENTS Serverless Monthly 9000 INGESTED_EVENTS Example Request Serverless Monthly with 3,000 ingested events in millions mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9000, unitsOfMeasure: [ { unit: INGESTED_EVENTS, quantity: 3000 } ] } ] ) { enqueued errors { message path } } } Copy Traces Subscription level products.id unitsOfMeasure.unit.1 Traces Annual 9200 SPANS_IN_MILLIONS Traces Monthly 9210 SPANS_IN_MILLIONS Example Request Traces Annual with 3,000 spans in millions mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9200, unitsOfMeasure: [ { unit: SPANS_IN_MILLIONS, quantity: 3000 } ] } ] ) { enqueued errors { message path } } } Copy Logs Subscription level products.id unitsOfMeasure.unit.1 Logs Annual Commit - 8 Days 9110 GB_PER_DAY Logs Annual Commit - 15 Days 9111 GB_PER_DAY Logs Annual Commit - 30 Days 9112 GB_PER_DAY Logs Monthly Commit - 8 Days 9100 GB_PER_DAY Logs Monthly Commit - 15 Days 9101 GB_PER_DAY Logs Monthly Commit - 30 Days 9102 GB_PER_DAY Example Request Logs with 8 days data retention and 100 Gigabytes per day mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9100, unitsOfMeasure: [ { unit: GB_PER_DAY, quantity: 100 } ] } ] ) { enqueued errors { message path } } } Copy Metrics Subscription level products.id unitsOfMeasure.unit.1 Metrics Annual Commit 9310 DPM Metrics Monthly Commit 9300 DPM Example Request Metrics Monthly Commitment with 50 Data Points Per Minute mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9300, unitsOfMeasure: [ { unit: DPM, quantity: 50 } ] } ] ) { enqueued errors { message path } } } Copy GraphQL Types The Provisioning API uses the following GraphQL types: Subscription Name Type Description account_id Integer Numeric ID of the partner account for the partnership to which the affected account belongs. affected_account_id Integer Numeric ID of the account to which the changes described in the products field will be applied. products Array of Product Collection of type Product representing the values that will compose the new Subscription for the Affected Account. Product Name Type Description Id Integer Numeric ID for the Product to be added to the Subscription. Name String Name of the Product to be added to the Subscription. Unit of Measure Array of Unit of Measure Collection of type Unit of Measure for this single product. Unit of measure Name Type Description quantity Integer Numeric value for the amount of units to be applied to the Subscription. unit String Name of the unit to be applied to the product (varies by product line). Examples Here are examples of an API call to create a subscription and the JSON response. Create (replace existing) subscription with many products mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: PARTNER_ACCOUNT_ID, affectedAccountId: ACCOUNT_ID, products: [ { id: 9410, unitsOfMeasure: [{unit: INCIDENT_EVENTS, quantity: 50}] }, { id: 42, unitsOfMeasure: [{unit: HOSTS, quantity: 5 }] }, { id: 42, unitsOfMeasure: [{unit: PAGE_VIEWS, quantity: 500000}] }, { id: 134, unitsOfMeasure: [{unit: COMPUTE_UNIT, quantity: 5000}] }, { id: 66, unitsOfMeasure: [ {unit: DATA_RETENTION_IN_DAYS, quantity: 7 }, {unit: EVENTS_IN_MILLIONS, quantity: 25 } ] }, { id: 9100, unitsOfMeasure: [{unit: GB_PER_DAY, quantity: 100 } ] }, { id: 9300, unitsOfMeasure: [{unit: DPM, quantity: 50 } ] }, { id: 54, unitsOfMeasure: [ {unit: APPS, quantity: 1 }, {unit: USERS, quantity: 100000 } ] }, { id: 9000, unitsOfMeasure: [{unit: INGESTED_EVENTS, quantity: 3000 } ] }, { id: 77, unitsOfMeasure: [{unit: CHECKS, quantity: 10000 } ] }, { id: 9200, unitsOfMeasure: [{unit: SPANS_IN_MILLIONS, quantity: 3000 } ] } ] ) { enqueued errors { message path } } } Copy This query returns the following: { \"data\": { \"organizationProvisioningUpdatePartnerSubscription\": { \"enqueued\": true, \"errors\": [] } } } Copy Create (replace existing) subscription with one product - Logs mutation { organizationProvisioningUpdatePartnerSubscription ( accountId: :PARTNER_ACCOUNT_ID, affectedAccountId: :ACCOUNT_ID, products: [ { id: 9110, unitsOfMeasure: [ { unit: GB_PER_DAY, quantity: 100 }, { unit: DATA_RETENTION_IN_DAYS, quantity: 8 } ] } ] ) { enqueued errors { message path } } } Copy This query returns the following: { \"data\": { \"organizationProvisioningUpdatePartnerSubscription\": { \"enqueued\": true, \"errors\": [] } } } Copy Response: Once the Provisioning API has received your request and has validated it is in the right format it will respond with a message like this. This does not mean that your message has been successfully processed or applied; but it has been validated to be in the right format and it enqueued for processing. { \"data\": { \"organizationProvisioningUpdatePartnerSubscription\": { \"enqueued\": true, \"errors\": [] } } } Copy Variations from the Partnership API These are some key differences between the Provisioning API and the Partner API that frequent Partner API users should know: Feature Description API keys The Provisioning API uses a Personal API key. The Partner API uses the Partnership API key. productId and product_id The product id’s used for the Provisioning API are different than the ones documented for the Partner API. Curl request format To make a curl request to the Provisioning API, the format will be different than the Partner API: The url endpoint is different The required api key is your personal API key Provisioning API responds only to HTTP POST requests Serverless INGESTED_EVENTS units are in millions sending unitsOfMeasure: [{unit: INGESTED_EVENTS, quantity: 3000 } ] will be interpreted by the Provisioning API as 3,000 million events. Insights and Mobile require 2 units of measure Insights requires DATA_RETENTION_IN_DAYS and EVENTS_IN_MILLIONS Mobile requires APPS and USERS. Logs data retention unit of measure is determined by productID This is specified in the product name: Logs Annual Commit - 8 Days | product ID: 9110 Logs Annual Commit - 15 Days | product ID: 9111 Logs Annual Commit - 30 Days | product ID: 9112 Logs Monthly Commit - 8 Days | product ID: 9100 Logs Monthly Commit - 15 Days | product ID: 9101 Logs Monthly Commit - 30 Days | product ID: 9102",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 187.20543,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Get</em> <em>started</em>: endpoint and API key",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "Important The Provisioning API is only available for Partner accounts. The Provisioning NerdGraph API allows you, as a <em>New</em> <em>Relic</em> partner to create subscriptions for your accounts containing a more extensive range of <em>New</em> <em>Relic</em> products than the Partner API. The Provisioning API and <em>Partnership</em> API"
      },
      "id": "6043ff97e7b9d25a6f5799c1"
    },
    {
      "sections": [
        "Typical Partnership integration example",
        "Account creation and value storage",
        "Deploying the agent",
        "Deploying the page widget with SSO"
      ],
      "title": "Typical Partnership integration example",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "491849d6f08b80969013fb1d0c9ce154cbbc2e64",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/typical-integration-example/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-29T21:07:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This provides the step-by-step details of a typical integration using the page widget and SSO. Recommendation: Start new projects by referring to Getting started with API and the New Relic REST API v2 examples. Also, begin migrating any of your API v1 scripts to their v2 equivalent. Account creation and value storage Using the accounts/create endpoint, create an account, subscription and user. From the payload, extract and store the account values. Typically you will create a new table in your accounts database and associate the record containing this information with your user record. The values used in this scenario include data-access-key, id, and license-key. You may want to store additional values. Deploying the agent New Relic highly recommends automatically deploying the agents for your customers if your architecture and choice of languages permit. Our experience is that even the best documented and easiest user deployment of the agent results in only a 75% success rate. Auto-deploying the agent for your customers eliminates this dropout. Whether your intention is to auto-deploy or allow the user to do so, the license key from the account creation payload is required for this operation. If you are planning a manual deploy, it is helpful to make the license key easily available to your users. This is a convenience for your users. The key is available by logging into the account. Deploying the page widget with SSO Using the data access key from the newly created account and the user's email, along with the partnership shared secret and timestamp, create a digest that can be transformed into an SHA-2 hash. The elements are assembled into the widget URL. Note: As a standard security measure for data collection, New Relic requires that your application server supports SHA-2 (256-bit). SHA-1 is not supported.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 152.68616,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Typical <em>Partnership</em> integration example",
        "sections": "Typical <em>Partnership</em> integration example",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "This provides the step-by-step details of a typical integration using the page widget and SSO. Recommendation: <em>Start</em> <em>new</em> projects by referring to <em>Getting</em> <em>started</em> with API and the <em>New</em> <em>Relic</em> REST API v2 examples. Also, begin migrating any of your API v1 scripts to their v2 equivalent. Account"
      },
      "id": "603ed3e7e7b9d2e5b52a07c8"
    },
    {
      "sections": [
        "Partner marketing",
        "Marketing tools",
        "Marketing activities",
        "Guest blog posts",
        "What's in it for you?",
        "How does it work?",
        "How do you create a great blog post?"
      ],
      "title": "Partner marketing",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Getting started"
      ],
      "external_id": "3c8149518849df6b00f17244aec711aad64f3952",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/getting-started/partner-marketing/",
      "published_at": "2021-05-05T18:35:22Z",
      "updated_at": "2021-03-16T10:09:49Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic loves to help our partners tell the world about our joint offerings. Here is a non-exhaustive list of marketing activities that we can pull into our co-marketing plan. To proceed with any co-marketing activity or to plan your strategy, email your Business Development rep at New Relic or email partners @ newrelic.com. Marketing tools If you have new ideas that are not listed here, let us know! Marketing tools Description Email template Use New Relic's HTML and/or plain text email templates to send to your customers to introduce them to New Relic. To request templates, email your Business Development rep at New Relic, or email partners @ newrelic.com. Content boilerplate New Relic's content boilerplate has everything you need to create a New Relic page on your website. To request it, email your Business Development rep at New Relic, or email partners @ newrelic.com. Blog content Follow New Relic's guidelines to post on New Relic's blog. Twitter Use sample tweets to promote our partnership, include appropriate links, and mention @newrelic. To request re-tweets, email your Business Development rep at New Relic, or email partners @ newrelic.com. New Relic media assets Get our logo and other materials from New Relic's media assets webpage. To request additional assets, email your Business Development rep at New Relic, or email partners @ newrelic.com. Joint customer case study Identify a joint customer, and work with New Relic to write and publish a joint customer case study. For more information, contact your Business Development rep at New Relic, or email partners @ newrelic.com. Marketing activities If you have new ideas that are not listed here, let us know! Marketing activity Description Social media support Let New Relic help amplify your social media through tweets, retweets, Facebook likes, shares, etc. Event opportunities Participate in local meetups or find out about other events or co-sponsorship opportunities. Webinar Co-host a webinar; for example, see: Three Powerful Tools for Improving the Performance of Your Drupal Site Six Tips for Improving Ruby Application Performance Guest blog posts New Relic loves great blog content, and partners are often an essential source; for example: Magento Auth0 Flood IO You are encouraged to write a guest blog post for http://blog.newrelic.com. What's in it for you? It's a great opportunity for you to promote your company and the integration you've built. Our blog is popular reading for the New Relic community, and our customers are frequently among the fastest growing innovators. How does it work? You draft the post and supply screenshots and/or video as applicable. New Relic will edit, format, publish, and promote the post. You'll get credit as the author, and you can include a paragraph at the end mentioning your product. How do you create a great blog post? The goal is to be insightful, useful, thought provoking, smart, surprising, and entertaining—or at least some combination of those elements. Blog post guidelines Comments Writing style Recommendation: Write your blog post in the first person. New Relic's target audience includes developers, DevOps, IT ops, execs, marketers, and data scientists working with big data, but we have no problem attracting a wider readership than that. We want to intrigue them and help them do their jobs better and more passionately. Passion and connection are essential. If you do not care about the topic you are blogging about or, more importantly, you do not appear to care about it, neither will the reader. Length A typical blog post runs approximately 500 words, but it may be longer or shorter if there is a good reason. Technical blog posts may run much longer, while posts with video may not need much text at all. Content Each post should focus on a single main idea. If you have a mashup of multiple ideas, consider breaking them up into a series of multiple, related posts. Posts do not have to be based on the latest news, but they shouldn't pretend that old news is new. If you're writing about something that's not brand new, you need to acknowledge that and come up with a fresh take or new angle. Posts should be fact based, and not mere opinion without a grounding in reality. The magic is in the details. Posts should be grounded in specifics, not just general pronouncements. If you say something is bad, you need to describe why; for example, what can or did happen because of it. Similarly, if you suggest best practices, the more specific examples you provide, the better. Links Links to outside content are encouraged, but just pointing to something on the web is not enough for a post, no matter how interesting the link is. You need to bring something unique to the post.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 149.69876,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " Follow <em>New</em> <em>Relic</em>&#x27;s guidelines to post on <em>New</em> <em>Relic</em>&#x27;s blog. Twitter Use sample tweets to promote our <em>partnership</em>, include appropriate links, and mention @newrelic. To request re-tweets, email your Business Development rep at <em>New</em> <em>Relic</em>, or email partners @ newrelic.com. <em>New</em> <em>Relic</em> media assets <em>Get</em> our"
      },
      "id": "603eb147e7b9d2f0012a07de"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/partner-api/partner-api-reference": [
    {
      "sections": [
        "Partnership billing integration API",
        "Requirements",
        "Communication endpoint",
        "Billing API",
        "Customer subscription notification API",
        "Invoice notification API"
      ],
      "title": "Partnership billing integration API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "73da7e096ce56bb45e39bb95a1c2e0a0011be597",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-billing-integration-api/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-30T21:12:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Partnership API includes functionality for partners to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts. This is particularly useful for partners acting as resellers or managed service providers of New Relic accounts. For example, when customers of a New Relic reseller partner purchase a higher subscription level from New Relic's Sales team, New Relic replaces the old subscription with a new subscription. New Relic then uses the API to communicate this information to the partner. Requirements Before using this object, please read the Partnership API requirements. Communication endpoint Partners must implement a billing communication endpoint that identifies the partner's URL and PARTNER_ID. New Relic uses this endpoint to notify the partner that New Relic has made a change to a partner account's subscription or invoice information. The endpoint must support HTTPS. The partner-specified portion of the URL is identified from the Settings tab of New Relic's Partner Portal. The PARTNER_ID is the partner's external ID for this account. This value must be passed when the account is created by using the partner_external_identifier parameter. Billing API Supported functionality for the Partnership billing API includes: Customer subscription notification Invoice information notification Customer subscription notification API To communicate changes to a partner about a customer's subscription, New Relic uses the POST method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy Authentication is done via headers with the partner's REST API key or Admin user's API key. The Partnership API returns the results as JSON. Parameters: Name Type Description id String The customer's New Relic account ID subscription_id Integer Subscription's numeric ID subscription_string String Description of subscription for display price Integer Monthly price of subscription in cents number_of_hosts Integer Number of hosts starts Date Subscription's start date (yyyymmdd) expires Date Subscription's end date (yyyymmdd) Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed. Invoice notification API New Relic uses this endpoint to notify the partner of changes to a partner account's subscription level and invoice information. New Relic uses the PUT method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy OR https://partner-specified/partner-specified/PARTNER_ID.xml Copy The Partnership API returns the results as JSON or XML. Parameters: Name Type Description id string The customer's New Relic account ID subscription_id integer Subscription's numeric ID subscription_string string Description of subscription for display price integer Monthly price of subscription in cents Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.56519,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> billing integration <em>API</em>",
        "sections": "<em>Partnership</em> billing integration <em>API</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s <em>Partnership</em> <em>API</em> includes functionality for partners to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts. This is particularly useful for partners acting as resellers or managed service providers of <em>New</em> <em>Relic</em>"
      },
      "id": "603ec86e64441f09e44e8871"
    },
    {
      "sections": [
        "Partnership API sub-account object",
        "Requirements",
        "Introduction to using sub-accounts",
        "Sub-account object attributes",
        "name (REQUIRED)",
        "allow_api_access",
        "testing",
        "users (REQUIRED for some accounts)",
        "password (REQUIRED)",
        "Sub-account API calls",
        "JSON example",
        "Sub-account object JSON request",
        "JSON response",
        "Sub-account object API examples",
        "Create"
      ],
      "title": "Partnership API sub-account object",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7fb13302d892a5f89c6c9371f35a60bf1ed9f6a5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-sub-account-object/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-30T12:15:14Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains how to use the Partnership API to manage sub-accounts. For accounts, you'd use the sub-account object. Requirements You may not have access to using this object. Before using the Partnership API, first read the requirements. Introduction to using sub-accounts Some notes about using the sub-account object: To manage existing master accounts or existing sub-accounts, use the Partnership API account object. A parent account may have more than one associated sub-account, but every sub-account must correspond to one and only one parent account. Every sub-account must have at least a primary_admin user. You cannot create a sub-account without connecting it to an existing parent account and adding at least one user. Sub-account object attributes Before using the Partnership API, first read the requirements. Here are the Partnership API sub-account object's attributes: name (REQUIRED) Type: String Default: (none) This name must be unique in New Relic's database. If the specified name is not unique, it will be auto-incremented with a numeric suffix as follows: conflicting_name_1 conflicting_name_2 etc. Copy allow_api_access Type: Boolean Default: False This flag allows API access to application data. This must be set to true for partnerships remotely administering accounts. testing Type: Boolean Default: False Use this flag to indicate a test account. Test accounts are assumed to contain garbage data and are ignored by internal systems. The data they generate may be deleted at any time. users (REQUIRED for some accounts) Type: Array Default: (none) An array defining a list of users. There are some restrictions in place dependent on the status of your account: For customer partnerships who have switched to the New Relic One user model: do not define users. If you add users with this field, they will be ignored. Instead, to add users, you'd use these user management procedures. For all other accounts, which have users on our original user model: When you create the sub-account, you can define only one user: the account Owner. To add additional users, use the Partnership API user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user's current password. For some New Relic organizations, sub-accounts can also be created via the master account's Account settings page in the New Relic UI. Sub-account API calls Here is the URL pattern to create sub-accounts. Notice that the Parent Account ID must be specified. If using this URL pattern, send the JSON object along with an HTTP header containing the Partner API key. For example: POST .../api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts​ x-api-key:PARTNER_ACCOUNT_KEY Content-Type: application/json { JSON data } Copy Call Resource URL pattern Create a sub-account with the given parameters. POST /api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy JSON example Here is an example of a JSON request and response using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Sub-account object JSON request { \"account\": { \"name\": \"Sample Sub-Account\", \"users\": [ { \"email\": \"sample_user@sample.org\", \"password\": \"XXXXXXXX\", \"owner\": true, \"role\": \"admin\", \"first_name\": \"Sample\", \"last_name\": \"User\" } ], \"allow_api_access\": true, \"phone_number\": \"555-555-5555\" } } Copy JSON response { \"id\": XXXXXX, \"name\": \"Sample Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": true, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1990.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy Sub-account object API examples Here is an example of an API call using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Create Request: curl -X POST \\ -H 'x-api-key:PARTNER_ACCOUNT_KEY' \\ -H 'Content-Type:application/json' \\ -d '{\"sub_account\":{\"name\":\"Sample Sub-Account\"}, \"users\":[{\"email\":\"sample_user@sample.org\", \"password\":\"XXXXXX\", \"first_name\":\"Sample\", \"last_name\":\"User\", \"role\":\"admin\", \"owner\":\"true\"}]}' \\ https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy Response (line breaks are for readability): { \"id\": XXXXXX, \"name\": \"Sample Sub-Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": false, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1999.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.29599,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> sub-account object",
        "sections": "<em>Partnership</em> <em>API</em> sub-account object",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " the <em>Partnership</em> <em>API</em> user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user&#x27;s current password. For some <em>New</em> <em>Relic</em> organizations"
      },
      "id": "603eba3ae7b9d2b8e32a07b5"
    },
    {
      "sections": [
        "Product buckets",
        "Requirements",
        "Overview (#overview)",
        "Quantity by product",
        "Insights Events quantity",
        "Browser PageViews quantity",
        "Synthetics Checks quantity"
      ],
      "title": "Product buckets",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "fe7632af0936f9878b04ba0c25f7cf8a7f684399",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/product-buckets/",
      "published_at": "2021-05-05T18:29:33Z",
      "updated_at": "2021-03-29T21:27:06Z",
      "document_type": "page",
      "popularity": 1,
      "body": "For partnership accounts on our original product pricing, you can use the Partnership API for managing subscriptions. This doc explains some details for using the Browser, Synthetics, and Insights products. Requirements This doc applies only for partnership accounts on our original pricing plan. Before using this API, please read the Partnership API requirements. Overview (#overview) When using the Partnership API for Insights, Browser, and Synthetics products, you must provide a valid quantity value. This indicates the number of Insights Events, Browser PageViews, and Synthetics Checks provisioned to that account. New Relic uses this \"bucket\" pricing structure based on the quantity value in order to offer discounts on large volume purchases. Be sure to select an available bucket value. Otherwise, the New Relic Partnership API will return an error response. Quantity by product Here are the valid quantity values by New Relic product. Insights Events quantity Insights Pro Insights Pro Annual 25 25 50 50 75 75 300 300 625 625 1250 1250 2500 2500 5000 5000 10000 10000 20000 20000 40000 40000 60000 60000 80000 80000 100000 100000 120000 120000 140000 140000 Browser PageViews quantity Browser Pro Browser Pro Annualynthetics Checks quantity Synthetics Pro Synthetics Pro Annual 10000 10000 15000 15000 25000 25000 35000 35000 50000 50000 75000 75000 100000 100000 150000 150000 250000 250000 300000 300000 400000 400000 500000 500000 600000 600000 750000 750000 900000 900000 1000000 1000000 1150000 1150000 1300000 1300000 1500000 1500000 1750000 1750000 2000000 2000000 2500000 2500000 3000000 3000000 3500000 3500000 5000000 5000000 7000000 7000000 8500000 8500000 10000000 10000000 12500000 12500000 14000000 14000000 15000000 15000000 17500000 17500000 20000000 20000000",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 168.8604,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " provisioned to that account. <em>New</em> <em>Relic</em> uses this &quot;bucket&quot; pricing structure based on the quantity value in order to offer discounts on large volume purchases. Be sure to select an available bucket value. Otherwise, the <em>New</em> <em>Relic</em> <em>Partnership</em> <em>API</em> will return an error response. Quantity by product Here"
      },
      "id": "6044181d28ccbc2ea42c608a"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-account-object": [
    {
      "sections": [
        "Partnership billing integration API",
        "Requirements",
        "Communication endpoint",
        "Billing API",
        "Customer subscription notification API",
        "Invoice notification API"
      ],
      "title": "Partnership billing integration API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "73da7e096ce56bb45e39bb95a1c2e0a0011be597",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-billing-integration-api/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-30T21:12:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Partnership API includes functionality for partners to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts. This is particularly useful for partners acting as resellers or managed service providers of New Relic accounts. For example, when customers of a New Relic reseller partner purchase a higher subscription level from New Relic's Sales team, New Relic replaces the old subscription with a new subscription. New Relic then uses the API to communicate this information to the partner. Requirements Before using this object, please read the Partnership API requirements. Communication endpoint Partners must implement a billing communication endpoint that identifies the partner's URL and PARTNER_ID. New Relic uses this endpoint to notify the partner that New Relic has made a change to a partner account's subscription or invoice information. The endpoint must support HTTPS. The partner-specified portion of the URL is identified from the Settings tab of New Relic's Partner Portal. The PARTNER_ID is the partner's external ID for this account. This value must be passed when the account is created by using the partner_external_identifier parameter. Billing API Supported functionality for the Partnership billing API includes: Customer subscription notification Invoice information notification Customer subscription notification API To communicate changes to a partner about a customer's subscription, New Relic uses the POST method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy Authentication is done via headers with the partner's REST API key or Admin user's API key. The Partnership API returns the results as JSON. Parameters: Name Type Description id String The customer's New Relic account ID subscription_id Integer Subscription's numeric ID subscription_string String Description of subscription for display price Integer Monthly price of subscription in cents number_of_hosts Integer Number of hosts starts Date Subscription's start date (yyyymmdd) expires Date Subscription's end date (yyyymmdd) Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed. Invoice notification API New Relic uses this endpoint to notify the partner of changes to a partner account's subscription level and invoice information. New Relic uses the PUT method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy OR https://partner-specified/partner-specified/PARTNER_ID.xml Copy The Partnership API returns the results as JSON or XML. Parameters: Name Type Description id string The customer's New Relic account ID subscription_id integer Subscription's numeric ID subscription_string string Description of subscription for display price integer Monthly price of subscription in cents Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.56517,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> billing integration <em>API</em>",
        "sections": "<em>Partnership</em> billing integration <em>API</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s <em>Partnership</em> <em>API</em> includes functionality for partners to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts. This is particularly useful for partners acting as resellers or managed service providers of <em>New</em> <em>Relic</em>"
      },
      "id": "603ec86e64441f09e44e8871"
    },
    {
      "sections": [
        "Partnership API sub-account object",
        "Requirements",
        "Introduction to using sub-accounts",
        "Sub-account object attributes",
        "name (REQUIRED)",
        "allow_api_access",
        "testing",
        "users (REQUIRED for some accounts)",
        "password (REQUIRED)",
        "Sub-account API calls",
        "JSON example",
        "Sub-account object JSON request",
        "JSON response",
        "Sub-account object API examples",
        "Create"
      ],
      "title": "Partnership API sub-account object",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7fb13302d892a5f89c6c9371f35a60bf1ed9f6a5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-sub-account-object/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-30T12:15:14Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains how to use the Partnership API to manage sub-accounts. For accounts, you'd use the sub-account object. Requirements You may not have access to using this object. Before using the Partnership API, first read the requirements. Introduction to using sub-accounts Some notes about using the sub-account object: To manage existing master accounts or existing sub-accounts, use the Partnership API account object. A parent account may have more than one associated sub-account, but every sub-account must correspond to one and only one parent account. Every sub-account must have at least a primary_admin user. You cannot create a sub-account without connecting it to an existing parent account and adding at least one user. Sub-account object attributes Before using the Partnership API, first read the requirements. Here are the Partnership API sub-account object's attributes: name (REQUIRED) Type: String Default: (none) This name must be unique in New Relic's database. If the specified name is not unique, it will be auto-incremented with a numeric suffix as follows: conflicting_name_1 conflicting_name_2 etc. Copy allow_api_access Type: Boolean Default: False This flag allows API access to application data. This must be set to true for partnerships remotely administering accounts. testing Type: Boolean Default: False Use this flag to indicate a test account. Test accounts are assumed to contain garbage data and are ignored by internal systems. The data they generate may be deleted at any time. users (REQUIRED for some accounts) Type: Array Default: (none) An array defining a list of users. There are some restrictions in place dependent on the status of your account: For customer partnerships who have switched to the New Relic One user model: do not define users. If you add users with this field, they will be ignored. Instead, to add users, you'd use these user management procedures. For all other accounts, which have users on our original user model: When you create the sub-account, you can define only one user: the account Owner. To add additional users, use the Partnership API user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user's current password. For some New Relic organizations, sub-accounts can also be created via the master account's Account settings page in the New Relic UI. Sub-account API calls Here is the URL pattern to create sub-accounts. Notice that the Parent Account ID must be specified. If using this URL pattern, send the JSON object along with an HTTP header containing the Partner API key. For example: POST .../api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts​ x-api-key:PARTNER_ACCOUNT_KEY Content-Type: application/json { JSON data } Copy Call Resource URL pattern Create a sub-account with the given parameters. POST /api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy JSON example Here is an example of a JSON request and response using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Sub-account object JSON request { \"account\": { \"name\": \"Sample Sub-Account\", \"users\": [ { \"email\": \"sample_user@sample.org\", \"password\": \"XXXXXXXX\", \"owner\": true, \"role\": \"admin\", \"first_name\": \"Sample\", \"last_name\": \"User\" } ], \"allow_api_access\": true, \"phone_number\": \"555-555-5555\" } } Copy JSON response { \"id\": XXXXXX, \"name\": \"Sample Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": true, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1990.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy Sub-account object API examples Here is an example of an API call using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Create Request: curl -X POST \\ -H 'x-api-key:PARTNER_ACCOUNT_KEY' \\ -H 'Content-Type:application/json' \\ -d '{\"sub_account\":{\"name\":\"Sample Sub-Account\"}, \"users\":[{\"email\":\"sample_user@sample.org\", \"password\":\"XXXXXX\", \"first_name\":\"Sample\", \"last_name\":\"User\", \"role\":\"admin\", \"owner\":\"true\"}]}' \\ https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy Response (line breaks are for readability): { \"id\": XXXXXX, \"name\": \"Sample Sub-Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": false, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1999.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.29599,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> sub-account object",
        "sections": "<em>Partnership</em> <em>API</em> sub-account object",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " the <em>Partnership</em> <em>API</em> user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user&#x27;s current password. For some <em>New</em> <em>Relic</em> organizations"
      },
      "id": "603eba3ae7b9d2b8e32a07b5"
    },
    {
      "sections": [
        "Partnership API reference",
        "Requirements",
        "Find your Partnership API key",
        "Find your Partner ID",
        "Authenticate the API call",
        "Notes for partners who manage New Relic accounts",
        "Errors"
      ],
      "title": "Partnership API reference",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7bc374ae0e6f6917aa82a70e582606ea4a9878ab",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partner-api-reference/",
      "published_at": "2021-05-05T18:37:41Z",
      "updated_at": "2021-03-30T03:04:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains technical details about using the Partnership API. For an introduction and requirements, first read Intro to Partnership API. Requirements For requirements, see Intro to Partnership API. Find your Partnership API key The Partnership API requires that you authenticate with the REST API key that is specific to your partnership owner account (you cannot use the other REST API keys). When using your Partnership API key with calls to REST API (v2) endpoints that require the use of an Admin user's API key, see Admin user's API Key and partnerships. Find your Partner ID The Partnership API also requires that you authenticate by providing a Partner ID specific to your partnership. This is unique from the account ID for your partnership owner account. To obtain your Partner ID, go to your partner admin console and retrieve the partner ID number that is listed in your URL: https://partner-admin-console.newrelic.com/accounts/​$ACCOUNT_ID/admin_console/partnerships/$PARTNER_ID Copy You must include the Partner ID as part of the base URL for the Partner API. URL component URL pattern Partner API endpoint https://rpm.newrelic.com/api/v2/partners/PARTNER_ID Copy Resource URL patterns /accounts /accounts/ACCOUNT_ID /accounts/ACCOUNT_ID/users /accounts/ACCOUNT_ID/users/USER_ID /accounts/ACCOUNT_ID/subscriptions /accounts/ACCOUNT_ID/subscriptions/SUBSCRIPTION_ID Copy Example https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/ACCOUNT_ID Copy Authenticate the API call To authenticate to the Partner API when making an API call: Add a request header labeled x-api-key and set its value to your Partner API key. Include your Partner ID at the specified point in the request URI. Notes for partners who manage New Relic accounts For partners who manage New Relic accounts for their customers, the initial API call for all account-level interactions is to \"create account.\" This call returns an xml record of the newly created account. Part of this record is the account_id. All of the other calls in the Partnership API require the account_id as a parameter. Provision will need to be made by the partner to parse the returned xml extract, store the account_id, and associate it with the users' partner account record. Errors New Relic uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success and codes in the 4xx range indicate an error that resulted from the provided information (for example, a required parameter was missing). Error Probable cause 400 Bad Request Most commonly the call is missing a required parameter. 401 Unauthorized A valid API key was not provided. 402 Request Failed Parameters were valid but request failed for some reason. 404 Not Found The requested item doesn't exist. 422 Unprocessable Entity Your account has special terms and cannot be changed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.02446,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> reference",
        "sections": "Notes for <em>partners</em> who manage <em>New</em> <em>Relic</em> accounts",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " <em>API</em> key that is specific to your <em>partnership</em> owner account (you cannot use the other REST <em>API</em> keys). When using your <em>Partnership</em> <em>API</em> key with calls to REST <em>API</em> (v2) endpoints that require the use of an Admin user&#x27;s <em>API</em> key, see Admin user&#x27;s <em>API</em> Key and <em>partnerships</em>. Find your <em>Partner</em> ID"
      },
      "id": "603ebc5f28ccbc22b6eba780"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-keys": [
    {
      "sections": [
        "Partnership billing integration API",
        "Requirements",
        "Communication endpoint",
        "Billing API",
        "Customer subscription notification API",
        "Invoice notification API"
      ],
      "title": "Partnership billing integration API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "73da7e096ce56bb45e39bb95a1c2e0a0011be597",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-billing-integration-api/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-30T21:12:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Partnership API includes functionality for partners to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts. This is particularly useful for partners acting as resellers or managed service providers of New Relic accounts. For example, when customers of a New Relic reseller partner purchase a higher subscription level from New Relic's Sales team, New Relic replaces the old subscription with a new subscription. New Relic then uses the API to communicate this information to the partner. Requirements Before using this object, please read the Partnership API requirements. Communication endpoint Partners must implement a billing communication endpoint that identifies the partner's URL and PARTNER_ID. New Relic uses this endpoint to notify the partner that New Relic has made a change to a partner account's subscription or invoice information. The endpoint must support HTTPS. The partner-specified portion of the URL is identified from the Settings tab of New Relic's Partner Portal. The PARTNER_ID is the partner's external ID for this account. This value must be passed when the account is created by using the partner_external_identifier parameter. Billing API Supported functionality for the Partnership billing API includes: Customer subscription notification Invoice information notification Customer subscription notification API To communicate changes to a partner about a customer's subscription, New Relic uses the POST method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy Authentication is done via headers with the partner's REST API key or Admin user's API key. The Partnership API returns the results as JSON. Parameters: Name Type Description id String The customer's New Relic account ID subscription_id Integer Subscription's numeric ID subscription_string String Description of subscription for display price Integer Monthly price of subscription in cents number_of_hosts Integer Number of hosts starts Date Subscription's start date (yyyymmdd) expires Date Subscription's end date (yyyymmdd) Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed. Invoice notification API New Relic uses this endpoint to notify the partner of changes to a partner account's subscription level and invoice information. New Relic uses the PUT method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy OR https://partner-specified/partner-specified/PARTNER_ID.xml Copy The Partnership API returns the results as JSON or XML. Parameters: Name Type Description id string The customer's New Relic account ID subscription_id integer Subscription's numeric ID subscription_string string Description of subscription for display price integer Monthly price of subscription in cents Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.56517,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> billing integration <em>API</em>",
        "sections": "<em>Partnership</em> billing integration <em>API</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s <em>Partnership</em> <em>API</em> includes functionality for partners to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts. This is particularly useful for partners acting as resellers or managed service providers of <em>New</em> <em>Relic</em>"
      },
      "id": "603ec86e64441f09e44e8871"
    },
    {
      "sections": [
        "Partnership API sub-account object",
        "Requirements",
        "Introduction to using sub-accounts",
        "Sub-account object attributes",
        "name (REQUIRED)",
        "allow_api_access",
        "testing",
        "users (REQUIRED for some accounts)",
        "password (REQUIRED)",
        "Sub-account API calls",
        "JSON example",
        "Sub-account object JSON request",
        "JSON response",
        "Sub-account object API examples",
        "Create"
      ],
      "title": "Partnership API sub-account object",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7fb13302d892a5f89c6c9371f35a60bf1ed9f6a5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-sub-account-object/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-30T12:15:14Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains how to use the Partnership API to manage sub-accounts. For accounts, you'd use the sub-account object. Requirements You may not have access to using this object. Before using the Partnership API, first read the requirements. Introduction to using sub-accounts Some notes about using the sub-account object: To manage existing master accounts or existing sub-accounts, use the Partnership API account object. A parent account may have more than one associated sub-account, but every sub-account must correspond to one and only one parent account. Every sub-account must have at least a primary_admin user. You cannot create a sub-account without connecting it to an existing parent account and adding at least one user. Sub-account object attributes Before using the Partnership API, first read the requirements. Here are the Partnership API sub-account object's attributes: name (REQUIRED) Type: String Default: (none) This name must be unique in New Relic's database. If the specified name is not unique, it will be auto-incremented with a numeric suffix as follows: conflicting_name_1 conflicting_name_2 etc. Copy allow_api_access Type: Boolean Default: False This flag allows API access to application data. This must be set to true for partnerships remotely administering accounts. testing Type: Boolean Default: False Use this flag to indicate a test account. Test accounts are assumed to contain garbage data and are ignored by internal systems. The data they generate may be deleted at any time. users (REQUIRED for some accounts) Type: Array Default: (none) An array defining a list of users. There are some restrictions in place dependent on the status of your account: For customer partnerships who have switched to the New Relic One user model: do not define users. If you add users with this field, they will be ignored. Instead, to add users, you'd use these user management procedures. For all other accounts, which have users on our original user model: When you create the sub-account, you can define only one user: the account Owner. To add additional users, use the Partnership API user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user's current password. For some New Relic organizations, sub-accounts can also be created via the master account's Account settings page in the New Relic UI. Sub-account API calls Here is the URL pattern to create sub-accounts. Notice that the Parent Account ID must be specified. If using this URL pattern, send the JSON object along with an HTTP header containing the Partner API key. For example: POST .../api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts​ x-api-key:PARTNER_ACCOUNT_KEY Content-Type: application/json { JSON data } Copy Call Resource URL pattern Create a sub-account with the given parameters. POST /api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy JSON example Here is an example of a JSON request and response using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Sub-account object JSON request { \"account\": { \"name\": \"Sample Sub-Account\", \"users\": [ { \"email\": \"sample_user@sample.org\", \"password\": \"XXXXXXXX\", \"owner\": true, \"role\": \"admin\", \"first_name\": \"Sample\", \"last_name\": \"User\" } ], \"allow_api_access\": true, \"phone_number\": \"555-555-5555\" } } Copy JSON response { \"id\": XXXXXX, \"name\": \"Sample Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": true, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1990.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy Sub-account object API examples Here is an example of an API call using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Create Request: curl -X POST \\ -H 'x-api-key:PARTNER_ACCOUNT_KEY' \\ -H 'Content-Type:application/json' \\ -d '{\"sub_account\":{\"name\":\"Sample Sub-Account\"}, \"users\":[{\"email\":\"sample_user@sample.org\", \"password\":\"XXXXXX\", \"first_name\":\"Sample\", \"last_name\":\"User\", \"role\":\"admin\", \"owner\":\"true\"}]}' \\ https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy Response (line breaks are for readability): { \"id\": XXXXXX, \"name\": \"Sample Sub-Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": false, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1999.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.29599,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> sub-account object",
        "sections": "<em>Partnership</em> <em>API</em> sub-account object",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " the <em>Partnership</em> <em>API</em> user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user&#x27;s current password. For some <em>New</em> <em>Relic</em> organizations"
      },
      "id": "603eba3ae7b9d2b8e32a07b5"
    },
    {
      "sections": [
        "Partnership API reference",
        "Requirements",
        "Find your Partnership API key",
        "Find your Partner ID",
        "Authenticate the API call",
        "Notes for partners who manage New Relic accounts",
        "Errors"
      ],
      "title": "Partnership API reference",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7bc374ae0e6f6917aa82a70e582606ea4a9878ab",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partner-api-reference/",
      "published_at": "2021-05-05T18:37:41Z",
      "updated_at": "2021-03-30T03:04:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains technical details about using the Partnership API. For an introduction and requirements, first read Intro to Partnership API. Requirements For requirements, see Intro to Partnership API. Find your Partnership API key The Partnership API requires that you authenticate with the REST API key that is specific to your partnership owner account (you cannot use the other REST API keys). When using your Partnership API key with calls to REST API (v2) endpoints that require the use of an Admin user's API key, see Admin user's API Key and partnerships. Find your Partner ID The Partnership API also requires that you authenticate by providing a Partner ID specific to your partnership. This is unique from the account ID for your partnership owner account. To obtain your Partner ID, go to your partner admin console and retrieve the partner ID number that is listed in your URL: https://partner-admin-console.newrelic.com/accounts/​$ACCOUNT_ID/admin_console/partnerships/$PARTNER_ID Copy You must include the Partner ID as part of the base URL for the Partner API. URL component URL pattern Partner API endpoint https://rpm.newrelic.com/api/v2/partners/PARTNER_ID Copy Resource URL patterns /accounts /accounts/ACCOUNT_ID /accounts/ACCOUNT_ID/users /accounts/ACCOUNT_ID/users/USER_ID /accounts/ACCOUNT_ID/subscriptions /accounts/ACCOUNT_ID/subscriptions/SUBSCRIPTION_ID Copy Example https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/ACCOUNT_ID Copy Authenticate the API call To authenticate to the Partner API when making an API call: Add a request header labeled x-api-key and set its value to your Partner API key. Include your Partner ID at the specified point in the request URI. Notes for partners who manage New Relic accounts For partners who manage New Relic accounts for their customers, the initial API call for all account-level interactions is to \"create account.\" This call returns an xml record of the newly created account. Part of this record is the account_id. All of the other calls in the Partnership API require the account_id as a parameter. Provision will need to be made by the partner to parse the returned xml extract, store the account_id, and associate it with the users' partner account record. Errors New Relic uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success and codes in the 4xx range indicate an error that resulted from the provided information (for example, a required parameter was missing). Error Probable cause 400 Bad Request Most commonly the call is missing a required parameter. 401 Unauthorized A valid API key was not provided. 402 Request Failed Parameters were valid but request failed for some reason. 404 Not Found The requested item doesn't exist. 422 Unprocessable Entity Your account has special terms and cannot be changed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.02446,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> reference",
        "sections": "Notes for <em>partners</em> who manage <em>New</em> <em>Relic</em> accounts",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " <em>API</em> key that is specific to your <em>partnership</em> owner account (you cannot use the other REST <em>API</em> keys). When using your <em>Partnership</em> <em>API</em> key with calls to REST <em>API</em> (v2) endpoints that require the use of an Admin user&#x27;s <em>API</em> key, see Admin user&#x27;s <em>API</em> Key and <em>partnerships</em>. Find your <em>Partner</em> ID"
      },
      "id": "603ebc5f28ccbc22b6eba780"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-sub-account-object": [
    {
      "sections": [
        "Partnership billing integration API",
        "Requirements",
        "Communication endpoint",
        "Billing API",
        "Customer subscription notification API",
        "Invoice notification API"
      ],
      "title": "Partnership billing integration API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "73da7e096ce56bb45e39bb95a1c2e0a0011be597",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-billing-integration-api/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-30T21:12:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Partnership API includes functionality for partners to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts. This is particularly useful for partners acting as resellers or managed service providers of New Relic accounts. For example, when customers of a New Relic reseller partner purchase a higher subscription level from New Relic's Sales team, New Relic replaces the old subscription with a new subscription. New Relic then uses the API to communicate this information to the partner. Requirements Before using this object, please read the Partnership API requirements. Communication endpoint Partners must implement a billing communication endpoint that identifies the partner's URL and PARTNER_ID. New Relic uses this endpoint to notify the partner that New Relic has made a change to a partner account's subscription or invoice information. The endpoint must support HTTPS. The partner-specified portion of the URL is identified from the Settings tab of New Relic's Partner Portal. The PARTNER_ID is the partner's external ID for this account. This value must be passed when the account is created by using the partner_external_identifier parameter. Billing API Supported functionality for the Partnership billing API includes: Customer subscription notification Invoice information notification Customer subscription notification API To communicate changes to a partner about a customer's subscription, New Relic uses the POST method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy Authentication is done via headers with the partner's REST API key or Admin user's API key. The Partnership API returns the results as JSON. Parameters: Name Type Description id String The customer's New Relic account ID subscription_id Integer Subscription's numeric ID subscription_string String Description of subscription for display price Integer Monthly price of subscription in cents number_of_hosts Integer Number of hosts starts Date Subscription's start date (yyyymmdd) expires Date Subscription's end date (yyyymmdd) Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed. Invoice notification API New Relic uses this endpoint to notify the partner of changes to a partner account's subscription level and invoice information. New Relic uses the PUT method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy OR https://partner-specified/partner-specified/PARTNER_ID.xml Copy The Partnership API returns the results as JSON or XML. Parameters: Name Type Description id string The customer's New Relic account ID subscription_id integer Subscription's numeric ID subscription_string string Description of subscription for display price integer Monthly price of subscription in cents Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.56516,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> billing integration <em>API</em>",
        "sections": "<em>Partnership</em> billing integration <em>API</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s <em>Partnership</em> <em>API</em> includes functionality for partners to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts. This is particularly useful for partners acting as resellers or managed service providers of <em>New</em> <em>Relic</em>"
      },
      "id": "603ec86e64441f09e44e8871"
    },
    {
      "sections": [
        "Partnership API reference",
        "Requirements",
        "Find your Partnership API key",
        "Find your Partner ID",
        "Authenticate the API call",
        "Notes for partners who manage New Relic accounts",
        "Errors"
      ],
      "title": "Partnership API reference",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7bc374ae0e6f6917aa82a70e582606ea4a9878ab",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partner-api-reference/",
      "published_at": "2021-05-05T18:37:41Z",
      "updated_at": "2021-03-30T03:04:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains technical details about using the Partnership API. For an introduction and requirements, first read Intro to Partnership API. Requirements For requirements, see Intro to Partnership API. Find your Partnership API key The Partnership API requires that you authenticate with the REST API key that is specific to your partnership owner account (you cannot use the other REST API keys). When using your Partnership API key with calls to REST API (v2) endpoints that require the use of an Admin user's API key, see Admin user's API Key and partnerships. Find your Partner ID The Partnership API also requires that you authenticate by providing a Partner ID specific to your partnership. This is unique from the account ID for your partnership owner account. To obtain your Partner ID, go to your partner admin console and retrieve the partner ID number that is listed in your URL: https://partner-admin-console.newrelic.com/accounts/​$ACCOUNT_ID/admin_console/partnerships/$PARTNER_ID Copy You must include the Partner ID as part of the base URL for the Partner API. URL component URL pattern Partner API endpoint https://rpm.newrelic.com/api/v2/partners/PARTNER_ID Copy Resource URL patterns /accounts /accounts/ACCOUNT_ID /accounts/ACCOUNT_ID/users /accounts/ACCOUNT_ID/users/USER_ID /accounts/ACCOUNT_ID/subscriptions /accounts/ACCOUNT_ID/subscriptions/SUBSCRIPTION_ID Copy Example https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/ACCOUNT_ID Copy Authenticate the API call To authenticate to the Partner API when making an API call: Add a request header labeled x-api-key and set its value to your Partner API key. Include your Partner ID at the specified point in the request URI. Notes for partners who manage New Relic accounts For partners who manage New Relic accounts for their customers, the initial API call for all account-level interactions is to \"create account.\" This call returns an xml record of the newly created account. Part of this record is the account_id. All of the other calls in the Partnership API require the account_id as a parameter. Provision will need to be made by the partner to parse the returned xml extract, store the account_id, and associate it with the users' partner account record. Errors New Relic uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success and codes in the 4xx range indicate an error that resulted from the provided information (for example, a required parameter was missing). Error Probable cause 400 Bad Request Most commonly the call is missing a required parameter. 401 Unauthorized A valid API key was not provided. 402 Request Failed Parameters were valid but request failed for some reason. 404 Not Found The requested item doesn't exist. 422 Unprocessable Entity Your account has special terms and cannot be changed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.02444,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> reference",
        "sections": "Notes for <em>partners</em> who manage <em>New</em> <em>Relic</em> accounts",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " <em>API</em> key that is specific to your <em>partnership</em> owner account (you cannot use the other REST <em>API</em> keys). When using your <em>Partnership</em> <em>API</em> key with calls to REST <em>API</em> (v2) endpoints that require the use of an Admin user&#x27;s <em>API</em> key, see Admin user&#x27;s <em>API</em> Key and <em>partnerships</em>. Find your <em>Partner</em> ID"
      },
      "id": "603ebc5f28ccbc22b6eba780"
    },
    {
      "sections": [
        "Product buckets",
        "Requirements",
        "Overview (#overview)",
        "Quantity by product",
        "Insights Events quantity",
        "Browser PageViews quantity",
        "Synthetics Checks quantity"
      ],
      "title": "Product buckets",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "fe7632af0936f9878b04ba0c25f7cf8a7f684399",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/product-buckets/",
      "published_at": "2021-05-05T18:29:33Z",
      "updated_at": "2021-03-29T21:27:06Z",
      "document_type": "page",
      "popularity": 1,
      "body": "For partnership accounts on our original product pricing, you can use the Partnership API for managing subscriptions. This doc explains some details for using the Browser, Synthetics, and Insights products. Requirements This doc applies only for partnership accounts on our original pricing plan. Before using this API, please read the Partnership API requirements. Overview (#overview) When using the Partnership API for Insights, Browser, and Synthetics products, you must provide a valid quantity value. This indicates the number of Insights Events, Browser PageViews, and Synthetics Checks provisioned to that account. New Relic uses this \"bucket\" pricing structure based on the quantity value in order to offer discounts on large volume purchases. Be sure to select an available bucket value. Otherwise, the New Relic Partnership API will return an error response. Quantity by product Here are the valid quantity values by New Relic product. Insights Events quantity Insights Pro Insights Pro Annual 25 25 50 50 75 75 300 300 625 625 1250 1250 2500 2500 5000 5000 10000 10000 20000 20000 40000 40000 60000 60000 80000 80000 100000 100000 120000 120000 140000 140000 Browser PageViews quantity Browser Pro Browser Pro Annualynthetics Checks quantity Synthetics Pro Synthetics Pro Annual 10000 10000 15000 15000 25000 25000 35000 35000 50000 50000 75000 75000 100000 100000 150000 150000 250000 250000 300000 300000 400000 400000 500000 500000 600000 600000 750000 750000 900000 900000 1000000 1000000 1150000 1150000 1300000 1300000 1500000 1500000 1750000 1750000 2000000 2000000 2500000 2500000 3000000 3000000 3500000 3500000 5000000 5000000 7000000 7000000 8500000 8500000 10000000 10000000 12500000 12500000 14000000 14000000 15000000 15000000 17500000 17500000 20000000 20000000",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 168.86038,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " provisioned to that account. <em>New</em> <em>Relic</em> uses this &quot;bucket&quot; pricing structure based on the quantity value in order to offer discounts on large volume purchases. Be sure to select an available bucket value. Otherwise, the <em>New</em> <em>Relic</em> <em>Partnership</em> <em>API</em> will return an error response. Quantity by product Here"
      },
      "id": "6044181d28ccbc2ea42c608a"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-subscription-object": [
    {
      "sections": [
        "Partnership billing integration API",
        "Requirements",
        "Communication endpoint",
        "Billing API",
        "Customer subscription notification API",
        "Invoice notification API"
      ],
      "title": "Partnership billing integration API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "73da7e096ce56bb45e39bb95a1c2e0a0011be597",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-billing-integration-api/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-30T21:12:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Partnership API includes functionality for partners to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts. This is particularly useful for partners acting as resellers or managed service providers of New Relic accounts. For example, when customers of a New Relic reseller partner purchase a higher subscription level from New Relic's Sales team, New Relic replaces the old subscription with a new subscription. New Relic then uses the API to communicate this information to the partner. Requirements Before using this object, please read the Partnership API requirements. Communication endpoint Partners must implement a billing communication endpoint that identifies the partner's URL and PARTNER_ID. New Relic uses this endpoint to notify the partner that New Relic has made a change to a partner account's subscription or invoice information. The endpoint must support HTTPS. The partner-specified portion of the URL is identified from the Settings tab of New Relic's Partner Portal. The PARTNER_ID is the partner's external ID for this account. This value must be passed when the account is created by using the partner_external_identifier parameter. Billing API Supported functionality for the Partnership billing API includes: Customer subscription notification Invoice information notification Customer subscription notification API To communicate changes to a partner about a customer's subscription, New Relic uses the POST method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy Authentication is done via headers with the partner's REST API key or Admin user's API key. The Partnership API returns the results as JSON. Parameters: Name Type Description id String The customer's New Relic account ID subscription_id Integer Subscription's numeric ID subscription_string String Description of subscription for display price Integer Monthly price of subscription in cents number_of_hosts Integer Number of hosts starts Date Subscription's start date (yyyymmdd) expires Date Subscription's end date (yyyymmdd) Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed. Invoice notification API New Relic uses this endpoint to notify the partner of changes to a partner account's subscription level and invoice information. New Relic uses the PUT method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy OR https://partner-specified/partner-specified/PARTNER_ID.xml Copy The Partnership API returns the results as JSON or XML. Parameters: Name Type Description id string The customer's New Relic account ID subscription_id integer Subscription's numeric ID subscription_string string Description of subscription for display price integer Monthly price of subscription in cents Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.56516,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> billing integration <em>API</em>",
        "sections": "<em>Partnership</em> billing integration <em>API</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s <em>Partnership</em> <em>API</em> includes functionality for partners to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts. This is particularly useful for partners acting as resellers or managed service providers of <em>New</em> <em>Relic</em>"
      },
      "id": "603ec86e64441f09e44e8871"
    },
    {
      "sections": [
        "Partnership API sub-account object",
        "Requirements",
        "Introduction to using sub-accounts",
        "Sub-account object attributes",
        "name (REQUIRED)",
        "allow_api_access",
        "testing",
        "users (REQUIRED for some accounts)",
        "password (REQUIRED)",
        "Sub-account API calls",
        "JSON example",
        "Sub-account object JSON request",
        "JSON response",
        "Sub-account object API examples",
        "Create"
      ],
      "title": "Partnership API sub-account object",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7fb13302d892a5f89c6c9371f35a60bf1ed9f6a5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-sub-account-object/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-30T12:15:14Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains how to use the Partnership API to manage sub-accounts. For accounts, you'd use the sub-account object. Requirements You may not have access to using this object. Before using the Partnership API, first read the requirements. Introduction to using sub-accounts Some notes about using the sub-account object: To manage existing master accounts or existing sub-accounts, use the Partnership API account object. A parent account may have more than one associated sub-account, but every sub-account must correspond to one and only one parent account. Every sub-account must have at least a primary_admin user. You cannot create a sub-account without connecting it to an existing parent account and adding at least one user. Sub-account object attributes Before using the Partnership API, first read the requirements. Here are the Partnership API sub-account object's attributes: name (REQUIRED) Type: String Default: (none) This name must be unique in New Relic's database. If the specified name is not unique, it will be auto-incremented with a numeric suffix as follows: conflicting_name_1 conflicting_name_2 etc. Copy allow_api_access Type: Boolean Default: False This flag allows API access to application data. This must be set to true for partnerships remotely administering accounts. testing Type: Boolean Default: False Use this flag to indicate a test account. Test accounts are assumed to contain garbage data and are ignored by internal systems. The data they generate may be deleted at any time. users (REQUIRED for some accounts) Type: Array Default: (none) An array defining a list of users. There are some restrictions in place dependent on the status of your account: For customer partnerships who have switched to the New Relic One user model: do not define users. If you add users with this field, they will be ignored. Instead, to add users, you'd use these user management procedures. For all other accounts, which have users on our original user model: When you create the sub-account, you can define only one user: the account Owner. To add additional users, use the Partnership API user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user's current password. For some New Relic organizations, sub-accounts can also be created via the master account's Account settings page in the New Relic UI. Sub-account API calls Here is the URL pattern to create sub-accounts. Notice that the Parent Account ID must be specified. If using this URL pattern, send the JSON object along with an HTTP header containing the Partner API key. For example: POST .../api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts​ x-api-key:PARTNER_ACCOUNT_KEY Content-Type: application/json { JSON data } Copy Call Resource URL pattern Create a sub-account with the given parameters. POST /api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy JSON example Here is an example of a JSON request and response using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Sub-account object JSON request { \"account\": { \"name\": \"Sample Sub-Account\", \"users\": [ { \"email\": \"sample_user@sample.org\", \"password\": \"XXXXXXXX\", \"owner\": true, \"role\": \"admin\", \"first_name\": \"Sample\", \"last_name\": \"User\" } ], \"allow_api_access\": true, \"phone_number\": \"555-555-5555\" } } Copy JSON response { \"id\": XXXXXX, \"name\": \"Sample Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": true, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1990.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy Sub-account object API examples Here is an example of an API call using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Create Request: curl -X POST \\ -H 'x-api-key:PARTNER_ACCOUNT_KEY' \\ -H 'Content-Type:application/json' \\ -d '{\"sub_account\":{\"name\":\"Sample Sub-Account\"}, \"users\":[{\"email\":\"sample_user@sample.org\", \"password\":\"XXXXXX\", \"first_name\":\"Sample\", \"last_name\":\"User\", \"role\":\"admin\", \"owner\":\"true\"}]}' \\ https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy Response (line breaks are for readability): { \"id\": XXXXXX, \"name\": \"Sample Sub-Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": false, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1999.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.29597,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> sub-account object",
        "sections": "<em>Partnership</em> <em>API</em> sub-account object",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " the <em>Partnership</em> <em>API</em> user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user&#x27;s current password. For some <em>New</em> <em>Relic</em> organizations"
      },
      "id": "603eba3ae7b9d2b8e32a07b5"
    },
    {
      "sections": [
        "Partnership API reference",
        "Requirements",
        "Find your Partnership API key",
        "Find your Partner ID",
        "Authenticate the API call",
        "Notes for partners who manage New Relic accounts",
        "Errors"
      ],
      "title": "Partnership API reference",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7bc374ae0e6f6917aa82a70e582606ea4a9878ab",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partner-api-reference/",
      "published_at": "2021-05-05T18:37:41Z",
      "updated_at": "2021-03-30T03:04:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains technical details about using the Partnership API. For an introduction and requirements, first read Intro to Partnership API. Requirements For requirements, see Intro to Partnership API. Find your Partnership API key The Partnership API requires that you authenticate with the REST API key that is specific to your partnership owner account (you cannot use the other REST API keys). When using your Partnership API key with calls to REST API (v2) endpoints that require the use of an Admin user's API key, see Admin user's API Key and partnerships. Find your Partner ID The Partnership API also requires that you authenticate by providing a Partner ID specific to your partnership. This is unique from the account ID for your partnership owner account. To obtain your Partner ID, go to your partner admin console and retrieve the partner ID number that is listed in your URL: https://partner-admin-console.newrelic.com/accounts/​$ACCOUNT_ID/admin_console/partnerships/$PARTNER_ID Copy You must include the Partner ID as part of the base URL for the Partner API. URL component URL pattern Partner API endpoint https://rpm.newrelic.com/api/v2/partners/PARTNER_ID Copy Resource URL patterns /accounts /accounts/ACCOUNT_ID /accounts/ACCOUNT_ID/users /accounts/ACCOUNT_ID/users/USER_ID /accounts/ACCOUNT_ID/subscriptions /accounts/ACCOUNT_ID/subscriptions/SUBSCRIPTION_ID Copy Example https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/ACCOUNT_ID Copy Authenticate the API call To authenticate to the Partner API when making an API call: Add a request header labeled x-api-key and set its value to your Partner API key. Include your Partner ID at the specified point in the request URI. Notes for partners who manage New Relic accounts For partners who manage New Relic accounts for their customers, the initial API call for all account-level interactions is to \"create account.\" This call returns an xml record of the newly created account. Part of this record is the account_id. All of the other calls in the Partnership API require the account_id as a parameter. Provision will need to be made by the partner to parse the returned xml extract, store the account_id, and associate it with the users' partner account record. Errors New Relic uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success and codes in the 4xx range indicate an error that resulted from the provided information (for example, a required parameter was missing). Error Probable cause 400 Bad Request Most commonly the call is missing a required parameter. 401 Unauthorized A valid API key was not provided. 402 Request Failed Parameters were valid but request failed for some reason. 404 Not Found The requested item doesn't exist. 422 Unprocessable Entity Your account has special terms and cannot be changed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.02444,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> reference",
        "sections": "Notes for <em>partners</em> who manage <em>New</em> <em>Relic</em> accounts",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " <em>API</em> key that is specific to your <em>partnership</em> owner account (you cannot use the other REST <em>API</em> keys). When using your <em>Partnership</em> <em>API</em> key with calls to REST <em>API</em> (v2) endpoints that require the use of an Admin user&#x27;s <em>API</em> key, see Admin user&#x27;s <em>API</em> Key and <em>partnerships</em>. Find your <em>Partner</em> ID"
      },
      "id": "603ebc5f28ccbc22b6eba780"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-user-object": [
    {
      "sections": [
        "Partnership billing integration API",
        "Requirements",
        "Communication endpoint",
        "Billing API",
        "Customer subscription notification API",
        "Invoice notification API"
      ],
      "title": "Partnership billing integration API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "73da7e096ce56bb45e39bb95a1c2e0a0011be597",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-billing-integration-api/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-30T21:12:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Partnership API includes functionality for partners to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts. This is particularly useful for partners acting as resellers or managed service providers of New Relic accounts. For example, when customers of a New Relic reseller partner purchase a higher subscription level from New Relic's Sales team, New Relic replaces the old subscription with a new subscription. New Relic then uses the API to communicate this information to the partner. Requirements Before using this object, please read the Partnership API requirements. Communication endpoint Partners must implement a billing communication endpoint that identifies the partner's URL and PARTNER_ID. New Relic uses this endpoint to notify the partner that New Relic has made a change to a partner account's subscription or invoice information. The endpoint must support HTTPS. The partner-specified portion of the URL is identified from the Settings tab of New Relic's Partner Portal. The PARTNER_ID is the partner's external ID for this account. This value must be passed when the account is created by using the partner_external_identifier parameter. Billing API Supported functionality for the Partnership billing API includes: Customer subscription notification Invoice information notification Customer subscription notification API To communicate changes to a partner about a customer's subscription, New Relic uses the POST method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy Authentication is done via headers with the partner's REST API key or Admin user's API key. The Partnership API returns the results as JSON. Parameters: Name Type Description id String The customer's New Relic account ID subscription_id Integer Subscription's numeric ID subscription_string String Description of subscription for display price Integer Monthly price of subscription in cents number_of_hosts Integer Number of hosts starts Date Subscription's start date (yyyymmdd) expires Date Subscription's end date (yyyymmdd) Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed. Invoice notification API New Relic uses this endpoint to notify the partner of changes to a partner account's subscription level and invoice information. New Relic uses the PUT method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy OR https://partner-specified/partner-specified/PARTNER_ID.xml Copy The Partnership API returns the results as JSON or XML. Parameters: Name Type Description id string The customer's New Relic account ID subscription_id integer Subscription's numeric ID subscription_string string Description of subscription for display price integer Monthly price of subscription in cents Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.56516,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> billing integration <em>API</em>",
        "sections": "<em>Partnership</em> billing integration <em>API</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s <em>Partnership</em> <em>API</em> includes functionality for partners to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts. This is particularly useful for partners acting as resellers or managed service providers of <em>New</em> <em>Relic</em>"
      },
      "id": "603ec86e64441f09e44e8871"
    },
    {
      "sections": [
        "Partnership API sub-account object",
        "Requirements",
        "Introduction to using sub-accounts",
        "Sub-account object attributes",
        "name (REQUIRED)",
        "allow_api_access",
        "testing",
        "users (REQUIRED for some accounts)",
        "password (REQUIRED)",
        "Sub-account API calls",
        "JSON example",
        "Sub-account object JSON request",
        "JSON response",
        "Sub-account object API examples",
        "Create"
      ],
      "title": "Partnership API sub-account object",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7fb13302d892a5f89c6c9371f35a60bf1ed9f6a5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-sub-account-object/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-30T12:15:14Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains how to use the Partnership API to manage sub-accounts. For accounts, you'd use the sub-account object. Requirements You may not have access to using this object. Before using the Partnership API, first read the requirements. Introduction to using sub-accounts Some notes about using the sub-account object: To manage existing master accounts or existing sub-accounts, use the Partnership API account object. A parent account may have more than one associated sub-account, but every sub-account must correspond to one and only one parent account. Every sub-account must have at least a primary_admin user. You cannot create a sub-account without connecting it to an existing parent account and adding at least one user. Sub-account object attributes Before using the Partnership API, first read the requirements. Here are the Partnership API sub-account object's attributes: name (REQUIRED) Type: String Default: (none) This name must be unique in New Relic's database. If the specified name is not unique, it will be auto-incremented with a numeric suffix as follows: conflicting_name_1 conflicting_name_2 etc. Copy allow_api_access Type: Boolean Default: False This flag allows API access to application data. This must be set to true for partnerships remotely administering accounts. testing Type: Boolean Default: False Use this flag to indicate a test account. Test accounts are assumed to contain garbage data and are ignored by internal systems. The data they generate may be deleted at any time. users (REQUIRED for some accounts) Type: Array Default: (none) An array defining a list of users. There are some restrictions in place dependent on the status of your account: For customer partnerships who have switched to the New Relic One user model: do not define users. If you add users with this field, they will be ignored. Instead, to add users, you'd use these user management procedures. For all other accounts, which have users on our original user model: When you create the sub-account, you can define only one user: the account Owner. To add additional users, use the Partnership API user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user's current password. For some New Relic organizations, sub-accounts can also be created via the master account's Account settings page in the New Relic UI. Sub-account API calls Here is the URL pattern to create sub-accounts. Notice that the Parent Account ID must be specified. If using this URL pattern, send the JSON object along with an HTTP header containing the Partner API key. For example: POST .../api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts​ x-api-key:PARTNER_ACCOUNT_KEY Content-Type: application/json { JSON data } Copy Call Resource URL pattern Create a sub-account with the given parameters. POST /api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy JSON example Here is an example of a JSON request and response using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Sub-account object JSON request { \"account\": { \"name\": \"Sample Sub-Account\", \"users\": [ { \"email\": \"sample_user@sample.org\", \"password\": \"XXXXXXXX\", \"owner\": true, \"role\": \"admin\", \"first_name\": \"Sample\", \"last_name\": \"User\" } ], \"allow_api_access\": true, \"phone_number\": \"555-555-5555\" } } Copy JSON response { \"id\": XXXXXX, \"name\": \"Sample Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": true, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1990.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy Sub-account object API examples Here is an example of an API call using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Create Request: curl -X POST \\ -H 'x-api-key:PARTNER_ACCOUNT_KEY' \\ -H 'Content-Type:application/json' \\ -d '{\"sub_account\":{\"name\":\"Sample Sub-Account\"}, \"users\":[{\"email\":\"sample_user@sample.org\", \"password\":\"XXXXXX\", \"first_name\":\"Sample\", \"last_name\":\"User\", \"role\":\"admin\", \"owner\":\"true\"}]}' \\ https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy Response (line breaks are for readability): { \"id\": XXXXXX, \"name\": \"Sample Sub-Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": false, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1999.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.29596,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> sub-account object",
        "sections": "<em>Partnership</em> <em>API</em> sub-account object",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " the <em>Partnership</em> <em>API</em> user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user&#x27;s current password. For some <em>New</em> <em>Relic</em> organizations"
      },
      "id": "603eba3ae7b9d2b8e32a07b5"
    },
    {
      "sections": [
        "Partnership API reference",
        "Requirements",
        "Find your Partnership API key",
        "Find your Partner ID",
        "Authenticate the API call",
        "Notes for partners who manage New Relic accounts",
        "Errors"
      ],
      "title": "Partnership API reference",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7bc374ae0e6f6917aa82a70e582606ea4a9878ab",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partner-api-reference/",
      "published_at": "2021-05-05T18:37:41Z",
      "updated_at": "2021-03-30T03:04:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains technical details about using the Partnership API. For an introduction and requirements, first read Intro to Partnership API. Requirements For requirements, see Intro to Partnership API. Find your Partnership API key The Partnership API requires that you authenticate with the REST API key that is specific to your partnership owner account (you cannot use the other REST API keys). When using your Partnership API key with calls to REST API (v2) endpoints that require the use of an Admin user's API key, see Admin user's API Key and partnerships. Find your Partner ID The Partnership API also requires that you authenticate by providing a Partner ID specific to your partnership. This is unique from the account ID for your partnership owner account. To obtain your Partner ID, go to your partner admin console and retrieve the partner ID number that is listed in your URL: https://partner-admin-console.newrelic.com/accounts/​$ACCOUNT_ID/admin_console/partnerships/$PARTNER_ID Copy You must include the Partner ID as part of the base URL for the Partner API. URL component URL pattern Partner API endpoint https://rpm.newrelic.com/api/v2/partners/PARTNER_ID Copy Resource URL patterns /accounts /accounts/ACCOUNT_ID /accounts/ACCOUNT_ID/users /accounts/ACCOUNT_ID/users/USER_ID /accounts/ACCOUNT_ID/subscriptions /accounts/ACCOUNT_ID/subscriptions/SUBSCRIPTION_ID Copy Example https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/ACCOUNT_ID Copy Authenticate the API call To authenticate to the Partner API when making an API call: Add a request header labeled x-api-key and set its value to your Partner API key. Include your Partner ID at the specified point in the request URI. Notes for partners who manage New Relic accounts For partners who manage New Relic accounts for their customers, the initial API call for all account-level interactions is to \"create account.\" This call returns an xml record of the newly created account. Part of this record is the account_id. All of the other calls in the Partnership API require the account_id as a parameter. Provision will need to be made by the partner to parse the returned xml extract, store the account_id, and associate it with the users' partner account record. Errors New Relic uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success and codes in the 4xx range indicate an error that resulted from the provided information (for example, a required parameter was missing). Error Probable cause 400 Bad Request Most commonly the call is missing a required parameter. 401 Unauthorized A valid API key was not provided. 402 Request Failed Parameters were valid but request failed for some reason. 404 Not Found The requested item doesn't exist. 422 Unprocessable Entity Your account has special terms and cannot be changed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.02444,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> reference",
        "sections": "Notes for <em>partners</em> who manage <em>New</em> <em>Relic</em> accounts",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " <em>API</em> key that is specific to your <em>partnership</em> owner account (you cannot use the other REST <em>API</em> keys). When using your <em>Partnership</em> <em>API</em> key with calls to REST <em>API</em> (v2) endpoints that require the use of an Admin user&#x27;s <em>API</em> key, see Admin user&#x27;s <em>API</em> Key and <em>partnerships</em>. Find your <em>Partner</em> ID"
      },
      "id": "603ebc5f28ccbc22b6eba780"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/partner-api/partnership-billing-integration-api": [
    {
      "sections": [
        "Partnership API sub-account object",
        "Requirements",
        "Introduction to using sub-accounts",
        "Sub-account object attributes",
        "name (REQUIRED)",
        "allow_api_access",
        "testing",
        "users (REQUIRED for some accounts)",
        "password (REQUIRED)",
        "Sub-account API calls",
        "JSON example",
        "Sub-account object JSON request",
        "JSON response",
        "Sub-account object API examples",
        "Create"
      ],
      "title": "Partnership API sub-account object",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7fb13302d892a5f89c6c9371f35a60bf1ed9f6a5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-sub-account-object/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-30T12:15:14Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains how to use the Partnership API to manage sub-accounts. For accounts, you'd use the sub-account object. Requirements You may not have access to using this object. Before using the Partnership API, first read the requirements. Introduction to using sub-accounts Some notes about using the sub-account object: To manage existing master accounts or existing sub-accounts, use the Partnership API account object. A parent account may have more than one associated sub-account, but every sub-account must correspond to one and only one parent account. Every sub-account must have at least a primary_admin user. You cannot create a sub-account without connecting it to an existing parent account and adding at least one user. Sub-account object attributes Before using the Partnership API, first read the requirements. Here are the Partnership API sub-account object's attributes: name (REQUIRED) Type: String Default: (none) This name must be unique in New Relic's database. If the specified name is not unique, it will be auto-incremented with a numeric suffix as follows: conflicting_name_1 conflicting_name_2 etc. Copy allow_api_access Type: Boolean Default: False This flag allows API access to application data. This must be set to true for partnerships remotely administering accounts. testing Type: Boolean Default: False Use this flag to indicate a test account. Test accounts are assumed to contain garbage data and are ignored by internal systems. The data they generate may be deleted at any time. users (REQUIRED for some accounts) Type: Array Default: (none) An array defining a list of users. There are some restrictions in place dependent on the status of your account: For customer partnerships who have switched to the New Relic One user model: do not define users. If you add users with this field, they will be ignored. Instead, to add users, you'd use these user management procedures. For all other accounts, which have users on our original user model: When you create the sub-account, you can define only one user: the account Owner. To add additional users, use the Partnership API user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user's current password. For some New Relic organizations, sub-accounts can also be created via the master account's Account settings page in the New Relic UI. Sub-account API calls Here is the URL pattern to create sub-accounts. Notice that the Parent Account ID must be specified. If using this URL pattern, send the JSON object along with an HTTP header containing the Partner API key. For example: POST .../api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts​ x-api-key:PARTNER_ACCOUNT_KEY Content-Type: application/json { JSON data } Copy Call Resource URL pattern Create a sub-account with the given parameters. POST /api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy JSON example Here is an example of a JSON request and response using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Sub-account object JSON request { \"account\": { \"name\": \"Sample Sub-Account\", \"users\": [ { \"email\": \"sample_user@sample.org\", \"password\": \"XXXXXXXX\", \"owner\": true, \"role\": \"admin\", \"first_name\": \"Sample\", \"last_name\": \"User\" } ], \"allow_api_access\": true, \"phone_number\": \"555-555-5555\" } } Copy JSON response { \"id\": XXXXXX, \"name\": \"Sample Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": true, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1990.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy Sub-account object API examples Here is an example of an API call using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Create Request: curl -X POST \\ -H 'x-api-key:PARTNER_ACCOUNT_KEY' \\ -H 'Content-Type:application/json' \\ -d '{\"sub_account\":{\"name\":\"Sample Sub-Account\"}, \"users\":[{\"email\":\"sample_user@sample.org\", \"password\":\"XXXXXX\", \"first_name\":\"Sample\", \"last_name\":\"User\", \"role\":\"admin\", \"owner\":\"true\"}]}' \\ https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy Response (line breaks are for readability): { \"id\": XXXXXX, \"name\": \"Sample Sub-Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": false, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1999.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.29596,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> sub-account object",
        "sections": "<em>Partnership</em> <em>API</em> sub-account object",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " the <em>Partnership</em> <em>API</em> user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user&#x27;s current password. For some <em>New</em> <em>Relic</em> organizations"
      },
      "id": "603eba3ae7b9d2b8e32a07b5"
    },
    {
      "sections": [
        "Partnership API reference",
        "Requirements",
        "Find your Partnership API key",
        "Find your Partner ID",
        "Authenticate the API call",
        "Notes for partners who manage New Relic accounts",
        "Errors"
      ],
      "title": "Partnership API reference",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7bc374ae0e6f6917aa82a70e582606ea4a9878ab",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partner-api-reference/",
      "published_at": "2021-05-05T18:37:41Z",
      "updated_at": "2021-03-30T03:04:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains technical details about using the Partnership API. For an introduction and requirements, first read Intro to Partnership API. Requirements For requirements, see Intro to Partnership API. Find your Partnership API key The Partnership API requires that you authenticate with the REST API key that is specific to your partnership owner account (you cannot use the other REST API keys). When using your Partnership API key with calls to REST API (v2) endpoints that require the use of an Admin user's API key, see Admin user's API Key and partnerships. Find your Partner ID The Partnership API also requires that you authenticate by providing a Partner ID specific to your partnership. This is unique from the account ID for your partnership owner account. To obtain your Partner ID, go to your partner admin console and retrieve the partner ID number that is listed in your URL: https://partner-admin-console.newrelic.com/accounts/​$ACCOUNT_ID/admin_console/partnerships/$PARTNER_ID Copy You must include the Partner ID as part of the base URL for the Partner API. URL component URL pattern Partner API endpoint https://rpm.newrelic.com/api/v2/partners/PARTNER_ID Copy Resource URL patterns /accounts /accounts/ACCOUNT_ID /accounts/ACCOUNT_ID/users /accounts/ACCOUNT_ID/users/USER_ID /accounts/ACCOUNT_ID/subscriptions /accounts/ACCOUNT_ID/subscriptions/SUBSCRIPTION_ID Copy Example https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/ACCOUNT_ID Copy Authenticate the API call To authenticate to the Partner API when making an API call: Add a request header labeled x-api-key and set its value to your Partner API key. Include your Partner ID at the specified point in the request URI. Notes for partners who manage New Relic accounts For partners who manage New Relic accounts for their customers, the initial API call for all account-level interactions is to \"create account.\" This call returns an xml record of the newly created account. Part of this record is the account_id. All of the other calls in the Partnership API require the account_id as a parameter. Provision will need to be made by the partner to parse the returned xml extract, store the account_id, and associate it with the users' partner account record. Errors New Relic uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success and codes in the 4xx range indicate an error that resulted from the provided information (for example, a required parameter was missing). Error Probable cause 400 Bad Request Most commonly the call is missing a required parameter. 401 Unauthorized A valid API key was not provided. 402 Request Failed Parameters were valid but request failed for some reason. 404 Not Found The requested item doesn't exist. 422 Unprocessable Entity Your account has special terms and cannot be changed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.02444,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> reference",
        "sections": "Notes for <em>partners</em> who manage <em>New</em> <em>Relic</em> accounts",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " <em>API</em> key that is specific to your <em>partnership</em> owner account (you cannot use the other REST <em>API</em> keys). When using your <em>Partnership</em> <em>API</em> key with calls to REST <em>API</em> (v2) endpoints that require the use of an Admin user&#x27;s <em>API</em> key, see Admin user&#x27;s <em>API</em> Key and <em>partnerships</em>. Find your <em>Partner</em> ID"
      },
      "id": "603ebc5f28ccbc22b6eba780"
    },
    {
      "sections": [
        "Product buckets",
        "Requirements",
        "Overview (#overview)",
        "Quantity by product",
        "Insights Events quantity",
        "Browser PageViews quantity",
        "Synthetics Checks quantity"
      ],
      "title": "Product buckets",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "fe7632af0936f9878b04ba0c25f7cf8a7f684399",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/product-buckets/",
      "published_at": "2021-05-05T18:29:33Z",
      "updated_at": "2021-03-29T21:27:06Z",
      "document_type": "page",
      "popularity": 1,
      "body": "For partnership accounts on our original product pricing, you can use the Partnership API for managing subscriptions. This doc explains some details for using the Browser, Synthetics, and Insights products. Requirements This doc applies only for partnership accounts on our original pricing plan. Before using this API, please read the Partnership API requirements. Overview (#overview) When using the Partnership API for Insights, Browser, and Synthetics products, you must provide a valid quantity value. This indicates the number of Insights Events, Browser PageViews, and Synthetics Checks provisioned to that account. New Relic uses this \"bucket\" pricing structure based on the quantity value in order to offer discounts on large volume purchases. Be sure to select an available bucket value. Otherwise, the New Relic Partnership API will return an error response. Quantity by product Here are the valid quantity values by New Relic product. Insights Events quantity Insights Pro Insights Pro Annual 25 25 50 50 75 75 300 300 625 625 1250 1250 2500 2500 5000 5000 10000 10000 20000 20000 40000 40000 60000 60000 80000 80000 100000 100000 120000 120000 140000 140000 Browser PageViews quantity Browser Pro Browser Pro Annualynthetics Checks quantity Synthetics Pro Synthetics Pro Annual 10000 10000 15000 15000 25000 25000 35000 35000 50000 50000 75000 75000 100000 100000 150000 150000 250000 250000 300000 300000 400000 400000 500000 500000 600000 600000 750000 750000 900000 900000 1000000 1000000 1150000 1150000 1300000 1300000 1500000 1500000 1750000 1750000 2000000 2000000 2500000 2500000 3000000 3000000 3500000 3500000 5000000 5000000 7000000 7000000 8500000 8500000 10000000 10000000 12500000 12500000 14000000 14000000 15000000 15000000 17500000 17500000 20000000 20000000",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 168.86037,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " provisioned to that account. <em>New</em> <em>Relic</em> uses this &quot;bucket&quot; pricing structure based on the quantity value in order to offer discounts on large volume purchases. Be sure to select an available bucket value. Otherwise, the <em>New</em> <em>Relic</em> <em>Partnership</em> <em>API</em> will return an error response. Quantity by product Here"
      },
      "id": "6044181d28ccbc2ea42c608a"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/partner-api/product-buckets": [
    {
      "sections": [
        "Partnership billing integration API",
        "Requirements",
        "Communication endpoint",
        "Billing API",
        "Customer subscription notification API",
        "Invoice notification API"
      ],
      "title": "Partnership billing integration API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "73da7e096ce56bb45e39bb95a1c2e0a0011be597",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-billing-integration-api/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-30T21:12:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Partnership API includes functionality for partners to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts. This is particularly useful for partners acting as resellers or managed service providers of New Relic accounts. For example, when customers of a New Relic reseller partner purchase a higher subscription level from New Relic's Sales team, New Relic replaces the old subscription with a new subscription. New Relic then uses the API to communicate this information to the partner. Requirements Before using this object, please read the Partnership API requirements. Communication endpoint Partners must implement a billing communication endpoint that identifies the partner's URL and PARTNER_ID. New Relic uses this endpoint to notify the partner that New Relic has made a change to a partner account's subscription or invoice information. The endpoint must support HTTPS. The partner-specified portion of the URL is identified from the Settings tab of New Relic's Partner Portal. The PARTNER_ID is the partner's external ID for this account. This value must be passed when the account is created by using the partner_external_identifier parameter. Billing API Supported functionality for the Partnership billing API includes: Customer subscription notification Invoice information notification Customer subscription notification API To communicate changes to a partner about a customer's subscription, New Relic uses the POST method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy Authentication is done via headers with the partner's REST API key or Admin user's API key. The Partnership API returns the results as JSON. Parameters: Name Type Description id String The customer's New Relic account ID subscription_id Integer Subscription's numeric ID subscription_string String Description of subscription for display price Integer Monthly price of subscription in cents number_of_hosts Integer Number of hosts starts Date Subscription's start date (yyyymmdd) expires Date Subscription's end date (yyyymmdd) Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed. Invoice notification API New Relic uses this endpoint to notify the partner of changes to a partner account's subscription level and invoice information. New Relic uses the PUT method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy OR https://partner-specified/partner-specified/PARTNER_ID.xml Copy The Partnership API returns the results as JSON or XML. Parameters: Name Type Description id string The customer's New Relic account ID subscription_id integer Subscription's numeric ID subscription_string string Description of subscription for display price integer Monthly price of subscription in cents Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.56514,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> billing integration <em>API</em>",
        "sections": "<em>Partnership</em> billing integration <em>API</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s <em>Partnership</em> <em>API</em> includes functionality for partners to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts. This is particularly useful for partners acting as resellers or managed service providers of <em>New</em> <em>Relic</em>"
      },
      "id": "603ec86e64441f09e44e8871"
    },
    {
      "sections": [
        "Partnership API sub-account object",
        "Requirements",
        "Introduction to using sub-accounts",
        "Sub-account object attributes",
        "name (REQUIRED)",
        "allow_api_access",
        "testing",
        "users (REQUIRED for some accounts)",
        "password (REQUIRED)",
        "Sub-account API calls",
        "JSON example",
        "Sub-account object JSON request",
        "JSON response",
        "Sub-account object API examples",
        "Create"
      ],
      "title": "Partnership API sub-account object",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7fb13302d892a5f89c6c9371f35a60bf1ed9f6a5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-sub-account-object/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-30T12:15:14Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains how to use the Partnership API to manage sub-accounts. For accounts, you'd use the sub-account object. Requirements You may not have access to using this object. Before using the Partnership API, first read the requirements. Introduction to using sub-accounts Some notes about using the sub-account object: To manage existing master accounts or existing sub-accounts, use the Partnership API account object. A parent account may have more than one associated sub-account, but every sub-account must correspond to one and only one parent account. Every sub-account must have at least a primary_admin user. You cannot create a sub-account without connecting it to an existing parent account and adding at least one user. Sub-account object attributes Before using the Partnership API, first read the requirements. Here are the Partnership API sub-account object's attributes: name (REQUIRED) Type: String Default: (none) This name must be unique in New Relic's database. If the specified name is not unique, it will be auto-incremented with a numeric suffix as follows: conflicting_name_1 conflicting_name_2 etc. Copy allow_api_access Type: Boolean Default: False This flag allows API access to application data. This must be set to true for partnerships remotely administering accounts. testing Type: Boolean Default: False Use this flag to indicate a test account. Test accounts are assumed to contain garbage data and are ignored by internal systems. The data they generate may be deleted at any time. users (REQUIRED for some accounts) Type: Array Default: (none) An array defining a list of users. There are some restrictions in place dependent on the status of your account: For customer partnerships who have switched to the New Relic One user model: do not define users. If you add users with this field, they will be ignored. Instead, to add users, you'd use these user management procedures. For all other accounts, which have users on our original user model: When you create the sub-account, you can define only one user: the account Owner. To add additional users, use the Partnership API user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user's current password. For some New Relic organizations, sub-accounts can also be created via the master account's Account settings page in the New Relic UI. Sub-account API calls Here is the URL pattern to create sub-accounts. Notice that the Parent Account ID must be specified. If using this URL pattern, send the JSON object along with an HTTP header containing the Partner API key. For example: POST .../api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts​ x-api-key:PARTNER_ACCOUNT_KEY Content-Type: application/json { JSON data } Copy Call Resource URL pattern Create a sub-account with the given parameters. POST /api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy JSON example Here is an example of a JSON request and response using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Sub-account object JSON request { \"account\": { \"name\": \"Sample Sub-Account\", \"users\": [ { \"email\": \"sample_user@sample.org\", \"password\": \"XXXXXXXX\", \"owner\": true, \"role\": \"admin\", \"first_name\": \"Sample\", \"last_name\": \"User\" } ], \"allow_api_access\": true, \"phone_number\": \"555-555-5555\" } } Copy JSON response { \"id\": XXXXXX, \"name\": \"Sample Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": true, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1990.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy Sub-account object API examples Here is an example of an API call using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Create Request: curl -X POST \\ -H 'x-api-key:PARTNER_ACCOUNT_KEY' \\ -H 'Content-Type:application/json' \\ -d '{\"sub_account\":{\"name\":\"Sample Sub-Account\"}, \"users\":[{\"email\":\"sample_user@sample.org\", \"password\":\"XXXXXX\", \"first_name\":\"Sample\", \"last_name\":\"User\", \"role\":\"admin\", \"owner\":\"true\"}]}' \\ https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy Response (line breaks are for readability): { \"id\": XXXXXX, \"name\": \"Sample Sub-Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": false, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1999.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.29596,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> sub-account object",
        "sections": "<em>Partnership</em> <em>API</em> sub-account object",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " the <em>Partnership</em> <em>API</em> user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user&#x27;s current password. For some <em>New</em> <em>Relic</em> organizations"
      },
      "id": "603eba3ae7b9d2b8e32a07b5"
    },
    {
      "sections": [
        "Partnership API reference",
        "Requirements",
        "Find your Partnership API key",
        "Find your Partner ID",
        "Authenticate the API call",
        "Notes for partners who manage New Relic accounts",
        "Errors"
      ],
      "title": "Partnership API reference",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7bc374ae0e6f6917aa82a70e582606ea4a9878ab",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partner-api-reference/",
      "published_at": "2021-05-05T18:37:41Z",
      "updated_at": "2021-03-30T03:04:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains technical details about using the Partnership API. For an introduction and requirements, first read Intro to Partnership API. Requirements For requirements, see Intro to Partnership API. Find your Partnership API key The Partnership API requires that you authenticate with the REST API key that is specific to your partnership owner account (you cannot use the other REST API keys). When using your Partnership API key with calls to REST API (v2) endpoints that require the use of an Admin user's API key, see Admin user's API Key and partnerships. Find your Partner ID The Partnership API also requires that you authenticate by providing a Partner ID specific to your partnership. This is unique from the account ID for your partnership owner account. To obtain your Partner ID, go to your partner admin console and retrieve the partner ID number that is listed in your URL: https://partner-admin-console.newrelic.com/accounts/​$ACCOUNT_ID/admin_console/partnerships/$PARTNER_ID Copy You must include the Partner ID as part of the base URL for the Partner API. URL component URL pattern Partner API endpoint https://rpm.newrelic.com/api/v2/partners/PARTNER_ID Copy Resource URL patterns /accounts /accounts/ACCOUNT_ID /accounts/ACCOUNT_ID/users /accounts/ACCOUNT_ID/users/USER_ID /accounts/ACCOUNT_ID/subscriptions /accounts/ACCOUNT_ID/subscriptions/SUBSCRIPTION_ID Copy Example https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/ACCOUNT_ID Copy Authenticate the API call To authenticate to the Partner API when making an API call: Add a request header labeled x-api-key and set its value to your Partner API key. Include your Partner ID at the specified point in the request URI. Notes for partners who manage New Relic accounts For partners who manage New Relic accounts for their customers, the initial API call for all account-level interactions is to \"create account.\" This call returns an xml record of the newly created account. Part of this record is the account_id. All of the other calls in the Partnership API require the account_id as a parameter. Provision will need to be made by the partner to parse the returned xml extract, store the account_id, and associate it with the users' partner account record. Errors New Relic uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success and codes in the 4xx range indicate an error that resulted from the provided information (for example, a required parameter was missing). Error Probable cause 400 Bad Request Most commonly the call is missing a required parameter. 401 Unauthorized A valid API key was not provided. 402 Request Failed Parameters were valid but request failed for some reason. 404 Not Found The requested item doesn't exist. 422 Unprocessable Entity Your account has special terms and cannot be changed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.02443,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> reference",
        "sections": "Notes for <em>partners</em> who manage <em>New</em> <em>Relic</em> accounts",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " <em>API</em> key that is specific to your <em>partnership</em> owner account (you cannot use the other REST <em>API</em> keys). When using your <em>Partnership</em> <em>API</em> key with calls to REST <em>API</em> (v2) endpoints that require the use of an Admin user&#x27;s <em>API</em> key, see Admin user&#x27;s <em>API</em> Key and <em>partnerships</em>. Find your <em>Partner</em> ID"
      },
      "id": "603ebc5f28ccbc22b6eba780"
    }
  ],
  "/docs/new-relic-partnerships/partnerships/partner-api/typical-integration-example": [
    {
      "sections": [
        "Partnership billing integration API",
        "Requirements",
        "Communication endpoint",
        "Billing API",
        "Customer subscription notification API",
        "Invoice notification API"
      ],
      "title": "Partnership billing integration API",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "73da7e096ce56bb45e39bb95a1c2e0a0011be597",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-billing-integration-api/",
      "published_at": "2021-05-05T18:29:37Z",
      "updated_at": "2021-03-30T21:12:22Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's Partnership API includes functionality for partners to replace a customer's existing subscription with a new one, or to update invoice information for New Relic partner accounts. This is particularly useful for partners acting as resellers or managed service providers of New Relic accounts. For example, when customers of a New Relic reseller partner purchase a higher subscription level from New Relic's Sales team, New Relic replaces the old subscription with a new subscription. New Relic then uses the API to communicate this information to the partner. Requirements Before using this object, please read the Partnership API requirements. Communication endpoint Partners must implement a billing communication endpoint that identifies the partner's URL and PARTNER_ID. New Relic uses this endpoint to notify the partner that New Relic has made a change to a partner account's subscription or invoice information. The endpoint must support HTTPS. The partner-specified portion of the URL is identified from the Settings tab of New Relic's Partner Portal. The PARTNER_ID is the partner's external ID for this account. This value must be passed when the account is created by using the partner_external_identifier parameter. Billing API Supported functionality for the Partnership billing API includes: Customer subscription notification Invoice information notification Customer subscription notification API To communicate changes to a partner about a customer's subscription, New Relic uses the POST method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy Authentication is done via headers with the partner's REST API key or Admin user's API key. The Partnership API returns the results as JSON. Parameters: Name Type Description id String The customer's New Relic account ID subscription_id Integer Subscription's numeric ID subscription_string String Description of subscription for display price Integer Monthly price of subscription in cents number_of_hosts Integer Number of hosts starts Date Subscription's start date (yyyymmdd) expires Date Subscription's end date (yyyymmdd) Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed. Invoice notification API New Relic uses this endpoint to notify the partner of changes to a partner account's subscription level and invoice information. New Relic uses the PUT method with this URI: https://partner-specified/partner-specified/PARTNER_ID.json Copy OR https://partner-specified/partner-specified/PARTNER_ID.xml Copy The Partnership API returns the results as JSON or XML. Parameters: Name Type Description id string The customer's New Relic account ID subscription_id integer Subscription's numeric ID subscription_string string Description of subscription for display price integer Monthly price of subscription in cents Return codes: 200: Successfully updated. 404: Account not found. 422: Missing or invalid parameters. Authentication failed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.56514,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> billing integration <em>API</em>",
        "sections": "<em>Partnership</em> billing integration <em>API</em>",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s <em>Partnership</em> <em>API</em> includes functionality for partners to replace a customer&#x27;s existing subscription with a <em>new</em> one, or to update invoice information for <em>New</em> <em>Relic</em> <em>partner</em> accounts. This is particularly useful for partners acting as resellers or managed service providers of <em>New</em> <em>Relic</em>"
      },
      "id": "603ec86e64441f09e44e8871"
    },
    {
      "sections": [
        "Partnership API sub-account object",
        "Requirements",
        "Introduction to using sub-accounts",
        "Sub-account object attributes",
        "name (REQUIRED)",
        "allow_api_access",
        "testing",
        "users (REQUIRED for some accounts)",
        "password (REQUIRED)",
        "Sub-account API calls",
        "JSON example",
        "Sub-account object JSON request",
        "JSON response",
        "Sub-account object API examples",
        "Create"
      ],
      "title": "Partnership API sub-account object",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7fb13302d892a5f89c6c9371f35a60bf1ed9f6a5",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partnership-api-sub-account-object/",
      "published_at": "2021-05-05T18:28:44Z",
      "updated_at": "2021-03-30T12:15:14Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains how to use the Partnership API to manage sub-accounts. For accounts, you'd use the sub-account object. Requirements You may not have access to using this object. Before using the Partnership API, first read the requirements. Introduction to using sub-accounts Some notes about using the sub-account object: To manage existing master accounts or existing sub-accounts, use the Partnership API account object. A parent account may have more than one associated sub-account, but every sub-account must correspond to one and only one parent account. Every sub-account must have at least a primary_admin user. You cannot create a sub-account without connecting it to an existing parent account and adding at least one user. Sub-account object attributes Before using the Partnership API, first read the requirements. Here are the Partnership API sub-account object's attributes: name (REQUIRED) Type: String Default: (none) This name must be unique in New Relic's database. If the specified name is not unique, it will be auto-incremented with a numeric suffix as follows: conflicting_name_1 conflicting_name_2 etc. Copy allow_api_access Type: Boolean Default: False This flag allows API access to application data. This must be set to true for partnerships remotely administering accounts. testing Type: Boolean Default: False Use this flag to indicate a test account. Test accounts are assumed to contain garbage data and are ignored by internal systems. The data they generate may be deleted at any time. users (REQUIRED for some accounts) Type: Array Default: (none) An array defining a list of users. There are some restrictions in place dependent on the status of your account: For customer partnerships who have switched to the New Relic One user model: do not define users. If you add users with this field, they will be ignored. Instead, to add users, you'd use these user management procedures. For all other accounts, which have users on our original user model: When you create the sub-account, you can define only one user: the account Owner. To add additional users, use the Partnership API user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user's current password. For some New Relic organizations, sub-accounts can also be created via the master account's Account settings page in the New Relic UI. Sub-account API calls Here is the URL pattern to create sub-accounts. Notice that the Parent Account ID must be specified. If using this URL pattern, send the JSON object along with an HTTP header containing the Partner API key. For example: POST .../api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts​ x-api-key:PARTNER_ACCOUNT_KEY Content-Type: application/json { JSON data } Copy Call Resource URL pattern Create a sub-account with the given parameters. POST /api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy JSON example Here is an example of a JSON request and response using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Sub-account object JSON request { \"account\": { \"name\": \"Sample Sub-Account\", \"users\": [ { \"email\": \"sample_user@sample.org\", \"password\": \"XXXXXXXX\", \"owner\": true, \"role\": \"admin\", \"first_name\": \"Sample\", \"last_name\": \"User\" } ], \"allow_api_access\": true, \"phone_number\": \"555-555-5555\" } } Copy JSON response { \"id\": XXXXXX, \"name\": \"Sample Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": true, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1990.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy Sub-account object API examples Here is an example of an API call using the Partnership API sub-account object. Note that this is just an example, and that for some accounts, the users attribute is unnecessary and will be ignored. Create Request: curl -X POST \\ -H 'x-api-key:PARTNER_ACCOUNT_KEY' \\ -H 'Content-Type:application/json' \\ -d '{\"sub_account\":{\"name\":\"Sample Sub-Account\"}, \"users\":[{\"email\":\"sample_user@sample.org\", \"password\":\"XXXXXX\", \"first_name\":\"Sample\", \"last_name\":\"User\", \"role\":\"admin\", \"owner\":\"true\"}]}' \\ https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/PARENT_ACCOUNT_ID/sub_accounts Copy Response (line breaks are for readability): { \"id\": XXXXXX, \"name\": \"Sample Sub-Account\", \"status\": \"pending\", \"license_key\": \"XXXXXX\", \"api_key\": \"XXXXXX\", \"browser_monitoring_key\": \"XXXXXX\", \"allow_api_access\": false, \"high_security\": false, \"testing\": null, \"partner_external_identifier\": null, \"parent_account_id\":XXXXXX, \"subscription\": { \"id\": XXXXXX, \"starts_on\": \"2016-05-17\", \"expires_on\": null, \"annual_renewal_on\": null, \"products\": [ { \"product_id\": 4, \"name\": \"Pro\", \"units\": 10, \"price\": 1999.0 }, { \"product_id\": 10, \"name\": \"Mobile Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 20, \"name\": \"Browser Lite\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 16, \"name\": \"Insights None\", \"units\": 0, \"price\": 0.0 }, { \"product_id\": 23, \"name\": \"Synthetics Lite\", \"units\": 0, \"price\": 0.0 } ] }, \"primary admin\": { \"id\": XXXXXX, \"email\": \"sample_user@sample.org\", \"first_name\": \"Sample\", \"last_name\": \"User\", \"state\": \"active\" } } Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.29596,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> sub-account object",
        "sections": "<em>Partnership</em> <em>API</em> sub-account object",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " the <em>Partnership</em> <em>API</em> user object. For more about restrictions, read the Requirements. password (REQUIRED) Type: String Default: (none) If you are creating a sub-account with an existing user as the account Owner, the password must match the user&#x27;s current password. For some <em>New</em> <em>Relic</em> organizations"
      },
      "id": "603eba3ae7b9d2b8e32a07b5"
    },
    {
      "sections": [
        "Partnership API reference",
        "Requirements",
        "Find your Partnership API key",
        "Find your Partner ID",
        "Authenticate the API call",
        "Notes for partners who manage New Relic accounts",
        "Errors"
      ],
      "title": "Partnership API reference",
      "type": "docs",
      "tags": [
        "New Relic partnerships",
        "Partnerships",
        "Partner API"
      ],
      "external_id": "7bc374ae0e6f6917aa82a70e582606ea4a9878ab",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-partnerships/partnerships/partner-api/partner-api-reference/",
      "published_at": "2021-05-05T18:37:41Z",
      "updated_at": "2021-03-30T03:04:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "This doc explains technical details about using the Partnership API. For an introduction and requirements, first read Intro to Partnership API. Requirements For requirements, see Intro to Partnership API. Find your Partnership API key The Partnership API requires that you authenticate with the REST API key that is specific to your partnership owner account (you cannot use the other REST API keys). When using your Partnership API key with calls to REST API (v2) endpoints that require the use of an Admin user's API key, see Admin user's API Key and partnerships. Find your Partner ID The Partnership API also requires that you authenticate by providing a Partner ID specific to your partnership. This is unique from the account ID for your partnership owner account. To obtain your Partner ID, go to your partner admin console and retrieve the partner ID number that is listed in your URL: https://partner-admin-console.newrelic.com/accounts/​$ACCOUNT_ID/admin_console/partnerships/$PARTNER_ID Copy You must include the Partner ID as part of the base URL for the Partner API. URL component URL pattern Partner API endpoint https://rpm.newrelic.com/api/v2/partners/PARTNER_ID Copy Resource URL patterns /accounts /accounts/ACCOUNT_ID /accounts/ACCOUNT_ID/users /accounts/ACCOUNT_ID/users/USER_ID /accounts/ACCOUNT_ID/subscriptions /accounts/ACCOUNT_ID/subscriptions/SUBSCRIPTION_ID Copy Example https://rpm.newrelic.com/api/v2/partners/PARTNER_ID/accounts/ACCOUNT_ID Copy Authenticate the API call To authenticate to the Partner API when making an API call: Add a request header labeled x-api-key and set its value to your Partner API key. Include your Partner ID at the specified point in the request URI. Notes for partners who manage New Relic accounts For partners who manage New Relic accounts for their customers, the initial API call for all account-level interactions is to \"create account.\" This call returns an xml record of the newly created account. Part of this record is the account_id. All of the other calls in the Partnership API require the account_id as a parameter. Provision will need to be made by the partner to parse the returned xml extract, store the account_id, and associate it with the users' partner account record. Errors New Relic uses conventional HTTP response codes to indicate success or failure of an API request. In general, codes in the 2xx range indicate success and codes in the 4xx range indicate an error that resulted from the provided information (for example, a required parameter was missing). Error Probable cause 400 Bad Request Most commonly the call is missing a required parameter. 401 Unauthorized A valid API key was not provided. 402 Request Failed Parameters were valid but request failed for some reason. 404 Not Found The requested item doesn't exist. 422 Unprocessable Entity Your account has special terms and cannot be changed.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 169.02443,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Partnership</em> <em>API</em> reference",
        "sections": "Notes for <em>partners</em> who manage <em>New</em> <em>Relic</em> accounts",
        "tags": "<em>New</em> <em>Relic</em> <em>partnerships</em>",
        "body": " <em>API</em> key that is specific to your <em>partnership</em> owner account (you cannot use the other REST <em>API</em> keys). When using your <em>Partnership</em> <em>API</em> key with calls to REST <em>API</em> (v2) endpoints that require the use of an Admin user&#x27;s <em>API</em> key, see Admin user&#x27;s <em>API</em> Key and <em>partnerships</em>. Find your <em>Partner</em> ID"
      },
      "id": "603ebc5f28ccbc22b6eba780"
    }
  ],
  "/docs/new-relic-solutions/best-practices-guides/alerts-applied-intelligence/alerts-best-practices": [
    {
      "sections": [
        "Get started with Incident Intelligence",
        "Tip",
        "Set up Incident Intelligence",
        "1. Configure your environment (one-time)",
        "2. Configure sources",
        "Alerts",
        "Algorithmia (MLOps)",
        "Connect your Algorithmia data to New Relic",
        "Monitor your machine learning models",
        "Anomalies",
        "AWS",
        "Grafana",
        "PagerDuty",
        "Prometheus Alertmanager",
        "REST API",
        "Splunk",
        "Important",
        "Splunk metadata",
        "3. Configure destinations (ServiceNow and others)",
        "Configure ServiceNow (example)",
        "Send data to ServiceNow",
        "Custom notification message",
        "Other destinations",
        "Send data to PagerDuty",
        "Send data via webhook",
        "4. Configure pathways",
        "What's next?"
      ],
      "title": "Get started with Incident Intelligence",
      "type": "docs",
      "tags": [
        "Alerts and Applied Intelligence",
        "Applied intelligence",
        "Incident intelligence"
      ],
      "external_id": "8c4a5a914ca01cb42250908d2fb1a12ccc697e25",
      "image": "https://docs.newrelic.com/static/5cb28999dc618c6a5a2b8be1fa72e660/b97f6/image-%25281%2529_0.png",
      "url": "https://docs.newrelic.com/docs/alerts-applied-intelligence/applied-intelligence/incident-intelligence/get-started-incident-intelligence/",
      "published_at": "2021-05-05T00:24:29Z",
      "updated_at": "2021-05-05T00:24:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "As part of Applied Intelligence, Incident Intelligence helps you correlate your incidents and reduce noise in your environment. It gives you an overview of all your incidents, their sources, and related events. Tip To use Incident Intelligence and Applied Intelligence, as well as the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. Set up Incident Intelligence To enable Incident Intelligence, follow these four steps. Afterwards, issues should start to appear in your issue feed. 1. Configure your environment (one-time). 2. Configure sources. 3. Configure destinations. 4. Configure pathways. 1. Configure your environment (one-time) To set up an environment in Incident Intelligence, you need an administrator to select a New Relic account for it. This account should be the one your team is using. Who sets the environment? Only administrators, and only for accounts where they have admin privileges. Can administrators set more than one environment? They can set one environment per master account and its sub-accounts. More than one can be set if an administrator has privileges for more than one master account. Need to change the environment's associated account? Reach out to your account executive or our support team for help. Tip Incident Intelligence is a cross-account product. This means you can send in data from any New Relic account or external source to correlate events. 2. Configure sources After setting up your environment, determine your incident sources. These are your data inputs. You can get data from any of the following sources: Alerts By integrating Incident Intelligence with your alerts violations, you can get context and correlations from what you're monitoring. To get data from alerts: From one.newrelic.com, click Alerts. On the left under Incident Intelligence, click Sources and then click Alerts. Select the policies you want to connect to Applied Intelligence, and click Connect. You can add additional alerts policies or remove policies you've already connected in Sources > New Relic Alerts. Tip Adding alerts as a source will not affect your current configuration or notifications. Algorithmia (MLOps) By integrating Incident Intelligence with your Algorithmia machine learning models, you can monitor your machine learning model performance. Connect your Algorithmia data to New Relic Start monitoring your Algorithmia event flows with New Relic. Step Details Get your API key From one.newrelic.com the account menu, click API keys and then create a user key for your account with a meaningful name. Make note of this name for later. For more on API keys, see our docs. Create a dashboard From one.newrelic.com go to Dashboards, then click the Import dashboards button. Copy and paste the JSON code into the Paste your JSON field code. Update the YOUR_ACCOUNT_ID values with your account ID. { \"name\": \"Algorithmia Dashboard for Default Metrics\", \"description\": null, \"permissions\": \"PUBLIC_READ_WRITE\", \"pages\": [ { \"name\": \"Algorithmia Dashboard for Default Metrics\", \"description\": null, \"widgets\": [ { \"visualization\": { \"id\": \"viz.line\" }, \"layout\": { \"column\": 1, \"row\": 1, \"height\": 3, \"width\": 4 }, \"title\": \"Runtime Duration by Algorithm\", \"rawConfiguration\": { \"legend\": { \"enabled\": true }, \"nrqlQueries\": [ { \"accountId\": YOUR_ACCOUNT_ID, \"query\": \"SELECT average(algorithmia.duration_milliseconds) FROM Metric TIMESERIES FACET `algorithm_name` LIMIT 10 SINCE 1800 seconds ago\" } ], \"yAxisLeft\": { \"zero\": true } }, \"linkedEntityGuids\": null }, { \"visualization\": { \"id\": \"viz.line\" }, \"layout\": { \"column\": 5, \"row\": 1, \"height\": 3, \"width\": 4 }, \"title\": \"Throughput by Algorithm\", \"rawConfiguration\": { \"legend\": { \"enabled\": true }, \"nrqlQueries\": [ { \"accountId\": YOUR_ACCOUNT_ID, \"query\": \"SELECT count(algorithmia.duration_milliseconds) FROM Metric TIMESERIES FACET `algorithm_name` LIMIT 10 SINCE 1800 seconds ago\" } ], \"yAxisLeft\": { \"zero\": true } }, \"linkedEntityGuids\": null } ] } ] } ``` Copy Set up alerts notifications Once you've created some dashboards, you can get alerted on your data. To create a NRQL alerts condition from a chart, click the chart menu , then click Create alert condition. Once you've named and customized your condition, you can add it to an existing policy or create a new one. Get notified Once you've created an alerts condition, you can choose how you want to be notified. See our docs on how to set up notification channels. Correlate your incidents In addition to notifications, you can use Incident Intelligence to correlate your incidents. See our docs on how to correlate incidents using decisions. Monitor your machine learning models Step Details Get your API key From one.newrelic.com the account menu, click API keys and then create a user key for your account with a meaningful name. Make note of this name for later. For more on API keys, see our docs. Create a dashboard From one.newrelic.com go to Dashboards, then click the Import dashboards button. Copy and paste the JSON code into the Paste your JSON field code. Update the YOUR_ACCOUNT_ID values with your account ID. { \"name\": \"Algorithmia Dashboard for Default Metrics\", \"description\": null, \"permissions\": \"PUBLIC_READ_WRITE\", \"pages\": [ { \"name\": \"Algorithmia Dashboard for Default Metrics\", \"description\": null, \"widgets\": [ { \"visualization\": { \"id\": \"viz.line\" }, \"layout\": { \"column\": 1, \"row\": 1, \"height\": 3, \"width\": 4 }, \"title\": \"Runtime Duration by Algorithm\", \"rawConfiguration\": { \"legend\": { \"enabled\": true }, \"nrqlQueries\": [ { \"accountId\": YOUR_ACCOUNT_ID, \"query\": \"SELECT average(algorithmia.duration_milliseconds) FROM Metric TIMESERIES FACET `algorithm_name` LIMIT 10 SINCE 1800 seconds ago\" } ], \"yAxisLeft\": { \"zero\": true } }, \"linkedEntityGuids\": null }, { \"visualization\": { \"id\": \"viz.line\" }, \"layout\": { \"column\": 5, \"row\": 1, \"height\": 3, \"width\": 4 }, \"title\": \"Throughput by Algorithm\", \"rawConfiguration\": { \"legend\": { \"enabled\": true }, \"nrqlQueries\": [ { \"accountId\": YOUR_ACCOUNT_ID, \"query\": \"SELECT count(algorithmia.duration_milliseconds) FROM Metric TIMESERIES FACET `algorithm_name` LIMIT 10 SINCE 1800 seconds ago\" } ], \"yAxisLeft\": { \"zero\": true } }, \"linkedEntityGuids\": null } ] } ] } ``` Copy Configure Algorithmia Insights for New Relic Use [Algorithmia's docs] to configure Algorithmia Insights for New Relic. Create the New Relic connector algorithm Use Python 3.8 to create a connector algorithm. If you're new to writing code to generate algorithms, see Algorithmia's getting started guide. import Algorithmia import json from datetime import datetime from newrelic_telemetry_sdk import GaugeMetric, MetricClient client = Algorithmia.client() metric_client = MetricClient(os.environ[\"newrelic_api_key\"]) def convert_str_timestamp_to_epoch(str_time): obj_time = datetime.strptime(str_time, \"%Y-%m-%dT%H:%M:%S.%f\") return int(obj_time.timestamp() * 1000) def get_operational_metrics(payload): ALGORITHM_TAGS = { \"algorithm_version\", \"request_id\", \"time\", \"algorithm_name\", \"session_id\", \"algorithm_owner\" } inference_metrics = { key: payload[key] for key in payload.keys() ^ ALGORITHM_TAGS } return inference_metrics def send_to_newrelic(inference_metrics, insights_payload): newrelic_metrics = [] for key, value in inference_metrics.items(): name = \"algorithmia.\" + key epoch_time = convert_str_timestamp_to_epoch(insights_payload[\"time\"]) tags = { \"algorithm_name\": insights_payload[\"algorithm_name\"], \"algorithm_version\": insights_payload[\"algorithm_version\"], \"algorithm_owner\": insights_payload[\"algorithm_owner\"], \"request_id\": insights_payload[\"request_id\"], \"session_id\": insights_payload[\"session_id\"], } newrelic_metrics.append(GaugeMetric( name=name, value=value, tags=tags, end_time_ms=epoch_time )) response = metric_client.send_batch(newrelic_metrics) response.raise_for_status() def apply(input): insights_payload = input inference_metrics = get_operational_metrics(insights_payload) send_to_newrelic(inference_metrics, insights_payload) return None Copy Include these dependencies: algorithmia>=1.0.0,<2.0 newrelic_telemetry_sdk==0.4.2 Copy Once your algorithm build finishes, you can test it with this sample payload to make sure it runs successfully. Your output should look something like this. { \"risk_score\": 0.2, \"duration_milliseconds\": 8, \"algorithm_version\": \"1.0.6\", \"session_id\": \"rses-f28bb94a-5556-4aeb-a6d2-89493626bf4f\", \"time\": \"2021-02-20T00:21:54.867231\", \"algorithm_name\": \"credit_card_approval\", \"request_id\": \"req-9f5345b4-a1cd-431c-a43a-bd2a06f4a6f4\", \"algorithm_owner\": \"asli\" } Copy Configure with your API key Use your New Relic API key for the Algorithmia secret store. Set up Algorithmia Event Flows with New Relic See Algorithmia's documentation on setting up your connector algorithm to send event-based machine learning flows to New Relic. Anomalies By integrating Incident Intelligence with your New Relic Proactive Detection anomalies, you can get context and correlations from what you're monitoring. To get data from New Relic Proactive Detection anomalies: From one.newrelic.com, click Alerts & AI. On the left under Incident Intelligence, click Sources and then click Anomalies. Select the configurations you want to connect to Applied Intelligence by toggling to on (green). To add or remove alert policies, from Alerts & AI, click Sources, then Alerts. Tip Adding anomalies as a source won't affect your current Proactive Detection configurations or notifications. AWS You can integrate Incident Intelligence with Amazon CloudWatch to provide incident management for all of your AWS services. To integrate Amazon CloudWatch: Go to one.newrelic.com and click Alerts & AI. On the left under Incident Intelligence, click Sources and then click Amazon Web Services. Copy the URL. Create a new Amazon SNS topic. Set CloudWatch to forward all Alarms state changes to that topic: In the Amazon CloudWatch UI, click Events > Event Pattern. Select Service Name > CloudWatch. Select Event Type > CloudWatch Alarm State Change. Select Targets > SNS Topic, and select your new Amazon SNS topic. Create a new subscription: In the Amazon AWS UI, click Create a Subscription. Select your new Amazon SNS topic. Select Protocol > choose HTTPS. In Endpoint, paste the URL you previously copied from the Applied Intelligence Sources. Grafana You can integrate Incident Intelligence with Grafana's notifications for insight into events across your applications and environment. Grafana's webhook notification is a simple way to send information over HTTP to a custom endpoint. To integrate Grafana as a new webhook: Log into your Grafana portal using Admin permissions, and choose Alerting. On the Grafana Notification Channels page, click New Channel > Webhook. Go to one.newrelic.com and click Alerts & AI. On the left under Incident Intelligence, click Sources, and then click Grafana. Copy the URL, and paste it into your new Grafana webhook. PagerDuty You can integrate Incident Intelligence directly with your PagerDuty services to ingest, process, and enhance all of your PagerDuty incidents. To get data from PagerDuty: Make sure your PagerDuty API key has write access. From one.newrelic.com, click Alerts & AI. On the left under Incident Intelligence, click Sources and then click PagerDuty. Enter your PagerDuty API key. The key should be either a personal or general access key with write access. If it's created by a user, the user should be an admin. Select the PagerDuty services you want to connect to Applied Intelligence, and click Connect. You can add additional services or remove services you've already connected in Sources > PagerDuty. Tip Connecting PagerDuty services to Applied Intelligence will not affect your current services or notifications. Prometheus Alertmanager By integrating Incident Intelligence with Prometheus Alertmanager, you can receive and correlate your Prometheus alerts with events from other sources. To integrate Prometheus Alertmanager: Set up your Alertmanager configuration file by running: ./alertmanager -config.file=simple.yml Copy Go to one.newrelic.com and click Alerts & AI. On the left under Incident Intelligence, click Sources and then click Prometheus Alertmanager. Copy the Prometheus Alertmanager URL, and paste it into the <webhook_config>/url section of your Alertmanager config file. Reload the Prometheus Alertmanager configuration with one of the two methods: Send a SIGHUP to the process. Send an HTTP POST request to the /-/reload endpoint. REST API Incident Intelligence supports a dedicated REST API interface that lets you integrate with additional systems. The interface allows instrumentation of your code or other monitoring solutions to report any kind of metric or event. A metric can be a raw data point such as CPU, memory, disk utilization, or business KPI. An event can be a monitoring alert, deployment event, incident, exceptions or any other change in state that you want to describe. You can also send any type of data to Incident Intelligence straight from your own systems or applications. The REST API supports secure token-based authentication and accepts JSON content as input. For more information on authentication and the full API reference, see REST API for New Relic Applied Intelligence. Splunk By integrating Incident Intelligence with your Splunk log monitoring, you can: Use your environment's log data for searches and key term reports. Correlate alerts and search reports with your other metrics and incidents. Important Applied Intelligence supports Splunk Light, Splunk Cloud, and Splunk Enterprise version 6.3 and higher. To get data from Splunk: In your Splunk console, start a search for the relevant events. Save your search as an alert, configure your alert conditions, and then choose the webhook as the delivery method. Go to one.newrelic.com and click Alerts & AI. On the left under Incident Intelligence, click Sources and then click Splunk. Copy the collector URL, and paste it into the webhook endpoint in the Splunk console. Optional: Use Splunk tokens to enrich alert data with Splunk metadata. Splunk metadata To enrich alerts data with your Splunk metadata, use Splunk tokens. This helps you leverage your search data, which includes metadata and values from the first row of search results. If you want to... Do this... Access search data Use the format $<fieldname>$. For example, use $app$ for the app context for the search. Access field values To access field values from the first result row that a search returns, use the format $result.<fieldname>$. For example, use $result.host$ for the host value and $result.sourcetype$ for the source type. Use variables You can leverage any of the Selected fields in the Splunk search and add any unique fields to the Selected fields to make the data available as a variable. The following fields will automatically provide hints to the correlation engine: app: parsed as APPLICATION_NAME application:parsed as APPLICATION_NAME application_name: parsed as APPLICATION_NAME cluster: parsed as CLUSTER_NAME computer: parsed as HOST_NAME Dc: parsed as DATACENTER_NAME datacenter: parsed as DATACENTER_NAME host: parsed as HOST_NAME host_name: parsed as HOST_NAME hostname: parsed as HOST_NAME transaction: parsed as EVENT_ID Transaction_id: parsed as EVENT_ID user: parsed as USER_NAME 3. Configure destinations (ServiceNow and others) Now that you've set up your sources, you can configure your destinations. These are the data outputs where you view your incidents. Configure ServiceNow (example) Using ServiceNow as a destination enables you to push valuable violation data into new ServiceNow incident tickets. Send data to ServiceNow To configure Incident Intelligence to send data to ServiceNow: Go to one.newrelic.com, click Alerts & AI, in the left nav under Incident Intelligence click Destinations, then click ServiceNow. Required: Enter a channel name. This is used internally in Applied Intelligence to identify the destination (for example, in Pathways). Required: Enter your ServiceNow credentials: Team domain (This must be unique. No two destinations can have the same domain). Username Password Follow the two-way integration on screen instructions: Open and download this XML file. In the ServiceNow sidebar menu, go to System Definition > Business Rule. Click the menu icon in one of the column headers, select Import XML, and upload the XML file you downloaded. The two way integration will allow the ServiceNow incident to be updated with changes to the Applied Intelligence issue. Closing a ServiceNow incident will close its corresponding New Relic issue. When a New Relic issue is resolved, the corresponding ServiceNow incident will be closed. Custom notification message Applied Intelligence uses a templating framework called Jinja2 in the customization section interface. The Value field must be in valid Jinja syntax. By default, the interface populates a set of default fields in ServiceNow. When you add a custom field, enter the ServiceNow field name you want to use. When you want to skip a selected field in an issue update, add the | skip_on_update string at the end of the value you've selected. Tip By default, ServiceNow adds u_ to the beginning of its custom values. When mapping to ServiceNow attributes, use the Column name value. Please note that the name needs to be lowercase separated by underscores. Go here to see the custom notification message attribute descriptions. Go here to see Jinja2 Useful Syntax. Other destinations You can also set PagerDuty as a destination, as well as any other destination compatible with webhook: Send data to PagerDuty Recommended: Create a new PagerDuty service to use as a destination. Because PagerDuty services can also be used as sources, this can help you distinguish your data input from your output. To create a PagerDuty destination: Go to one.newrelic.com, click Alerts & AI, in the left nav under Incident Intelligence click Destinations, then click PagerDuty. Enter your PagerDuty API key. The key should be either a personal or general access key with write access. If it's created by a user, the user should be an admin. If you've configured a PagerDuty source with an API key, you can use the same key. Select the PagerDuty services you want to connect to Applied Intelligence, and click Connect. When you're ready, you can add policies for one or more PagerDuty destinations. You can also transfer the policies over from your existing services or leave them as sources if needed. From the Destinations > PagerDuty page, you can also: Review the permissions for your services. Click Authorize when you're done. Add or delete existing services from the PagerDuty destination. Edit permissions for any service. To configure your PagerDuty destinations, use the following settings: Configuration setting Description Trigger new incidents Required. Trigger correlated parent incidents so you can identify issues faster. Edit incident titles Required. Alter your incident titles to help you orient and understand issues. Add new integrations Required. Add integrations to enable incident creation for selected services. Add webhook extensions Add webhook extensions to sync user actions in PagerDuty to New Relic. This lets you update the correlated issue state. Auto-resolve correlated incidents When enabled, this will resolve and automatically close correlated parent/child incidents. Select a user to take actions in PagerDuty You need to select a user before you can enable deep integration with PagerDuty. Once you do, the user can: Add notes to incidents (required): Incident notes are used to enrich incidents with context. Acknowledge triggered incidents: When enabled, Applied Intelligence will acknowledge and correlate newly triggered incidents in PagerDuty before you're notified. Use the original escalation policy: When enabled, the escalation policy of the source service will be applied to each incident. Send data via webhook Incident Intelligence will send the event body in JSON format by HTTPS POST. The system expects the endpoint to return a successful HTTP code (2xx). To configure Incident Intelligence to send data via webhook: Go to one.newrelic.com, click Alerts & AI, in the left nav under Incident Intelligence click Destinations, then click Webhook. Required: Configure the unique webhook key, used in Applied Intelligence to refer to this webhook configuration and its specific settings. Required: Configure the destination endpoint where the webhook payload will be sent. Optional steps: Configure custom headers, which are key:value pairs of headers to be sent with the request. Example: \"Authentication\" \"Bearer\" <bearer token> Configure a custom payload template that can be used to map New Relic fields to match the destination tool's expected name and format. Configure priority mapping (critical, high, medium, or low), used to map New Relic's priorities to the priorities expected at the destination. Tip There’s a retry mechanism that is triggered a few times with exponential backoff for a couple of minutes once an error occurs. If we reach the retry limit, the Webhook will get auto-disabled. For examples of destination templates, webhook formats, and JSON schema, see the Incident Intelligence destination examples. 4. Configure pathways To control when and where you want to receive notifications from your incidents, you can configure pathways. To add a pathway: Go to one.newrelic.com, click Alerts & AI, in the left nav under Incident Intelligence click Pathways, then click Add a pathway. In the query builder box, select an attribute, such as application/name. This can be from the list of all attributes available in PagerDuty incidents and New Relic alerts violations, or you can add your own attributes. Select a logical operator. For example, contains. Enter a specific value to complete the logical expression. To include all issues created by your sources, select Send everything. (Use this if you only use one PagerDuty service to manage all incidents.) To build more complex logic, use the AND/OR operators. Select one or more of your destinations. To edit or remove existing pathways, mouse over the pathway's name on the Pathways page. What's next? Now that you've set up some sources and destinations for your incidents, read about how to use Incident Intelligence.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 144.50658,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Get started with Incident <em>Intelligence</em>",
        "sections": "Get started with Incident <em>Intelligence</em>",
        "tags": "<em>Alerts</em> <em>and</em> <em>Applied</em> <em>Intelligence</em>",
        "body": " or remove policies you&#x27;ve already connected in Sources &gt; <em>New</em> <em>Relic</em> <em>Alerts</em>. Tip Adding <em>alerts</em> as a source will not affect your current configuration or notifications. Algorithmia (MLOps) By integrating Incident <em>Intelligence</em> with your Algorithmia machine learning models, you can monitor your machine"
      },
      "id": "603ea62e64441f119f4e883f"
    },
    {
      "sections": [
        "APM best practices guide",
        "Tip",
        "1. Standardize application names",
        "How to do it",
        "2. Add tags to your applications",
        "Caution",
        "3. Create and evaluate alert policies",
        "4. Identify and set up key transactions",
        "5. Track deployment history",
        "6. Review APM reports",
        "7. Review your environment with service maps",
        "8. Keep current",
        "9. Manage user access",
        "Important"
      ],
      "title": "APM best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "368a1a5688384d5bebf128604a9b8f190d335524",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/apm-best-practices-guide/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-03-30T13:08:49Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Application Monitoring Tips You Need To Know It's one thing to know how to use APM, but it's another thing to know how to use New Relic's application performance monitoring software well. Here are some best practices designed to help you become an APM master—and a key asset to your team! Tip To get a high-level overview of all your applications and services, use the New Relic Explorer in New Relic One. 1. Standardize application names Most New Relic agents provide a default application name, such as \"My Application\" or \"PHP Application,\" if you don't specify one in your New Relic configuration file. You don't want to end up with 20 identically named applications, be sure to select a descriptive identifier for your apps as soon you deploy them. To keep things consistent and easy to navigate, New Relic recommends standardizing your application naming (for example, all apps in Staging append [ Staging] or the like at the end of their names). Ideally, you want your new Java applications to be named automatically to reduce the chances of typographical errors and misnaming. How to do it For Java applications, automatic application naming can come from the following sources: Request attribute Servlet init parameter Filter init parameter Web app context parameter Web app context name (display name) Web app context path Choose the method that fits best your needs and follow these steps. For non-Java applications, there are no automatic naming methods, so refer to the documentation for your APM agent. 2. Add tags to your applications When several different applications use the same account, and each application spans multiple environments (for example, development, test, pre-production, production), it can be hard to find a specific application in your overview dashboard. That's why we recommend adding tags to your apps so that you can segment them into logical groups. The two most common tags that mature APM customers use are application name and environment. So, for example, if you wanted to view the billing application in Test, you could simply filter by \"billing app\" (name tag) and \"test\" (environment tag). Caution In the APM agent configuration settings files, use the labels field to add tags to your data. For example, see this description of the Python labels setting. APM is designed so that apps can roll up into an unlimited number of meaningful tag categories. How to do it Read the overview: Use tags to organize and group what you monitor. Follow these instructions for creating tags: NerdGraph tagging API tutorial. 3. Create and evaluate alert policies When key performance indicators spike or drop, individuals and teams in your organization need to be notified. Alerting in New Relic provides a set of tools including dynamic baselines that allow you to detect problems before they impact your end users. Alert policies can be set up in two primary ways: Static threshold alerts are great when you already know the nature of an application and its normal behaviors aren't likely to change anytime soon. Apdex score, response time, error rate, throughput are some of the static thresholds you can create alert policies on. Dynamic baseline alerts make it easy to determine and set dynamic alert thresholds for applications with varying seasonal patterns and growth trends (which make it difficult to set thresholds that define normal behavior). These alerts use baselines modeled from your application’s historical metric data. Each alert policy can contain as many conditions as you need, and each alert condition includes three components: Type of condition (metric, external service, and so on) Entities that the policy targets (for example, apps monitored by New Relic APM or New Relic Browser, hosts monitored by New Relic Infrastructure, and so on) Thresholds that escalate into alerting situations with increasing severity Once you have your alerting set up, you then want to make sure you're taking advantage of all viable notification channels. After all, what good are alerts if no one knows about them? You can manage alerts by creating specific user groups and by leveraging New Relic's integrated alert channels, including Slack, PagerDuty, webhooks, and email. Be sure to evaluate alert policies on a regular basis to ensure that they are always valid. How to do it See the detailed documentation: To set up dynamic baseline alerts and choose an application, follow standard procedures. You will see a preview of the metric with the predicted baseline You can select a metric for that application and see the corresponding baseline. Then, using the threshold sliders, you can set how closely you want your threshold to follow the baseline prediction. To set up static threshold alerts for your Apdex settings, follow standard procedures. To set up your alert notification channels, follow standard procedures. 4. Identify and set up key transactions Depending on the nature of your application, some transactions may be more important to you than others. New Relic's key transactions feature is designed to help you closely monitor what you consider to be your app's most business-critical transactions, whether that's end-user or app response time, call counts, error rates, or something else. You can also set alert threshold levels for notifications when your key transactions are performing poorly. How to do it In the menu bar, select More > Key transactions, and then select Add more. Then select the app and web transaction or, from the selected transaction, select Track as key transaction. Type a name for the key transaction, and select Track key transaction. Optional: If the agent for the selected app supports custom alerting, use the default values that New Relic automatically fills, or select Edit key alert transaction policy to set the Apdex and alert threshold values. To view the key transactions dashboard details, select View new key transaction. 5. Track deployment history When development teams are pushing new code out as frequently as possible, it can be hard to measure the impact that each deployment is having on performance. One way to stay in tune with how these changes are affecting your application is with deployment reports. These reports list recent deployments and their impact on end-users and app servers' Apdex scores, along with response times, throughput, and errors. You can also view and drill down into the details to catch errors related to recent deployments, or file a ticket and share details with your team. How to do it From the New Relic menu bar, select APM > (selected app) > Events > Deployments. To view performance after a deployment, go to the selected app's Overview dashboard in the Recent events section. A blue vertical bar on a chart indicates a deployment. To view summary information about the deployment, point to the blue bar. 6. Review APM reports From SLA, deployment, and capacity to scalability, host usage reports, and more, New Relic APM offers a variety of downloadable reporting tools surfacing historical trends—all great ways to report to senior executive teams or customers. Take a look at the full list of reports and use them to your advantage. How to do it From the New Relic APM menu bar, select Applications > (selected app) > Reports. Select the report you'd like to see. If you want to save or export a report to share, select Download this report as .csv, which will create a report with comma-separated values. 7. Review your environment with service maps Use New Relic service maps, a feature included in APM, to understand how apps and services in your architecture connect and talk to each other. Service maps are visual, customizable representations of your application architecture. Maps automatically show you your app's connections and dependencies, including databases and external services. Health indicators and performance metrics show you the current operational status for every part of your architecture. How to do it Go to one.newrelic.com > More > service maps. To get started, read the instructions in Introduction to service maps. 8. Keep current With New Relic’s SaaS platform, getting new features is as easy as updating your agent. Most likely your organization already has a set of scripts for deploying application upgrades into your environment. In a similar fashion, you can also automate your New Relic agent deployment to ensure that your systems are up to date. Both Puppet and Chef scripts are great examples of deployment frameworks that make life easier by allowing you to automate your entire deployment and management process. How to do it Regularly review which version of the agent you're using so that you know when an update is needed. If the latest agent release contains a needed fix or added functionality, download it. To deploy the agent automatically (preferred as a method to avoid errors): Use existing deployment scripts, provided they can be adapted to handle the deployment. OR Create and maintain a script that specifically deploys and configures the New Relic agent. Ideally, the script would pull the agent files from a repository where the files are versioned (for rollback purposes). Once the script has been created, shut down the application (unless script handles this). Run the deployment script. Start the application (unless script handles this). If problems arise, run the script to roll back to the previous version. To deploy the agent manually: Back up the current agent directory. Deploy the updated agent into the existing agent directory. Modify configuration files by comparing new files with existing files. In particular, make sure things like license key and custom extensions are copied over to the new configuration. Restart the application. If problems arise, restore the old agent using the backup and restart. 9. Manage user access Important This is available only for accounts on our original product-based pricing plan. Enable role-based access control (RBAC) and single sign-on (SSO) New Relic allows authorized individuals to access the broadest possible amount of data, regardless of their assigned role. As an Owner or Administrator of your New Relic account, you can control the permissions of individual users or entire roles with RBAC. To find out what is possible and how to make changes, see Users and roles. Security is no doubt of utmost concern to your organization. To simplify password management for your employees and strengthen security, you may already be using SSO with your other systems. You should do the same with New Relic. Using New Relic's SSO integration feature, account administrators will be able to enforce strong passwords and restrict login via a corporate authentication mechanism. This way, New Relic users who have already authenticated using a corporate SSO system will be able to bypass the New Relic login prompt. How to do it Log in to New Relic as an admin and go to the SSO configuration page. From the New Relic title bar, select (your account name) > Account Settings > Integrations > Single Sign On. From the SAML Single Sign On page, review your New Relic SAML Service Provider details. To upload your SAML Identity Provider certificate, select Choose File, and then follow standard procedures to select and save the file. Copy and paste in (or type) the Remove login URL that your users will use for Single Sign-On. If your organization’s SAML integration provides a redirect URL for logout, copy and paste in (or type) the Logout landing URL; otherwise leave blank. Save, test, and enable.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 141.00966,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Application Monitoring Tips You Need To Know It&#x27;s one thing to know how to use APM, but it&#x27;s another thing to know how to use <em>New</em> <em>Relic</em>&#x27;s application performance monitoring software well. Here are some <em>best</em> <em>practices</em> designed to help you become an APM master—and a key asset to your team! Tip To get"
      },
      "id": "6044186564441f1f94378ecc"
    },
    {
      "sections": [
        "Synthetic monitoring best practices guide",
        "Tip",
        "1. Match your monitor type to monitoring need",
        "How to do it",
        "2. View all monitors with the Monitors index page",
        "How to view your monitors in the New Relic One:",
        "New Relic Explorer",
        "Monitors index page",
        "3. View individual monitor results",
        "How to do it:",
        "4. Understand the load-time impact of each resource",
        "5. Configure and develop a scripted browser test"
      ],
      "title": "Synthetic monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e76eb0669a1433bb9d0de70d90413e19749adf61",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/synthetic-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:54:11Z",
      "updated_at": "2021-03-29T20:29:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its full power. Tip To use synthetic monitoring and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. 1. Match your monitor type to monitoring need Synthetic monitors are virtual browsers that measure the performance of your website, recording each check in detail. They also capture aggregate numbers for load time, uptime, and average download size, as well as an overview, detailed statistics for each page resource, and downtime incidents. There are four types of synthetic monitors; the ones you deploy will depend on the things you want to monitor: Ping monitors—to ensure that your site is accessible. Simple browser monitors—to ensure end-user performance. Scripted browsers—to ensure that particular resources are present. API monitors—to ensure that your app server works as well as your website. How to do it To add a monitor, go to one.newrelic.com > Synthetics (or one.eu.newrelic.com if you have an EU-based account) and click Create monitor. Specify monitor type, name, and URL. Optional: Add a validation string (available for ping and simple browser) or advanced options, which enable substring monitoring for the following types of response validation: Verify SSL (for Ping and Simple Browser). This option verifies the validity of the SSL certificate chain. It can be duplicated by running the following syntax: openssl s_client -servername {YOUR_HOSTNAME} -connect {YOUR_HOSTNAME}:443 -CApath /etc/ssl/certs > /dev/null Copy Bypass HEAD request (for Ping). This option skips the default HEAD request and instead uses the GET verb with a ping check. Redirect is Failure (for Ping). If a redirect result occurs when Redirect is Failure is enabled, Synthetics categorizes it as a failure (rather than following the redirect and checking the resulting URL). Select the locations where you want your monitor to run. Choose a frequency to determine how often each location will run your monitor. Optional: Set up alert notifications. Select Create my monitor to confirm. Wait a few minutes; then from the Monitors index check your monitor. 2. View all monitors with the Monitors index page Continuous application performance monitoring is essential to ensure that web services are in place, working correctly, and error-free. Synthetic monitoring provides this type of assurance by performing automated tests on your web application for each selected location—noting downtime instances (“violations”) and collecting aggregate numbers, results, and detailed statistics for each page resource. Use the Monitors index page to get a high level view of this information, or select an individual monitor to view the Summary, for ping monitors, or Overview, for simple and scripted monitors, page and get a deeper insight into its performance over time. How to view your monitors in the New Relic One: New Relic Explorer To view a list of monitors using the New Relic One Monitors index page: Go to one.newrelic.com > Explorer > Synthetic monitors. For more information, see the documentation about navigating core UI components in New Relic One. Monitors index page To view a list of monitors using the Monitors index page: Go to one.newrelic.com > Synthetics. 3. View individual monitor results It’s not enough to understand how your web apps are performing for your West Coast customers; you need to be able to view how they’re performing across the country and around the globe. By taking advantage of synthetic monitors and visiting your Results page, you can see how everything from development to production affects user experience. You can locate interesting results by sorting the list to identify slow, fast, or other unusual results. Or filter by location to understand how monitor performance varies with geography. (The “Network timings” graph below provides a snapshot of webpage performance over a given period.) How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors tab, select your monitor. Select Monitor > Results. Gain an up-to-the-minute view of the slowest page loads for every monitored location. 4. Understand the load-time impact of each resource Visit the synthetics Resources page to see how each resource on your website—including CSS, JavaScript, images, HTML and more—is affecting your overall load. You can drill into detailed metrics collected at run time, locate performance information for time spent by third-party resources, and identify HTTP response codes for each resource. How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors drop-down menu, select your monitor. Select Monitor > Resources. 5. Configure and develop a scripted browser test Using scripted browsers, you can build complex monitoring workflows using the Selenium JavaScript Webdriver bindings. For instance, you can log in to the application, navigate to a particular link, and wait for a page element to load and add an assertion. How to do it: Go to one.newrelic.com > Synthetics. Choose your monitor type (for example, Scripted Browser). Enter the name and details of your monitor (for example, Sitename.com Scripted Browser) Select the locations from which you want your monitor to run (for example, Mumbai, Seoul, Columbus, and Montreal). Choose a frequency to determine how often each location will run your monitor (for example, five minutes). Set a notification method to alert your team when performance violations occur. You are now ready to write your script. (Below is an example of a script used to test the performance of a main navigation page.) var assert = require('chai').assert; // script-wide timeout for all wait and waitandfind functions (in ms) var default_element_timeout = 190000; //3 mins var default_pageload_timeout = 240000; //4 mins var navlinks = [\"css-locator-1\",\"css-locator-2\"]; //sets element load timeout to 3 mins $browser.manage().timeouts().implicitlyWait(default_element_timeout); //sets page load timoeout to 4 mins $browser.manage().timeouts().pageloadTimeout(default_pageload_timeout); //test all the main nav page performances $browser.get(\"http://www.sitename.com\").then(function(){ return $browser.findelement($driver.by.classname(\"site-theme-example\")); }).then(function(){ //verifies the nav list has loaded return $browser.findelement($driver.by.classname(\"site-nav-list-example\")); }).then(function(){ //loops through the navlinks array navlinks.foreach(function(val, i, arr){ //finds and navigates to each navlink page return $browser.findelement($driver.by.classname(navlinks[i])).click().then(function(){ //verifies that the nav list loaded before moving on return $browser.findelement($driver.by.classname(\"site-nav-list-example\")).then(function(){ //verifies that the page logo footer at bottom of page has loaded return $browser.findelement($driver.by.classname(\"site-footer-logo\")); }) }) }) }); Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 140.60147,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its full power. Tip To use synthetic monitoring and the rest of our"
      },
      "id": "603e84bb28ccbce555eba771"
    }
  ],
  "/docs/new-relic-solutions/best-practices-guides/full-stack-observability/apm-best-practices-guide": [
    {
      "sections": [
        "Synthetic monitoring best practices guide",
        "Tip",
        "1. Match your monitor type to monitoring need",
        "How to do it",
        "2. View all monitors with the Monitors index page",
        "How to view your monitors in the New Relic One:",
        "New Relic Explorer",
        "Monitors index page",
        "3. View individual monitor results",
        "How to do it:",
        "4. Understand the load-time impact of each resource",
        "5. Configure and develop a scripted browser test"
      ],
      "title": "Synthetic monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e76eb0669a1433bb9d0de70d90413e19749adf61",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/synthetic-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:54:11Z",
      "updated_at": "2021-03-29T20:29:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its full power. Tip To use synthetic monitoring and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. 1. Match your monitor type to monitoring need Synthetic monitors are virtual browsers that measure the performance of your website, recording each check in detail. They also capture aggregate numbers for load time, uptime, and average download size, as well as an overview, detailed statistics for each page resource, and downtime incidents. There are four types of synthetic monitors; the ones you deploy will depend on the things you want to monitor: Ping monitors—to ensure that your site is accessible. Simple browser monitors—to ensure end-user performance. Scripted browsers—to ensure that particular resources are present. API monitors—to ensure that your app server works as well as your website. How to do it To add a monitor, go to one.newrelic.com > Synthetics (or one.eu.newrelic.com if you have an EU-based account) and click Create monitor. Specify monitor type, name, and URL. Optional: Add a validation string (available for ping and simple browser) or advanced options, which enable substring monitoring for the following types of response validation: Verify SSL (for Ping and Simple Browser). This option verifies the validity of the SSL certificate chain. It can be duplicated by running the following syntax: openssl s_client -servername {YOUR_HOSTNAME} -connect {YOUR_HOSTNAME}:443 -CApath /etc/ssl/certs > /dev/null Copy Bypass HEAD request (for Ping). This option skips the default HEAD request and instead uses the GET verb with a ping check. Redirect is Failure (for Ping). If a redirect result occurs when Redirect is Failure is enabled, Synthetics categorizes it as a failure (rather than following the redirect and checking the resulting URL). Select the locations where you want your monitor to run. Choose a frequency to determine how often each location will run your monitor. Optional: Set up alert notifications. Select Create my monitor to confirm. Wait a few minutes; then from the Monitors index check your monitor. 2. View all monitors with the Monitors index page Continuous application performance monitoring is essential to ensure that web services are in place, working correctly, and error-free. Synthetic monitoring provides this type of assurance by performing automated tests on your web application for each selected location—noting downtime instances (“violations”) and collecting aggregate numbers, results, and detailed statistics for each page resource. Use the Monitors index page to get a high level view of this information, or select an individual monitor to view the Summary, for ping monitors, or Overview, for simple and scripted monitors, page and get a deeper insight into its performance over time. How to view your monitors in the New Relic One: New Relic Explorer To view a list of monitors using the New Relic One Monitors index page: Go to one.newrelic.com > Explorer > Synthetic monitors. For more information, see the documentation about navigating core UI components in New Relic One. Monitors index page To view a list of monitors using the Monitors index page: Go to one.newrelic.com > Synthetics. 3. View individual monitor results It’s not enough to understand how your web apps are performing for your West Coast customers; you need to be able to view how they’re performing across the country and around the globe. By taking advantage of synthetic monitors and visiting your Results page, you can see how everything from development to production affects user experience. You can locate interesting results by sorting the list to identify slow, fast, or other unusual results. Or filter by location to understand how monitor performance varies with geography. (The “Network timings” graph below provides a snapshot of webpage performance over a given period.) How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors tab, select your monitor. Select Monitor > Results. Gain an up-to-the-minute view of the slowest page loads for every monitored location. 4. Understand the load-time impact of each resource Visit the synthetics Resources page to see how each resource on your website—including CSS, JavaScript, images, HTML and more—is affecting your overall load. You can drill into detailed metrics collected at run time, locate performance information for time spent by third-party resources, and identify HTTP response codes for each resource. How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors drop-down menu, select your monitor. Select Monitor > Resources. 5. Configure and develop a scripted browser test Using scripted browsers, you can build complex monitoring workflows using the Selenium JavaScript Webdriver bindings. For instance, you can log in to the application, navigate to a particular link, and wait for a page element to load and add an assertion. How to do it: Go to one.newrelic.com > Synthetics. Choose your monitor type (for example, Scripted Browser). Enter the name and details of your monitor (for example, Sitename.com Scripted Browser) Select the locations from which you want your monitor to run (for example, Mumbai, Seoul, Columbus, and Montreal). Choose a frequency to determine how often each location will run your monitor (for example, five minutes). Set a notification method to alert your team when performance violations occur. You are now ready to write your script. (Below is an example of a script used to test the performance of a main navigation page.) var assert = require('chai').assert; // script-wide timeout for all wait and waitandfind functions (in ms) var default_element_timeout = 190000; //3 mins var default_pageload_timeout = 240000; //4 mins var navlinks = [\"css-locator-1\",\"css-locator-2\"]; //sets element load timeout to 3 mins $browser.manage().timeouts().implicitlyWait(default_element_timeout); //sets page load timoeout to 4 mins $browser.manage().timeouts().pageloadTimeout(default_pageload_timeout); //test all the main nav page performances $browser.get(\"http://www.sitename.com\").then(function(){ return $browser.findelement($driver.by.classname(\"site-theme-example\")); }).then(function(){ //verifies the nav list has loaded return $browser.findelement($driver.by.classname(\"site-nav-list-example\")); }).then(function(){ //loops through the navlinks array navlinks.foreach(function(val, i, arr){ //finds and navigates to each navlink page return $browser.findelement($driver.by.classname(navlinks[i])).click().then(function(){ //verifies that the nav list loaded before moving on return $browser.findelement($driver.by.classname(\"site-nav-list-example\")).then(function(){ //verifies that the page logo footer at bottom of page has loaded return $browser.findelement($driver.by.classname(\"site-footer-logo\")); }) }) }) }); Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 239.45795,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its <em>full</em> power. Tip To use synthetic monitoring and the rest of our"
      },
      "id": "603e84bb28ccbce555eba771"
    },
    {
      "sections": [
        "Infrastructure monitoring best practices guide",
        "1. Install the infrastructure agent across your entire environment",
        "How to do it",
        "Tip",
        "2. Configure the native EC2 integration",
        "3. Activate the integrations",
        "4. Create filter sets",
        "5. Create alert conditions",
        "6. View infrastructure data alongside APM data",
        "7. Access Infrastructure data using the Data explorer",
        "8. Update your agents regularly",
        "Want more user tips?"
      ],
      "title": "Infrastructure monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "931ea7767d73381ca0cb3502ec14f88d66ce5eaf",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/infrastructure-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:51:11Z",
      "updated_at": "2021-03-13T07:39:11Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Want even longer periods of uninterrupted sleep? Here are eight best practices to make dynamic infrastructure and server monitoring even easier with New Relic's infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution was designed to help enterprise customers monitor their large and dynamically changing environments at scale. In order to facilitate this, the UI is completely driven by tags that let you visualize aggregated metrics, events, and inventory for a large number of servers. To really get the most out of infrastructure monitoring, we recommend installing it across your entire environment, preferably even across multiple regions and clusters. This will provide a more accurate picture of the health of your host ecosystem and the impact your infrastructure has on your applications. Want to achieve faster Mean Time To Resolution (MTTR)? Install the infrastructure agent on database servers, web servers, and any other host that supports your applications. When deploying the agent, leverage custom attributes to tag your hosts so that you can use those for filtering the data presented in the UI and for setting alerts. This is in addition to any Amazon EC2 tags you may be using which will auto-import when you enable the EC2 integration. You may also prefer to keep the agent logs separate from the system logs, which you can do through the configuration. How to do it Leverage our install modules for config management tools such as Chef, Puppet and Ansible to easily deploy your agent across all your infrastructure. Read the instructions in the github repo for your config management tool referenced in the link above and define the custom_attributes you want to use to tag your hosts. Set the log_file attribute to your preferred location for the infrastructure agent logs. Tip If you are installing the agent on a single host, the process should only take a few minutes and you can find detailed instructions in our documentation. 2. Configure the native EC2 integration If you have an AWS environment, in addition to installing the infrastructure agent on your EC2 instances to monitor them, we also recommend configuring the EC2 integration so that New Relic can automatically import all the tags and metadata associated with your AWS instances. This allows you to filter down to a part of your infrastructure using the same AWS tags (example, ECTag_Role='Kafka'), and slice-and-dice your data in multiple ways. Additionally, our ‘Alerts’ and ‘Saved Filter Sets’ are completely tag-driven and dynamic, so they automatically add/remove instances matching these tags to give our users the most real-time views that scale with your cloud infrastructure. 3. Activate the integrations Monitoring your infrastructure extends beyond just CPU, memory, and storage utilization. That’s why New Relic has out-of-the-box integrations that allow you to monitor all the services that support your hosts as well. Activate any of our integrations, including AWS Billing, AWS ELB, Amazon S3, MySQL, NGINX, and more, to extend monitoring to your AWS or on-host applications, and access the pre-configured dashboards that appear for each of them. 4. Create filter sets With New Relic, users can create filter sets to organize hosts, cluster roles, and other resources based on criteria that matter the most to users. This allows you to optimize your resources by using a focused view to monitor, detect, and resolve any problems proactively. The attributes for filtering are populated from the auto-imported EC2 tags or custom tags that may be applied to hosts. You can combine as many filters as you want in a filter set, and save them to share with other people in your account. You’ll also be able to see the color-coded health status of each host inside the filter set, so you can quickly identify problematic areas of your infrastructure. Additionally, filter sets can be used in the health map to get an overview of your infrastructure performance at a glance based on the filters that matter to your teams. 5. Create alert conditions With New Relic, you can create alert conditions directly within the context of what you are currently monitoring with New Relic. For example, if you are viewing a filter set comprised of a large number of hosts and notice a problem, you don’t need to create an individual alert condition for every host within. Instead, we recommend initiating the alert condition directly from the chart of the metric you are viewing and creating it based on the filter tags. This will create an alert condition for any hosts that match those tags, allowing our infrastructure monitoring to automatically remove hosts that go offline and add new hosts to the alert condition if they match those tags. Alerts configured once for the appropriate tags will scale correctly across all future hosts. And know that you can also leverage existing alert policies for infrastructure alert conditions. 6. View infrastructure data alongside APM data The integration between New Relic APM and infrastructure monitoring lets you see your APM data and infrastructure data side by side, so you can find the root cause of problems more quickly, no matter where they originate. This allows users to view the performance relationship of your hosts and the applications running on them, allowing for quicker diagnosis of the issue and impact on the business’ health. Use health maps to quickly spot any issues or alerts related to the health of your applications and how that connects to the supporting infrastructure. The first boxes starting from the top left are those that require your attention. 7. Access Infrastructure data using the Data explorer Teams that use multiple New Relic capabilities find it useful to create a single dashboard to visually correlate the infrastructure’s health with application, browser and synthetics metrics. That’s where New Relic data exploration features comes in. All the granular metrics and events collected by infrastructure monitoring are stored in New Relic and are accessible to you immediately. Having access to the raw metrics means you can run more custom queries using NRQL, and also create dashboards to share infrastructure metrics with your team. 8. Update your agents regularly New Relic’s software engineering team is constantly pushing out improvements and new features to improve our customers’ overall monitoring experience. In order to take advantage of all the awesomeness they’re delivering, we recommend regularly updating to the latest version of the infrastructure agent. Want more user tips? View training videos at New Relic University. Read the documentation. Check out our Tutorials. Ask a question in the New Relic Explorers Hub.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 227.42703,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Want even longer periods of uninterrupted sleep? Here are eight <em>best</em> <em>practices</em> to make dynamic infrastructure and server monitoring even easier with <em>New</em> <em>Relic</em>&#x27;s infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution"
      },
      "id": "6044151c28ccbc4b4f2c60af"
    },
    {
      "sections": [
        "Monitor apps and hosts with health maps",
        "Best practices",
        "Features",
        "Entities prioritized by health",
        "Tip",
        "Entity sort order criteria",
        "Views, filters, toggles",
        "View and use health maps",
        "Use cases",
        "The system's current health at a glance",
        "Scope of the problem: What else is broken?",
        "Scale of the problem: Use context to find a noisy neighbor",
        "Troubleshooting"
      ],
      "title": "Monitor apps and hosts with health maps",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e7d1c9a1f713b33c4aa42c2cb5e1b7a6ac23c2e3",
      "image": "https://docs.newrelic.com/static/2a20f997d494faa0658b6d93c6ab1fd3/c1b63/health-map-demo-ss_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/monitor-apps-hosts-health-maps/",
      "published_at": "2021-05-05T19:51:59Z",
      "updated_at": "2021-03-13T07:37:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The health map provides a single place to visually monitor the health of all your apps and their related hosts, prioritized by health status. You can customize the page by using different views, filters, and toggles to organize the map in a way most relevant to you or your team. Use your health map to monitor applications and hosts in real-time, and quickly track down problems as they occur. Best practices The health map pulls data together from several New Relic solutions. To get the most out of the health map, we recommend using the following features: Infrastructure monitoring: Create filter sets to meaningfully categorize hosts. APM: Create tags to meaningfully categorize your applications. Alerts: Create alert policies that cover all your alerting scenarios. The health map is also especially useful if you're using containerized apps on hosts, with many instances of apps per host. Features one.newrelic.com > More > Health maps: The health map combines data from APM, infrastructure monitoring, and alerts to display your applications and hosts prioritized by health status. Health map features include: Entities prioritized by health The health map organizes the page by primary entity boxes. Primary entity boxes contain current (refreshes every two minutes), at-a-glance health and performance data, secondary entities related to it, and links to relevant APM or Infrastructure UI pages for detailed performance data. Example of a health map primary entity box with secondary entities. The health map prioritizes entities based on the health status of primary then secondary entities. The health status is determined using data from Alerts. The health map prioritizes the entities by first sorting the primary entities by health status, then sorting those by the health status of their secondary entities (related apps or hosts). The health map supports red, yellow, green, light green (not targeted by any conditions), and gray (application stopped reporting data) statuses for applications. The health map supports red, yellow, and green statuses for hosts. Tip If you have a host not targeted by any conditions, it appears green on the health map. If a host is not reporting data, it does not display on the health map unless you create a host-not-reporting condition. Entities are prioritized to the top based on this order: Entity sort order criteria Primary entities that have critical (red) health status ordered by: Count of secondary entities with critical (red) health status Count of secondary entities with warning (yellow) health status Count of secondary entities with green health status Count of secondary entities with light green health status (host view only) Primary entities that have warning (yellow) health status ordered by: Count of secondary entities with critical (red) health status Count of secondary entities with warning (yellow) health status Count of secondary entities with green health status Count of secondary entities with light green health status (host view only) Primary entities that have green health status ordered by: Count of secondary entities with critical (red) health status Count of secondary entities with warning (yellow) health status Count of secondary entities with green health status Count of secondary entities with light green health status (host view only) Count of secondary entities Name of entity Views, filters, toggles Use the Views dropdown to see the health of your system organized by your applications or your hosts. You can then filter those views by tags (apps) or filter set (hosts) to only see data most relevant to you or your team. Use the Show metrics/hosts toggles to show more/less information in the entity boxes. View Description Applications and related hosts Organizes the map by application entities to display for each app: Health status color Condition violation information, if any Summary metrics Health of related hosts the application is running on as reported by New Relic Infrastructure Map includes an optional app tag filter. Hosts and related applications Organizes the map by host entities to display for each host: Health status color Condition violation information, if any Summary metrics Health of related applications running on the host reported by New Relic APM Map includes an optional host filter. Filter sets and related hosts Uses data reported by our infrastructure monitoring to display: Health of the hosts in each filter set in Infrastructure View and use health maps Tip To get the most out of your health map, see health maps best practices. The health map represents the current state of your system. The map refreshes every two minutes. To view the health map: From one.newrelic.com, select More, then select Health maps. Select a view from the View dropdown to organize the map by application, host, or infrastructure filter sets. If using the views Applications and related hosts or Hosts and related applications, use the Filter dropdown to only display entities most interesting to you or your team. Optional: Toggle Show metrics or Show hosts to display more or less entity data. Optional: Display the health map on a TV / wallboard in your operations center to see your system's current health at a glance. If entities start showing critical (red) or warning (yellow) health statuses, hover over the entity or the Related hosts/apps tiles for violation information to quickly ascertain the scope and scale of the problem. Click through to the relevant APM or Infrastructure UI pages to get detailed information to start troubleshooting. Use cases The health map is designed to help operations and DevOps professionals, who are responsible for the health of large, complex environments, understand: The system's current health at a glance You like to have a view up on the TV wallboard in your network operations center (NOC) that represents the health of all systems. You may be focused on a task and not notice when an alert comes in. With a wallboard you can feel assured that you can always glance up to see if anything is on fire. Conversely, even though something is alerting, you like to see the applications and hosts that are healthy to help keep things in perspective. Scope of the problem: What else is broken? You are responsible for many applications at your company. At any point in time, something is alerting and because there are many applications deployed across many hosts, it’s difficult for you to keep track of everything and know what is experiencing problems. The health map gives you a single place to see the health and relationship between all applications and hosts. You can easily correlate the alerting host with applications deployed to it and easily answer the question: What else is broken right now? Scale of the problem: Use context to find a noisy neighbor With container orchestration deploying containerized applications across many hosts, it’s difficult for you to understand the scale of the problem when you receive an alert for a host or groups of hosts. By using the application view of the health map, you can see the alerting host along with all the other hosts serving the application. If the issue is isolated to a single host, you can change to the host view of the health map to see what other applications are deployed on that host. In that view, you see that the host has four applications running and one of the applications is alerting on higher than normal throughput. Troubleshooting If health map host boxes do not display their installed apps, or if application boxes do not display the Infrastructure-monitored hosts where they are running, see APM data missing from infrastructure monitoring.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 227.42639,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Best</em> <em>practices</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": " to monitor applications and hosts in real-time, and quickly track down problems as they occur. <em>Best</em> <em>practices</em> The health map pulls data together from several <em>New</em> <em>Relic</em> <em>solutions</em>. To get the most out of the health map, we recommend using the following features: Infrastructure monitoring: Create"
      },
      "id": "6044155e28ccbc6f972ea01c"
    }
  ],
  "/docs/new-relic-solutions/best-practices-guides/full-stack-observability/browser-monitoring-best-practices-guide": [
    {
      "sections": [
        "APM best practices guide",
        "Tip",
        "1. Standardize application names",
        "How to do it",
        "2. Add tags to your applications",
        "Caution",
        "3. Create and evaluate alert policies",
        "4. Identify and set up key transactions",
        "5. Track deployment history",
        "6. Review APM reports",
        "7. Review your environment with service maps",
        "8. Keep current",
        "9. Manage user access",
        "Important"
      ],
      "title": "APM best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "368a1a5688384d5bebf128604a9b8f190d335524",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/apm-best-practices-guide/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-03-30T13:08:49Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Application Monitoring Tips You Need To Know It's one thing to know how to use APM, but it's another thing to know how to use New Relic's application performance monitoring software well. Here are some best practices designed to help you become an APM master—and a key asset to your team! Tip To get a high-level overview of all your applications and services, use the New Relic Explorer in New Relic One. 1. Standardize application names Most New Relic agents provide a default application name, such as \"My Application\" or \"PHP Application,\" if you don't specify one in your New Relic configuration file. You don't want to end up with 20 identically named applications, be sure to select a descriptive identifier for your apps as soon you deploy them. To keep things consistent and easy to navigate, New Relic recommends standardizing your application naming (for example, all apps in Staging append [ Staging] or the like at the end of their names). Ideally, you want your new Java applications to be named automatically to reduce the chances of typographical errors and misnaming. How to do it For Java applications, automatic application naming can come from the following sources: Request attribute Servlet init parameter Filter init parameter Web app context parameter Web app context name (display name) Web app context path Choose the method that fits best your needs and follow these steps. For non-Java applications, there are no automatic naming methods, so refer to the documentation for your APM agent. 2. Add tags to your applications When several different applications use the same account, and each application spans multiple environments (for example, development, test, pre-production, production), it can be hard to find a specific application in your overview dashboard. That's why we recommend adding tags to your apps so that you can segment them into logical groups. The two most common tags that mature APM customers use are application name and environment. So, for example, if you wanted to view the billing application in Test, you could simply filter by \"billing app\" (name tag) and \"test\" (environment tag). Caution In the APM agent configuration settings files, use the labels field to add tags to your data. For example, see this description of the Python labels setting. APM is designed so that apps can roll up into an unlimited number of meaningful tag categories. How to do it Read the overview: Use tags to organize and group what you monitor. Follow these instructions for creating tags: NerdGraph tagging API tutorial. 3. Create and evaluate alert policies When key performance indicators spike or drop, individuals and teams in your organization need to be notified. Alerting in New Relic provides a set of tools including dynamic baselines that allow you to detect problems before they impact your end users. Alert policies can be set up in two primary ways: Static threshold alerts are great when you already know the nature of an application and its normal behaviors aren't likely to change anytime soon. Apdex score, response time, error rate, throughput are some of the static thresholds you can create alert policies on. Dynamic baseline alerts make it easy to determine and set dynamic alert thresholds for applications with varying seasonal patterns and growth trends (which make it difficult to set thresholds that define normal behavior). These alerts use baselines modeled from your application’s historical metric data. Each alert policy can contain as many conditions as you need, and each alert condition includes three components: Type of condition (metric, external service, and so on) Entities that the policy targets (for example, apps monitored by New Relic APM or New Relic Browser, hosts monitored by New Relic Infrastructure, and so on) Thresholds that escalate into alerting situations with increasing severity Once you have your alerting set up, you then want to make sure you're taking advantage of all viable notification channels. After all, what good are alerts if no one knows about them? You can manage alerts by creating specific user groups and by leveraging New Relic's integrated alert channels, including Slack, PagerDuty, webhooks, and email. Be sure to evaluate alert policies on a regular basis to ensure that they are always valid. How to do it See the detailed documentation: To set up dynamic baseline alerts and choose an application, follow standard procedures. You will see a preview of the metric with the predicted baseline You can select a metric for that application and see the corresponding baseline. Then, using the threshold sliders, you can set how closely you want your threshold to follow the baseline prediction. To set up static threshold alerts for your Apdex settings, follow standard procedures. To set up your alert notification channels, follow standard procedures. 4. Identify and set up key transactions Depending on the nature of your application, some transactions may be more important to you than others. New Relic's key transactions feature is designed to help you closely monitor what you consider to be your app's most business-critical transactions, whether that's end-user or app response time, call counts, error rates, or something else. You can also set alert threshold levels for notifications when your key transactions are performing poorly. How to do it In the menu bar, select More > Key transactions, and then select Add more. Then select the app and web transaction or, from the selected transaction, select Track as key transaction. Type a name for the key transaction, and select Track key transaction. Optional: If the agent for the selected app supports custom alerting, use the default values that New Relic automatically fills, or select Edit key alert transaction policy to set the Apdex and alert threshold values. To view the key transactions dashboard details, select View new key transaction. 5. Track deployment history When development teams are pushing new code out as frequently as possible, it can be hard to measure the impact that each deployment is having on performance. One way to stay in tune with how these changes are affecting your application is with deployment reports. These reports list recent deployments and their impact on end-users and app servers' Apdex scores, along with response times, throughput, and errors. You can also view and drill down into the details to catch errors related to recent deployments, or file a ticket and share details with your team. How to do it From the New Relic menu bar, select APM > (selected app) > Events > Deployments. To view performance after a deployment, go to the selected app's Overview dashboard in the Recent events section. A blue vertical bar on a chart indicates a deployment. To view summary information about the deployment, point to the blue bar. 6. Review APM reports From SLA, deployment, and capacity to scalability, host usage reports, and more, New Relic APM offers a variety of downloadable reporting tools surfacing historical trends—all great ways to report to senior executive teams or customers. Take a look at the full list of reports and use them to your advantage. How to do it From the New Relic APM menu bar, select Applications > (selected app) > Reports. Select the report you'd like to see. If you want to save or export a report to share, select Download this report as .csv, which will create a report with comma-separated values. 7. Review your environment with service maps Use New Relic service maps, a feature included in APM, to understand how apps and services in your architecture connect and talk to each other. Service maps are visual, customizable representations of your application architecture. Maps automatically show you your app's connections and dependencies, including databases and external services. Health indicators and performance metrics show you the current operational status for every part of your architecture. How to do it Go to one.newrelic.com > More > service maps. To get started, read the instructions in Introduction to service maps. 8. Keep current With New Relic’s SaaS platform, getting new features is as easy as updating your agent. Most likely your organization already has a set of scripts for deploying application upgrades into your environment. In a similar fashion, you can also automate your New Relic agent deployment to ensure that your systems are up to date. Both Puppet and Chef scripts are great examples of deployment frameworks that make life easier by allowing you to automate your entire deployment and management process. How to do it Regularly review which version of the agent you're using so that you know when an update is needed. If the latest agent release contains a needed fix or added functionality, download it. To deploy the agent automatically (preferred as a method to avoid errors): Use existing deployment scripts, provided they can be adapted to handle the deployment. OR Create and maintain a script that specifically deploys and configures the New Relic agent. Ideally, the script would pull the agent files from a repository where the files are versioned (for rollback purposes). Once the script has been created, shut down the application (unless script handles this). Run the deployment script. Start the application (unless script handles this). If problems arise, run the script to roll back to the previous version. To deploy the agent manually: Back up the current agent directory. Deploy the updated agent into the existing agent directory. Modify configuration files by comparing new files with existing files. In particular, make sure things like license key and custom extensions are copied over to the new configuration. Restart the application. If problems arise, restore the old agent using the backup and restart. 9. Manage user access Important This is available only for accounts on our original product-based pricing plan. Enable role-based access control (RBAC) and single sign-on (SSO) New Relic allows authorized individuals to access the broadest possible amount of data, regardless of their assigned role. As an Owner or Administrator of your New Relic account, you can control the permissions of individual users or entire roles with RBAC. To find out what is possible and how to make changes, see Users and roles. Security is no doubt of utmost concern to your organization. To simplify password management for your employees and strengthen security, you may already be using SSO with your other systems. You should do the same with New Relic. Using New Relic's SSO integration feature, account administrators will be able to enforce strong passwords and restrict login via a corporate authentication mechanism. This way, New Relic users who have already authenticated using a corporate SSO system will be able to bypass the New Relic login prompt. How to do it Log in to New Relic as an admin and go to the SSO configuration page. From the New Relic title bar, select (your account name) > Account Settings > Integrations > Single Sign On. From the SAML Single Sign On page, review your New Relic SAML Service Provider details. To upload your SAML Identity Provider certificate, select Choose File, and then follow standard procedures to select and save the file. Copy and paste in (or type) the Remove login URL that your users will use for Single Sign-On. If your organization’s SAML integration provides a redirect URL for logout, copy and paste in (or type) the Logout landing URL; otherwise leave blank. Save, test, and enable.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 240.15312,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Application Monitoring Tips You Need To Know It&#x27;s one thing to know how to use APM, but it&#x27;s another thing to know how to use <em>New</em> <em>Relic</em>&#x27;s application performance monitoring software well. Here are some <em>best</em> <em>practices</em> designed to help you become an APM master—and a key asset to your team! Tip To get"
      },
      "id": "6044186564441f1f94378ecc"
    },
    {
      "sections": [
        "Synthetic monitoring best practices guide",
        "Tip",
        "1. Match your monitor type to monitoring need",
        "How to do it",
        "2. View all monitors with the Monitors index page",
        "How to view your monitors in the New Relic One:",
        "New Relic Explorer",
        "Monitors index page",
        "3. View individual monitor results",
        "How to do it:",
        "4. Understand the load-time impact of each resource",
        "5. Configure and develop a scripted browser test"
      ],
      "title": "Synthetic monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e76eb0669a1433bb9d0de70d90413e19749adf61",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/synthetic-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:54:11Z",
      "updated_at": "2021-03-29T20:29:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its full power. Tip To use synthetic monitoring and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. 1. Match your monitor type to monitoring need Synthetic monitors are virtual browsers that measure the performance of your website, recording each check in detail. They also capture aggregate numbers for load time, uptime, and average download size, as well as an overview, detailed statistics for each page resource, and downtime incidents. There are four types of synthetic monitors; the ones you deploy will depend on the things you want to monitor: Ping monitors—to ensure that your site is accessible. Simple browser monitors—to ensure end-user performance. Scripted browsers—to ensure that particular resources are present. API monitors—to ensure that your app server works as well as your website. How to do it To add a monitor, go to one.newrelic.com > Synthetics (or one.eu.newrelic.com if you have an EU-based account) and click Create monitor. Specify monitor type, name, and URL. Optional: Add a validation string (available for ping and simple browser) or advanced options, which enable substring monitoring for the following types of response validation: Verify SSL (for Ping and Simple Browser). This option verifies the validity of the SSL certificate chain. It can be duplicated by running the following syntax: openssl s_client -servername {YOUR_HOSTNAME} -connect {YOUR_HOSTNAME}:443 -CApath /etc/ssl/certs > /dev/null Copy Bypass HEAD request (for Ping). This option skips the default HEAD request and instead uses the GET verb with a ping check. Redirect is Failure (for Ping). If a redirect result occurs when Redirect is Failure is enabled, Synthetics categorizes it as a failure (rather than following the redirect and checking the resulting URL). Select the locations where you want your monitor to run. Choose a frequency to determine how often each location will run your monitor. Optional: Set up alert notifications. Select Create my monitor to confirm. Wait a few minutes; then from the Monitors index check your monitor. 2. View all monitors with the Monitors index page Continuous application performance monitoring is essential to ensure that web services are in place, working correctly, and error-free. Synthetic monitoring provides this type of assurance by performing automated tests on your web application for each selected location—noting downtime instances (“violations”) and collecting aggregate numbers, results, and detailed statistics for each page resource. Use the Monitors index page to get a high level view of this information, or select an individual monitor to view the Summary, for ping monitors, or Overview, for simple and scripted monitors, page and get a deeper insight into its performance over time. How to view your monitors in the New Relic One: New Relic Explorer To view a list of monitors using the New Relic One Monitors index page: Go to one.newrelic.com > Explorer > Synthetic monitors. For more information, see the documentation about navigating core UI components in New Relic One. Monitors index page To view a list of monitors using the Monitors index page: Go to one.newrelic.com > Synthetics. 3. View individual monitor results It’s not enough to understand how your web apps are performing for your West Coast customers; you need to be able to view how they’re performing across the country and around the globe. By taking advantage of synthetic monitors and visiting your Results page, you can see how everything from development to production affects user experience. You can locate interesting results by sorting the list to identify slow, fast, or other unusual results. Or filter by location to understand how monitor performance varies with geography. (The “Network timings” graph below provides a snapshot of webpage performance over a given period.) How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors tab, select your monitor. Select Monitor > Results. Gain an up-to-the-minute view of the slowest page loads for every monitored location. 4. Understand the load-time impact of each resource Visit the synthetics Resources page to see how each resource on your website—including CSS, JavaScript, images, HTML and more—is affecting your overall load. You can drill into detailed metrics collected at run time, locate performance information for time spent by third-party resources, and identify HTTP response codes for each resource. How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors drop-down menu, select your monitor. Select Monitor > Resources. 5. Configure and develop a scripted browser test Using scripted browsers, you can build complex monitoring workflows using the Selenium JavaScript Webdriver bindings. For instance, you can log in to the application, navigate to a particular link, and wait for a page element to load and add an assertion. How to do it: Go to one.newrelic.com > Synthetics. Choose your monitor type (for example, Scripted Browser). Enter the name and details of your monitor (for example, Sitename.com Scripted Browser) Select the locations from which you want your monitor to run (for example, Mumbai, Seoul, Columbus, and Montreal). Choose a frequency to determine how often each location will run your monitor (for example, five minutes). Set a notification method to alert your team when performance violations occur. You are now ready to write your script. (Below is an example of a script used to test the performance of a main navigation page.) var assert = require('chai').assert; // script-wide timeout for all wait and waitandfind functions (in ms) var default_element_timeout = 190000; //3 mins var default_pageload_timeout = 240000; //4 mins var navlinks = [\"css-locator-1\",\"css-locator-2\"]; //sets element load timeout to 3 mins $browser.manage().timeouts().implicitlyWait(default_element_timeout); //sets page load timoeout to 4 mins $browser.manage().timeouts().pageloadTimeout(default_pageload_timeout); //test all the main nav page performances $browser.get(\"http://www.sitename.com\").then(function(){ return $browser.findelement($driver.by.classname(\"site-theme-example\")); }).then(function(){ //verifies the nav list has loaded return $browser.findelement($driver.by.classname(\"site-nav-list-example\")); }).then(function(){ //loops through the navlinks array navlinks.foreach(function(val, i, arr){ //finds and navigates to each navlink page return $browser.findelement($driver.by.classname(navlinks[i])).click().then(function(){ //verifies that the nav list loaded before moving on return $browser.findelement($driver.by.classname(\"site-nav-list-example\")).then(function(){ //verifies that the page logo footer at bottom of page has loaded return $browser.findelement($driver.by.classname(\"site-footer-logo\")); }) }) }) }); Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 239.45795,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its <em>full</em> power. Tip To use synthetic monitoring and the rest of our"
      },
      "id": "603e84bb28ccbce555eba771"
    },
    {
      "sections": [
        "Infrastructure monitoring best practices guide",
        "1. Install the infrastructure agent across your entire environment",
        "How to do it",
        "Tip",
        "2. Configure the native EC2 integration",
        "3. Activate the integrations",
        "4. Create filter sets",
        "5. Create alert conditions",
        "6. View infrastructure data alongside APM data",
        "7. Access Infrastructure data using the Data explorer",
        "8. Update your agents regularly",
        "Want more user tips?"
      ],
      "title": "Infrastructure monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "931ea7767d73381ca0cb3502ec14f88d66ce5eaf",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/infrastructure-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:51:11Z",
      "updated_at": "2021-03-13T07:39:11Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Want even longer periods of uninterrupted sleep? Here are eight best practices to make dynamic infrastructure and server monitoring even easier with New Relic's infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution was designed to help enterprise customers monitor their large and dynamically changing environments at scale. In order to facilitate this, the UI is completely driven by tags that let you visualize aggregated metrics, events, and inventory for a large number of servers. To really get the most out of infrastructure monitoring, we recommend installing it across your entire environment, preferably even across multiple regions and clusters. This will provide a more accurate picture of the health of your host ecosystem and the impact your infrastructure has on your applications. Want to achieve faster Mean Time To Resolution (MTTR)? Install the infrastructure agent on database servers, web servers, and any other host that supports your applications. When deploying the agent, leverage custom attributes to tag your hosts so that you can use those for filtering the data presented in the UI and for setting alerts. This is in addition to any Amazon EC2 tags you may be using which will auto-import when you enable the EC2 integration. You may also prefer to keep the agent logs separate from the system logs, which you can do through the configuration. How to do it Leverage our install modules for config management tools such as Chef, Puppet and Ansible to easily deploy your agent across all your infrastructure. Read the instructions in the github repo for your config management tool referenced in the link above and define the custom_attributes you want to use to tag your hosts. Set the log_file attribute to your preferred location for the infrastructure agent logs. Tip If you are installing the agent on a single host, the process should only take a few minutes and you can find detailed instructions in our documentation. 2. Configure the native EC2 integration If you have an AWS environment, in addition to installing the infrastructure agent on your EC2 instances to monitor them, we also recommend configuring the EC2 integration so that New Relic can automatically import all the tags and metadata associated with your AWS instances. This allows you to filter down to a part of your infrastructure using the same AWS tags (example, ECTag_Role='Kafka'), and slice-and-dice your data in multiple ways. Additionally, our ‘Alerts’ and ‘Saved Filter Sets’ are completely tag-driven and dynamic, so they automatically add/remove instances matching these tags to give our users the most real-time views that scale with your cloud infrastructure. 3. Activate the integrations Monitoring your infrastructure extends beyond just CPU, memory, and storage utilization. That’s why New Relic has out-of-the-box integrations that allow you to monitor all the services that support your hosts as well. Activate any of our integrations, including AWS Billing, AWS ELB, Amazon S3, MySQL, NGINX, and more, to extend monitoring to your AWS or on-host applications, and access the pre-configured dashboards that appear for each of them. 4. Create filter sets With New Relic, users can create filter sets to organize hosts, cluster roles, and other resources based on criteria that matter the most to users. This allows you to optimize your resources by using a focused view to monitor, detect, and resolve any problems proactively. The attributes for filtering are populated from the auto-imported EC2 tags or custom tags that may be applied to hosts. You can combine as many filters as you want in a filter set, and save them to share with other people in your account. You’ll also be able to see the color-coded health status of each host inside the filter set, so you can quickly identify problematic areas of your infrastructure. Additionally, filter sets can be used in the health map to get an overview of your infrastructure performance at a glance based on the filters that matter to your teams. 5. Create alert conditions With New Relic, you can create alert conditions directly within the context of what you are currently monitoring with New Relic. For example, if you are viewing a filter set comprised of a large number of hosts and notice a problem, you don’t need to create an individual alert condition for every host within. Instead, we recommend initiating the alert condition directly from the chart of the metric you are viewing and creating it based on the filter tags. This will create an alert condition for any hosts that match those tags, allowing our infrastructure monitoring to automatically remove hosts that go offline and add new hosts to the alert condition if they match those tags. Alerts configured once for the appropriate tags will scale correctly across all future hosts. And know that you can also leverage existing alert policies for infrastructure alert conditions. 6. View infrastructure data alongside APM data The integration between New Relic APM and infrastructure monitoring lets you see your APM data and infrastructure data side by side, so you can find the root cause of problems more quickly, no matter where they originate. This allows users to view the performance relationship of your hosts and the applications running on them, allowing for quicker diagnosis of the issue and impact on the business’ health. Use health maps to quickly spot any issues or alerts related to the health of your applications and how that connects to the supporting infrastructure. The first boxes starting from the top left are those that require your attention. 7. Access Infrastructure data using the Data explorer Teams that use multiple New Relic capabilities find it useful to create a single dashboard to visually correlate the infrastructure’s health with application, browser and synthetics metrics. That’s where New Relic data exploration features comes in. All the granular metrics and events collected by infrastructure monitoring are stored in New Relic and are accessible to you immediately. Having access to the raw metrics means you can run more custom queries using NRQL, and also create dashboards to share infrastructure metrics with your team. 8. Update your agents regularly New Relic’s software engineering team is constantly pushing out improvements and new features to improve our customers’ overall monitoring experience. In order to take advantage of all the awesomeness they’re delivering, we recommend regularly updating to the latest version of the infrastructure agent. Want more user tips? View training videos at New Relic University. Read the documentation. Check out our Tutorials. Ask a question in the New Relic Explorers Hub.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 227.42703,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Want even longer periods of uninterrupted sleep? Here are eight <em>best</em> <em>practices</em> to make dynamic infrastructure and server monitoring even easier with <em>New</em> <em>Relic</em>&#x27;s infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution"
      },
      "id": "6044151c28ccbc4b4f2c60af"
    }
  ],
  "/docs/new-relic-solutions/best-practices-guides/full-stack-observability/browser-monitoring-best-practices-java": [
    {
      "sections": [
        "APM best practices guide",
        "Tip",
        "1. Standardize application names",
        "How to do it",
        "2. Add tags to your applications",
        "Caution",
        "3. Create and evaluate alert policies",
        "4. Identify and set up key transactions",
        "5. Track deployment history",
        "6. Review APM reports",
        "7. Review your environment with service maps",
        "8. Keep current",
        "9. Manage user access",
        "Important"
      ],
      "title": "APM best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "368a1a5688384d5bebf128604a9b8f190d335524",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/apm-best-practices-guide/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-03-30T13:08:49Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Application Monitoring Tips You Need To Know It's one thing to know how to use APM, but it's another thing to know how to use New Relic's application performance monitoring software well. Here are some best practices designed to help you become an APM master—and a key asset to your team! Tip To get a high-level overview of all your applications and services, use the New Relic Explorer in New Relic One. 1. Standardize application names Most New Relic agents provide a default application name, such as \"My Application\" or \"PHP Application,\" if you don't specify one in your New Relic configuration file. You don't want to end up with 20 identically named applications, be sure to select a descriptive identifier for your apps as soon you deploy them. To keep things consistent and easy to navigate, New Relic recommends standardizing your application naming (for example, all apps in Staging append [ Staging] or the like at the end of their names). Ideally, you want your new Java applications to be named automatically to reduce the chances of typographical errors and misnaming. How to do it For Java applications, automatic application naming can come from the following sources: Request attribute Servlet init parameter Filter init parameter Web app context parameter Web app context name (display name) Web app context path Choose the method that fits best your needs and follow these steps. For non-Java applications, there are no automatic naming methods, so refer to the documentation for your APM agent. 2. Add tags to your applications When several different applications use the same account, and each application spans multiple environments (for example, development, test, pre-production, production), it can be hard to find a specific application in your overview dashboard. That's why we recommend adding tags to your apps so that you can segment them into logical groups. The two most common tags that mature APM customers use are application name and environment. So, for example, if you wanted to view the billing application in Test, you could simply filter by \"billing app\" (name tag) and \"test\" (environment tag). Caution In the APM agent configuration settings files, use the labels field to add tags to your data. For example, see this description of the Python labels setting. APM is designed so that apps can roll up into an unlimited number of meaningful tag categories. How to do it Read the overview: Use tags to organize and group what you monitor. Follow these instructions for creating tags: NerdGraph tagging API tutorial. 3. Create and evaluate alert policies When key performance indicators spike or drop, individuals and teams in your organization need to be notified. Alerting in New Relic provides a set of tools including dynamic baselines that allow you to detect problems before they impact your end users. Alert policies can be set up in two primary ways: Static threshold alerts are great when you already know the nature of an application and its normal behaviors aren't likely to change anytime soon. Apdex score, response time, error rate, throughput are some of the static thresholds you can create alert policies on. Dynamic baseline alerts make it easy to determine and set dynamic alert thresholds for applications with varying seasonal patterns and growth trends (which make it difficult to set thresholds that define normal behavior). These alerts use baselines modeled from your application’s historical metric data. Each alert policy can contain as many conditions as you need, and each alert condition includes three components: Type of condition (metric, external service, and so on) Entities that the policy targets (for example, apps monitored by New Relic APM or New Relic Browser, hosts monitored by New Relic Infrastructure, and so on) Thresholds that escalate into alerting situations with increasing severity Once you have your alerting set up, you then want to make sure you're taking advantage of all viable notification channels. After all, what good are alerts if no one knows about them? You can manage alerts by creating specific user groups and by leveraging New Relic's integrated alert channels, including Slack, PagerDuty, webhooks, and email. Be sure to evaluate alert policies on a regular basis to ensure that they are always valid. How to do it See the detailed documentation: To set up dynamic baseline alerts and choose an application, follow standard procedures. You will see a preview of the metric with the predicted baseline You can select a metric for that application and see the corresponding baseline. Then, using the threshold sliders, you can set how closely you want your threshold to follow the baseline prediction. To set up static threshold alerts for your Apdex settings, follow standard procedures. To set up your alert notification channels, follow standard procedures. 4. Identify and set up key transactions Depending on the nature of your application, some transactions may be more important to you than others. New Relic's key transactions feature is designed to help you closely monitor what you consider to be your app's most business-critical transactions, whether that's end-user or app response time, call counts, error rates, or something else. You can also set alert threshold levels for notifications when your key transactions are performing poorly. How to do it In the menu bar, select More > Key transactions, and then select Add more. Then select the app and web transaction or, from the selected transaction, select Track as key transaction. Type a name for the key transaction, and select Track key transaction. Optional: If the agent for the selected app supports custom alerting, use the default values that New Relic automatically fills, or select Edit key alert transaction policy to set the Apdex and alert threshold values. To view the key transactions dashboard details, select View new key transaction. 5. Track deployment history When development teams are pushing new code out as frequently as possible, it can be hard to measure the impact that each deployment is having on performance. One way to stay in tune with how these changes are affecting your application is with deployment reports. These reports list recent deployments and their impact on end-users and app servers' Apdex scores, along with response times, throughput, and errors. You can also view and drill down into the details to catch errors related to recent deployments, or file a ticket and share details with your team. How to do it From the New Relic menu bar, select APM > (selected app) > Events > Deployments. To view performance after a deployment, go to the selected app's Overview dashboard in the Recent events section. A blue vertical bar on a chart indicates a deployment. To view summary information about the deployment, point to the blue bar. 6. Review APM reports From SLA, deployment, and capacity to scalability, host usage reports, and more, New Relic APM offers a variety of downloadable reporting tools surfacing historical trends—all great ways to report to senior executive teams or customers. Take a look at the full list of reports and use them to your advantage. How to do it From the New Relic APM menu bar, select Applications > (selected app) > Reports. Select the report you'd like to see. If you want to save or export a report to share, select Download this report as .csv, which will create a report with comma-separated values. 7. Review your environment with service maps Use New Relic service maps, a feature included in APM, to understand how apps and services in your architecture connect and talk to each other. Service maps are visual, customizable representations of your application architecture. Maps automatically show you your app's connections and dependencies, including databases and external services. Health indicators and performance metrics show you the current operational status for every part of your architecture. How to do it Go to one.newrelic.com > More > service maps. To get started, read the instructions in Introduction to service maps. 8. Keep current With New Relic’s SaaS platform, getting new features is as easy as updating your agent. Most likely your organization already has a set of scripts for deploying application upgrades into your environment. In a similar fashion, you can also automate your New Relic agent deployment to ensure that your systems are up to date. Both Puppet and Chef scripts are great examples of deployment frameworks that make life easier by allowing you to automate your entire deployment and management process. How to do it Regularly review which version of the agent you're using so that you know when an update is needed. If the latest agent release contains a needed fix or added functionality, download it. To deploy the agent automatically (preferred as a method to avoid errors): Use existing deployment scripts, provided they can be adapted to handle the deployment. OR Create and maintain a script that specifically deploys and configures the New Relic agent. Ideally, the script would pull the agent files from a repository where the files are versioned (for rollback purposes). Once the script has been created, shut down the application (unless script handles this). Run the deployment script. Start the application (unless script handles this). If problems arise, run the script to roll back to the previous version. To deploy the agent manually: Back up the current agent directory. Deploy the updated agent into the existing agent directory. Modify configuration files by comparing new files with existing files. In particular, make sure things like license key and custom extensions are copied over to the new configuration. Restart the application. If problems arise, restore the old agent using the backup and restart. 9. Manage user access Important This is available only for accounts on our original product-based pricing plan. Enable role-based access control (RBAC) and single sign-on (SSO) New Relic allows authorized individuals to access the broadest possible amount of data, regardless of their assigned role. As an Owner or Administrator of your New Relic account, you can control the permissions of individual users or entire roles with RBAC. To find out what is possible and how to make changes, see Users and roles. Security is no doubt of utmost concern to your organization. To simplify password management for your employees and strengthen security, you may already be using SSO with your other systems. You should do the same with New Relic. Using New Relic's SSO integration feature, account administrators will be able to enforce strong passwords and restrict login via a corporate authentication mechanism. This way, New Relic users who have already authenticated using a corporate SSO system will be able to bypass the New Relic login prompt. How to do it Log in to New Relic as an admin and go to the SSO configuration page. From the New Relic title bar, select (your account name) > Account Settings > Integrations > Single Sign On. From the SAML Single Sign On page, review your New Relic SAML Service Provider details. To upload your SAML Identity Provider certificate, select Choose File, and then follow standard procedures to select and save the file. Copy and paste in (or type) the Remove login URL that your users will use for Single Sign-On. If your organization’s SAML integration provides a redirect URL for logout, copy and paste in (or type) the Logout landing URL; otherwise leave blank. Save, test, and enable.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 240.1531,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Application Monitoring Tips You Need To Know It&#x27;s one thing to know how to use APM, but it&#x27;s another thing to know how to use <em>New</em> <em>Relic</em>&#x27;s application performance monitoring software well. Here are some <em>best</em> <em>practices</em> designed to help you become an APM master—and a key asset to your team! Tip To get"
      },
      "id": "6044186564441f1f94378ecc"
    },
    {
      "sections": [
        "Synthetic monitoring best practices guide",
        "Tip",
        "1. Match your monitor type to monitoring need",
        "How to do it",
        "2. View all monitors with the Monitors index page",
        "How to view your monitors in the New Relic One:",
        "New Relic Explorer",
        "Monitors index page",
        "3. View individual monitor results",
        "How to do it:",
        "4. Understand the load-time impact of each resource",
        "5. Configure and develop a scripted browser test"
      ],
      "title": "Synthetic monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e76eb0669a1433bb9d0de70d90413e19749adf61",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/synthetic-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:54:11Z",
      "updated_at": "2021-03-29T20:29:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its full power. Tip To use synthetic monitoring and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. 1. Match your monitor type to monitoring need Synthetic monitors are virtual browsers that measure the performance of your website, recording each check in detail. They also capture aggregate numbers for load time, uptime, and average download size, as well as an overview, detailed statistics for each page resource, and downtime incidents. There are four types of synthetic monitors; the ones you deploy will depend on the things you want to monitor: Ping monitors—to ensure that your site is accessible. Simple browser monitors—to ensure end-user performance. Scripted browsers—to ensure that particular resources are present. API monitors—to ensure that your app server works as well as your website. How to do it To add a monitor, go to one.newrelic.com > Synthetics (or one.eu.newrelic.com if you have an EU-based account) and click Create monitor. Specify monitor type, name, and URL. Optional: Add a validation string (available for ping and simple browser) or advanced options, which enable substring monitoring for the following types of response validation: Verify SSL (for Ping and Simple Browser). This option verifies the validity of the SSL certificate chain. It can be duplicated by running the following syntax: openssl s_client -servername {YOUR_HOSTNAME} -connect {YOUR_HOSTNAME}:443 -CApath /etc/ssl/certs > /dev/null Copy Bypass HEAD request (for Ping). This option skips the default HEAD request and instead uses the GET verb with a ping check. Redirect is Failure (for Ping). If a redirect result occurs when Redirect is Failure is enabled, Synthetics categorizes it as a failure (rather than following the redirect and checking the resulting URL). Select the locations where you want your monitor to run. Choose a frequency to determine how often each location will run your monitor. Optional: Set up alert notifications. Select Create my monitor to confirm. Wait a few minutes; then from the Monitors index check your monitor. 2. View all monitors with the Monitors index page Continuous application performance monitoring is essential to ensure that web services are in place, working correctly, and error-free. Synthetic monitoring provides this type of assurance by performing automated tests on your web application for each selected location—noting downtime instances (“violations”) and collecting aggregate numbers, results, and detailed statistics for each page resource. Use the Monitors index page to get a high level view of this information, or select an individual monitor to view the Summary, for ping monitors, or Overview, for simple and scripted monitors, page and get a deeper insight into its performance over time. How to view your monitors in the New Relic One: New Relic Explorer To view a list of monitors using the New Relic One Monitors index page: Go to one.newrelic.com > Explorer > Synthetic monitors. For more information, see the documentation about navigating core UI components in New Relic One. Monitors index page To view a list of monitors using the Monitors index page: Go to one.newrelic.com > Synthetics. 3. View individual monitor results It’s not enough to understand how your web apps are performing for your West Coast customers; you need to be able to view how they’re performing across the country and around the globe. By taking advantage of synthetic monitors and visiting your Results page, you can see how everything from development to production affects user experience. You can locate interesting results by sorting the list to identify slow, fast, or other unusual results. Or filter by location to understand how monitor performance varies with geography. (The “Network timings” graph below provides a snapshot of webpage performance over a given period.) How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors tab, select your monitor. Select Monitor > Results. Gain an up-to-the-minute view of the slowest page loads for every monitored location. 4. Understand the load-time impact of each resource Visit the synthetics Resources page to see how each resource on your website—including CSS, JavaScript, images, HTML and more—is affecting your overall load. You can drill into detailed metrics collected at run time, locate performance information for time spent by third-party resources, and identify HTTP response codes for each resource. How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors drop-down menu, select your monitor. Select Monitor > Resources. 5. Configure and develop a scripted browser test Using scripted browsers, you can build complex monitoring workflows using the Selenium JavaScript Webdriver bindings. For instance, you can log in to the application, navigate to a particular link, and wait for a page element to load and add an assertion. How to do it: Go to one.newrelic.com > Synthetics. Choose your monitor type (for example, Scripted Browser). Enter the name and details of your monitor (for example, Sitename.com Scripted Browser) Select the locations from which you want your monitor to run (for example, Mumbai, Seoul, Columbus, and Montreal). Choose a frequency to determine how often each location will run your monitor (for example, five minutes). Set a notification method to alert your team when performance violations occur. You are now ready to write your script. (Below is an example of a script used to test the performance of a main navigation page.) var assert = require('chai').assert; // script-wide timeout for all wait and waitandfind functions (in ms) var default_element_timeout = 190000; //3 mins var default_pageload_timeout = 240000; //4 mins var navlinks = [\"css-locator-1\",\"css-locator-2\"]; //sets element load timeout to 3 mins $browser.manage().timeouts().implicitlyWait(default_element_timeout); //sets page load timoeout to 4 mins $browser.manage().timeouts().pageloadTimeout(default_pageload_timeout); //test all the main nav page performances $browser.get(\"http://www.sitename.com\").then(function(){ return $browser.findelement($driver.by.classname(\"site-theme-example\")); }).then(function(){ //verifies the nav list has loaded return $browser.findelement($driver.by.classname(\"site-nav-list-example\")); }).then(function(){ //loops through the navlinks array navlinks.foreach(function(val, i, arr){ //finds and navigates to each navlink page return $browser.findelement($driver.by.classname(navlinks[i])).click().then(function(){ //verifies that the nav list loaded before moving on return $browser.findelement($driver.by.classname(\"site-nav-list-example\")).then(function(){ //verifies that the page logo footer at bottom of page has loaded return $browser.findelement($driver.by.classname(\"site-footer-logo\")); }) }) }) }); Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 239.45793,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its <em>full</em> power. Tip To use synthetic monitoring and the rest of our"
      },
      "id": "603e84bb28ccbce555eba771"
    },
    {
      "sections": [
        "Infrastructure monitoring best practices guide",
        "1. Install the infrastructure agent across your entire environment",
        "How to do it",
        "Tip",
        "2. Configure the native EC2 integration",
        "3. Activate the integrations",
        "4. Create filter sets",
        "5. Create alert conditions",
        "6. View infrastructure data alongside APM data",
        "7. Access Infrastructure data using the Data explorer",
        "8. Update your agents regularly",
        "Want more user tips?"
      ],
      "title": "Infrastructure monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "931ea7767d73381ca0cb3502ec14f88d66ce5eaf",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/infrastructure-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:51:11Z",
      "updated_at": "2021-03-13T07:39:11Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Want even longer periods of uninterrupted sleep? Here are eight best practices to make dynamic infrastructure and server monitoring even easier with New Relic's infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution was designed to help enterprise customers monitor their large and dynamically changing environments at scale. In order to facilitate this, the UI is completely driven by tags that let you visualize aggregated metrics, events, and inventory for a large number of servers. To really get the most out of infrastructure monitoring, we recommend installing it across your entire environment, preferably even across multiple regions and clusters. This will provide a more accurate picture of the health of your host ecosystem and the impact your infrastructure has on your applications. Want to achieve faster Mean Time To Resolution (MTTR)? Install the infrastructure agent on database servers, web servers, and any other host that supports your applications. When deploying the agent, leverage custom attributes to tag your hosts so that you can use those for filtering the data presented in the UI and for setting alerts. This is in addition to any Amazon EC2 tags you may be using which will auto-import when you enable the EC2 integration. You may also prefer to keep the agent logs separate from the system logs, which you can do through the configuration. How to do it Leverage our install modules for config management tools such as Chef, Puppet and Ansible to easily deploy your agent across all your infrastructure. Read the instructions in the github repo for your config management tool referenced in the link above and define the custom_attributes you want to use to tag your hosts. Set the log_file attribute to your preferred location for the infrastructure agent logs. Tip If you are installing the agent on a single host, the process should only take a few minutes and you can find detailed instructions in our documentation. 2. Configure the native EC2 integration If you have an AWS environment, in addition to installing the infrastructure agent on your EC2 instances to monitor them, we also recommend configuring the EC2 integration so that New Relic can automatically import all the tags and metadata associated with your AWS instances. This allows you to filter down to a part of your infrastructure using the same AWS tags (example, ECTag_Role='Kafka'), and slice-and-dice your data in multiple ways. Additionally, our ‘Alerts’ and ‘Saved Filter Sets’ are completely tag-driven and dynamic, so they automatically add/remove instances matching these tags to give our users the most real-time views that scale with your cloud infrastructure. 3. Activate the integrations Monitoring your infrastructure extends beyond just CPU, memory, and storage utilization. That’s why New Relic has out-of-the-box integrations that allow you to monitor all the services that support your hosts as well. Activate any of our integrations, including AWS Billing, AWS ELB, Amazon S3, MySQL, NGINX, and more, to extend monitoring to your AWS or on-host applications, and access the pre-configured dashboards that appear for each of them. 4. Create filter sets With New Relic, users can create filter sets to organize hosts, cluster roles, and other resources based on criteria that matter the most to users. This allows you to optimize your resources by using a focused view to monitor, detect, and resolve any problems proactively. The attributes for filtering are populated from the auto-imported EC2 tags or custom tags that may be applied to hosts. You can combine as many filters as you want in a filter set, and save them to share with other people in your account. You’ll also be able to see the color-coded health status of each host inside the filter set, so you can quickly identify problematic areas of your infrastructure. Additionally, filter sets can be used in the health map to get an overview of your infrastructure performance at a glance based on the filters that matter to your teams. 5. Create alert conditions With New Relic, you can create alert conditions directly within the context of what you are currently monitoring with New Relic. For example, if you are viewing a filter set comprised of a large number of hosts and notice a problem, you don’t need to create an individual alert condition for every host within. Instead, we recommend initiating the alert condition directly from the chart of the metric you are viewing and creating it based on the filter tags. This will create an alert condition for any hosts that match those tags, allowing our infrastructure monitoring to automatically remove hosts that go offline and add new hosts to the alert condition if they match those tags. Alerts configured once for the appropriate tags will scale correctly across all future hosts. And know that you can also leverage existing alert policies for infrastructure alert conditions. 6. View infrastructure data alongside APM data The integration between New Relic APM and infrastructure monitoring lets you see your APM data and infrastructure data side by side, so you can find the root cause of problems more quickly, no matter where they originate. This allows users to view the performance relationship of your hosts and the applications running on them, allowing for quicker diagnosis of the issue and impact on the business’ health. Use health maps to quickly spot any issues or alerts related to the health of your applications and how that connects to the supporting infrastructure. The first boxes starting from the top left are those that require your attention. 7. Access Infrastructure data using the Data explorer Teams that use multiple New Relic capabilities find it useful to create a single dashboard to visually correlate the infrastructure’s health with application, browser and synthetics metrics. That’s where New Relic data exploration features comes in. All the granular metrics and events collected by infrastructure monitoring are stored in New Relic and are accessible to you immediately. Having access to the raw metrics means you can run more custom queries using NRQL, and also create dashboards to share infrastructure metrics with your team. 8. Update your agents regularly New Relic’s software engineering team is constantly pushing out improvements and new features to improve our customers’ overall monitoring experience. In order to take advantage of all the awesomeness they’re delivering, we recommend regularly updating to the latest version of the infrastructure agent. Want more user tips? View training videos at New Relic University. Read the documentation. Check out our Tutorials. Ask a question in the New Relic Explorers Hub.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 227.42703,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Want even longer periods of uninterrupted sleep? Here are eight <em>best</em> <em>practices</em> to make dynamic infrastructure and server monitoring even easier with <em>New</em> <em>Relic</em>&#x27;s infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution"
      },
      "id": "6044151c28ccbc4b4f2c60af"
    }
  ],
  "/docs/new-relic-solutions/best-practices-guides/full-stack-observability/infrastructure-monitoring-best-practices-guide": [
    {
      "sections": [
        "APM best practices guide",
        "Tip",
        "1. Standardize application names",
        "How to do it",
        "2. Add tags to your applications",
        "Caution",
        "3. Create and evaluate alert policies",
        "4. Identify and set up key transactions",
        "5. Track deployment history",
        "6. Review APM reports",
        "7. Review your environment with service maps",
        "8. Keep current",
        "9. Manage user access",
        "Important"
      ],
      "title": "APM best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "368a1a5688384d5bebf128604a9b8f190d335524",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/apm-best-practices-guide/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-03-30T13:08:49Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Application Monitoring Tips You Need To Know It's one thing to know how to use APM, but it's another thing to know how to use New Relic's application performance monitoring software well. Here are some best practices designed to help you become an APM master—and a key asset to your team! Tip To get a high-level overview of all your applications and services, use the New Relic Explorer in New Relic One. 1. Standardize application names Most New Relic agents provide a default application name, such as \"My Application\" or \"PHP Application,\" if you don't specify one in your New Relic configuration file. You don't want to end up with 20 identically named applications, be sure to select a descriptive identifier for your apps as soon you deploy them. To keep things consistent and easy to navigate, New Relic recommends standardizing your application naming (for example, all apps in Staging append [ Staging] or the like at the end of their names). Ideally, you want your new Java applications to be named automatically to reduce the chances of typographical errors and misnaming. How to do it For Java applications, automatic application naming can come from the following sources: Request attribute Servlet init parameter Filter init parameter Web app context parameter Web app context name (display name) Web app context path Choose the method that fits best your needs and follow these steps. For non-Java applications, there are no automatic naming methods, so refer to the documentation for your APM agent. 2. Add tags to your applications When several different applications use the same account, and each application spans multiple environments (for example, development, test, pre-production, production), it can be hard to find a specific application in your overview dashboard. That's why we recommend adding tags to your apps so that you can segment them into logical groups. The two most common tags that mature APM customers use are application name and environment. So, for example, if you wanted to view the billing application in Test, you could simply filter by \"billing app\" (name tag) and \"test\" (environment tag). Caution In the APM agent configuration settings files, use the labels field to add tags to your data. For example, see this description of the Python labels setting. APM is designed so that apps can roll up into an unlimited number of meaningful tag categories. How to do it Read the overview: Use tags to organize and group what you monitor. Follow these instructions for creating tags: NerdGraph tagging API tutorial. 3. Create and evaluate alert policies When key performance indicators spike or drop, individuals and teams in your organization need to be notified. Alerting in New Relic provides a set of tools including dynamic baselines that allow you to detect problems before they impact your end users. Alert policies can be set up in two primary ways: Static threshold alerts are great when you already know the nature of an application and its normal behaviors aren't likely to change anytime soon. Apdex score, response time, error rate, throughput are some of the static thresholds you can create alert policies on. Dynamic baseline alerts make it easy to determine and set dynamic alert thresholds for applications with varying seasonal patterns and growth trends (which make it difficult to set thresholds that define normal behavior). These alerts use baselines modeled from your application’s historical metric data. Each alert policy can contain as many conditions as you need, and each alert condition includes three components: Type of condition (metric, external service, and so on) Entities that the policy targets (for example, apps monitored by New Relic APM or New Relic Browser, hosts monitored by New Relic Infrastructure, and so on) Thresholds that escalate into alerting situations with increasing severity Once you have your alerting set up, you then want to make sure you're taking advantage of all viable notification channels. After all, what good are alerts if no one knows about them? You can manage alerts by creating specific user groups and by leveraging New Relic's integrated alert channels, including Slack, PagerDuty, webhooks, and email. Be sure to evaluate alert policies on a regular basis to ensure that they are always valid. How to do it See the detailed documentation: To set up dynamic baseline alerts and choose an application, follow standard procedures. You will see a preview of the metric with the predicted baseline You can select a metric for that application and see the corresponding baseline. Then, using the threshold sliders, you can set how closely you want your threshold to follow the baseline prediction. To set up static threshold alerts for your Apdex settings, follow standard procedures. To set up your alert notification channels, follow standard procedures. 4. Identify and set up key transactions Depending on the nature of your application, some transactions may be more important to you than others. New Relic's key transactions feature is designed to help you closely monitor what you consider to be your app's most business-critical transactions, whether that's end-user or app response time, call counts, error rates, or something else. You can also set alert threshold levels for notifications when your key transactions are performing poorly. How to do it In the menu bar, select More > Key transactions, and then select Add more. Then select the app and web transaction or, from the selected transaction, select Track as key transaction. Type a name for the key transaction, and select Track key transaction. Optional: If the agent for the selected app supports custom alerting, use the default values that New Relic automatically fills, or select Edit key alert transaction policy to set the Apdex and alert threshold values. To view the key transactions dashboard details, select View new key transaction. 5. Track deployment history When development teams are pushing new code out as frequently as possible, it can be hard to measure the impact that each deployment is having on performance. One way to stay in tune with how these changes are affecting your application is with deployment reports. These reports list recent deployments and their impact on end-users and app servers' Apdex scores, along with response times, throughput, and errors. You can also view and drill down into the details to catch errors related to recent deployments, or file a ticket and share details with your team. How to do it From the New Relic menu bar, select APM > (selected app) > Events > Deployments. To view performance after a deployment, go to the selected app's Overview dashboard in the Recent events section. A blue vertical bar on a chart indicates a deployment. To view summary information about the deployment, point to the blue bar. 6. Review APM reports From SLA, deployment, and capacity to scalability, host usage reports, and more, New Relic APM offers a variety of downloadable reporting tools surfacing historical trends—all great ways to report to senior executive teams or customers. Take a look at the full list of reports and use them to your advantage. How to do it From the New Relic APM menu bar, select Applications > (selected app) > Reports. Select the report you'd like to see. If you want to save or export a report to share, select Download this report as .csv, which will create a report with comma-separated values. 7. Review your environment with service maps Use New Relic service maps, a feature included in APM, to understand how apps and services in your architecture connect and talk to each other. Service maps are visual, customizable representations of your application architecture. Maps automatically show you your app's connections and dependencies, including databases and external services. Health indicators and performance metrics show you the current operational status for every part of your architecture. How to do it Go to one.newrelic.com > More > service maps. To get started, read the instructions in Introduction to service maps. 8. Keep current With New Relic’s SaaS platform, getting new features is as easy as updating your agent. Most likely your organization already has a set of scripts for deploying application upgrades into your environment. In a similar fashion, you can also automate your New Relic agent deployment to ensure that your systems are up to date. Both Puppet and Chef scripts are great examples of deployment frameworks that make life easier by allowing you to automate your entire deployment and management process. How to do it Regularly review which version of the agent you're using so that you know when an update is needed. If the latest agent release contains a needed fix or added functionality, download it. To deploy the agent automatically (preferred as a method to avoid errors): Use existing deployment scripts, provided they can be adapted to handle the deployment. OR Create and maintain a script that specifically deploys and configures the New Relic agent. Ideally, the script would pull the agent files from a repository where the files are versioned (for rollback purposes). Once the script has been created, shut down the application (unless script handles this). Run the deployment script. Start the application (unless script handles this). If problems arise, run the script to roll back to the previous version. To deploy the agent manually: Back up the current agent directory. Deploy the updated agent into the existing agent directory. Modify configuration files by comparing new files with existing files. In particular, make sure things like license key and custom extensions are copied over to the new configuration. Restart the application. If problems arise, restore the old agent using the backup and restart. 9. Manage user access Important This is available only for accounts on our original product-based pricing plan. Enable role-based access control (RBAC) and single sign-on (SSO) New Relic allows authorized individuals to access the broadest possible amount of data, regardless of their assigned role. As an Owner or Administrator of your New Relic account, you can control the permissions of individual users or entire roles with RBAC. To find out what is possible and how to make changes, see Users and roles. Security is no doubt of utmost concern to your organization. To simplify password management for your employees and strengthen security, you may already be using SSO with your other systems. You should do the same with New Relic. Using New Relic's SSO integration feature, account administrators will be able to enforce strong passwords and restrict login via a corporate authentication mechanism. This way, New Relic users who have already authenticated using a corporate SSO system will be able to bypass the New Relic login prompt. How to do it Log in to New Relic as an admin and go to the SSO configuration page. From the New Relic title bar, select (your account name) > Account Settings > Integrations > Single Sign On. From the SAML Single Sign On page, review your New Relic SAML Service Provider details. To upload your SAML Identity Provider certificate, select Choose File, and then follow standard procedures to select and save the file. Copy and paste in (or type) the Remove login URL that your users will use for Single Sign-On. If your organization’s SAML integration provides a redirect URL for logout, copy and paste in (or type) the Logout landing URL; otherwise leave blank. Save, test, and enable.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 240.1531,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Application Monitoring Tips You Need To Know It&#x27;s one thing to know how to use APM, but it&#x27;s another thing to know how to use <em>New</em> <em>Relic</em>&#x27;s application performance monitoring software well. Here are some <em>best</em> <em>practices</em> designed to help you become an APM master—and a key asset to your team! Tip To get"
      },
      "id": "6044186564441f1f94378ecc"
    },
    {
      "sections": [
        "Synthetic monitoring best practices guide",
        "Tip",
        "1. Match your monitor type to monitoring need",
        "How to do it",
        "2. View all monitors with the Monitors index page",
        "How to view your monitors in the New Relic One:",
        "New Relic Explorer",
        "Monitors index page",
        "3. View individual monitor results",
        "How to do it:",
        "4. Understand the load-time impact of each resource",
        "5. Configure and develop a scripted browser test"
      ],
      "title": "Synthetic monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e76eb0669a1433bb9d0de70d90413e19749adf61",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/synthetic-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:54:11Z",
      "updated_at": "2021-03-29T20:29:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its full power. Tip To use synthetic monitoring and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. 1. Match your monitor type to monitoring need Synthetic monitors are virtual browsers that measure the performance of your website, recording each check in detail. They also capture aggregate numbers for load time, uptime, and average download size, as well as an overview, detailed statistics for each page resource, and downtime incidents. There are four types of synthetic monitors; the ones you deploy will depend on the things you want to monitor: Ping monitors—to ensure that your site is accessible. Simple browser monitors—to ensure end-user performance. Scripted browsers—to ensure that particular resources are present. API monitors—to ensure that your app server works as well as your website. How to do it To add a monitor, go to one.newrelic.com > Synthetics (or one.eu.newrelic.com if you have an EU-based account) and click Create monitor. Specify monitor type, name, and URL. Optional: Add a validation string (available for ping and simple browser) or advanced options, which enable substring monitoring for the following types of response validation: Verify SSL (for Ping and Simple Browser). This option verifies the validity of the SSL certificate chain. It can be duplicated by running the following syntax: openssl s_client -servername {YOUR_HOSTNAME} -connect {YOUR_HOSTNAME}:443 -CApath /etc/ssl/certs > /dev/null Copy Bypass HEAD request (for Ping). This option skips the default HEAD request and instead uses the GET verb with a ping check. Redirect is Failure (for Ping). If a redirect result occurs when Redirect is Failure is enabled, Synthetics categorizes it as a failure (rather than following the redirect and checking the resulting URL). Select the locations where you want your monitor to run. Choose a frequency to determine how often each location will run your monitor. Optional: Set up alert notifications. Select Create my monitor to confirm. Wait a few minutes; then from the Monitors index check your monitor. 2. View all monitors with the Monitors index page Continuous application performance monitoring is essential to ensure that web services are in place, working correctly, and error-free. Synthetic monitoring provides this type of assurance by performing automated tests on your web application for each selected location—noting downtime instances (“violations”) and collecting aggregate numbers, results, and detailed statistics for each page resource. Use the Monitors index page to get a high level view of this information, or select an individual monitor to view the Summary, for ping monitors, or Overview, for simple and scripted monitors, page and get a deeper insight into its performance over time. How to view your monitors in the New Relic One: New Relic Explorer To view a list of monitors using the New Relic One Monitors index page: Go to one.newrelic.com > Explorer > Synthetic monitors. For more information, see the documentation about navigating core UI components in New Relic One. Monitors index page To view a list of monitors using the Monitors index page: Go to one.newrelic.com > Synthetics. 3. View individual monitor results It’s not enough to understand how your web apps are performing for your West Coast customers; you need to be able to view how they’re performing across the country and around the globe. By taking advantage of synthetic monitors and visiting your Results page, you can see how everything from development to production affects user experience. You can locate interesting results by sorting the list to identify slow, fast, or other unusual results. Or filter by location to understand how monitor performance varies with geography. (The “Network timings” graph below provides a snapshot of webpage performance over a given period.) How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors tab, select your monitor. Select Monitor > Results. Gain an up-to-the-minute view of the slowest page loads for every monitored location. 4. Understand the load-time impact of each resource Visit the synthetics Resources page to see how each resource on your website—including CSS, JavaScript, images, HTML and more—is affecting your overall load. You can drill into detailed metrics collected at run time, locate performance information for time spent by third-party resources, and identify HTTP response codes for each resource. How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors drop-down menu, select your monitor. Select Monitor > Resources. 5. Configure and develop a scripted browser test Using scripted browsers, you can build complex monitoring workflows using the Selenium JavaScript Webdriver bindings. For instance, you can log in to the application, navigate to a particular link, and wait for a page element to load and add an assertion. How to do it: Go to one.newrelic.com > Synthetics. Choose your monitor type (for example, Scripted Browser). Enter the name and details of your monitor (for example, Sitename.com Scripted Browser) Select the locations from which you want your monitor to run (for example, Mumbai, Seoul, Columbus, and Montreal). Choose a frequency to determine how often each location will run your monitor (for example, five minutes). Set a notification method to alert your team when performance violations occur. You are now ready to write your script. (Below is an example of a script used to test the performance of a main navigation page.) var assert = require('chai').assert; // script-wide timeout for all wait and waitandfind functions (in ms) var default_element_timeout = 190000; //3 mins var default_pageload_timeout = 240000; //4 mins var navlinks = [\"css-locator-1\",\"css-locator-2\"]; //sets element load timeout to 3 mins $browser.manage().timeouts().implicitlyWait(default_element_timeout); //sets page load timoeout to 4 mins $browser.manage().timeouts().pageloadTimeout(default_pageload_timeout); //test all the main nav page performances $browser.get(\"http://www.sitename.com\").then(function(){ return $browser.findelement($driver.by.classname(\"site-theme-example\")); }).then(function(){ //verifies the nav list has loaded return $browser.findelement($driver.by.classname(\"site-nav-list-example\")); }).then(function(){ //loops through the navlinks array navlinks.foreach(function(val, i, arr){ //finds and navigates to each navlink page return $browser.findelement($driver.by.classname(navlinks[i])).click().then(function(){ //verifies that the nav list loaded before moving on return $browser.findelement($driver.by.classname(\"site-nav-list-example\")).then(function(){ //verifies that the page logo footer at bottom of page has loaded return $browser.findelement($driver.by.classname(\"site-footer-logo\")); }) }) }) }); Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 239.45793,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its <em>full</em> power. Tip To use synthetic monitoring and the rest of our"
      },
      "id": "603e84bb28ccbce555eba771"
    },
    {
      "sections": [
        "Monitor apps and hosts with health maps",
        "Best practices",
        "Features",
        "Entities prioritized by health",
        "Tip",
        "Entity sort order criteria",
        "Views, filters, toggles",
        "View and use health maps",
        "Use cases",
        "The system's current health at a glance",
        "Scope of the problem: What else is broken?",
        "Scale of the problem: Use context to find a noisy neighbor",
        "Troubleshooting"
      ],
      "title": "Monitor apps and hosts with health maps",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e7d1c9a1f713b33c4aa42c2cb5e1b7a6ac23c2e3",
      "image": "https://docs.newrelic.com/static/2a20f997d494faa0658b6d93c6ab1fd3/c1b63/health-map-demo-ss_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/monitor-apps-hosts-health-maps/",
      "published_at": "2021-05-05T19:51:59Z",
      "updated_at": "2021-03-13T07:37:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The health map provides a single place to visually monitor the health of all your apps and their related hosts, prioritized by health status. You can customize the page by using different views, filters, and toggles to organize the map in a way most relevant to you or your team. Use your health map to monitor applications and hosts in real-time, and quickly track down problems as they occur. Best practices The health map pulls data together from several New Relic solutions. To get the most out of the health map, we recommend using the following features: Infrastructure monitoring: Create filter sets to meaningfully categorize hosts. APM: Create tags to meaningfully categorize your applications. Alerts: Create alert policies that cover all your alerting scenarios. The health map is also especially useful if you're using containerized apps on hosts, with many instances of apps per host. Features one.newrelic.com > More > Health maps: The health map combines data from APM, infrastructure monitoring, and alerts to display your applications and hosts prioritized by health status. Health map features include: Entities prioritized by health The health map organizes the page by primary entity boxes. Primary entity boxes contain current (refreshes every two minutes), at-a-glance health and performance data, secondary entities related to it, and links to relevant APM or Infrastructure UI pages for detailed performance data. Example of a health map primary entity box with secondary entities. The health map prioritizes entities based on the health status of primary then secondary entities. The health status is determined using data from Alerts. The health map prioritizes the entities by first sorting the primary entities by health status, then sorting those by the health status of their secondary entities (related apps or hosts). The health map supports red, yellow, green, light green (not targeted by any conditions), and gray (application stopped reporting data) statuses for applications. The health map supports red, yellow, and green statuses for hosts. Tip If you have a host not targeted by any conditions, it appears green on the health map. If a host is not reporting data, it does not display on the health map unless you create a host-not-reporting condition. Entities are prioritized to the top based on this order: Entity sort order criteria Primary entities that have critical (red) health status ordered by: Count of secondary entities with critical (red) health status Count of secondary entities with warning (yellow) health status Count of secondary entities with green health status Count of secondary entities with light green health status (host view only) Primary entities that have warning (yellow) health status ordered by: Count of secondary entities with critical (red) health status Count of secondary entities with warning (yellow) health status Count of secondary entities with green health status Count of secondary entities with light green health status (host view only) Primary entities that have green health status ordered by: Count of secondary entities with critical (red) health status Count of secondary entities with warning (yellow) health status Count of secondary entities with green health status Count of secondary entities with light green health status (host view only) Count of secondary entities Name of entity Views, filters, toggles Use the Views dropdown to see the health of your system organized by your applications or your hosts. You can then filter those views by tags (apps) or filter set (hosts) to only see data most relevant to you or your team. Use the Show metrics/hosts toggles to show more/less information in the entity boxes. View Description Applications and related hosts Organizes the map by application entities to display for each app: Health status color Condition violation information, if any Summary metrics Health of related hosts the application is running on as reported by New Relic Infrastructure Map includes an optional app tag filter. Hosts and related applications Organizes the map by host entities to display for each host: Health status color Condition violation information, if any Summary metrics Health of related applications running on the host reported by New Relic APM Map includes an optional host filter. Filter sets and related hosts Uses data reported by our infrastructure monitoring to display: Health of the hosts in each filter set in Infrastructure View and use health maps Tip To get the most out of your health map, see health maps best practices. The health map represents the current state of your system. The map refreshes every two minutes. To view the health map: From one.newrelic.com, select More, then select Health maps. Select a view from the View dropdown to organize the map by application, host, or infrastructure filter sets. If using the views Applications and related hosts or Hosts and related applications, use the Filter dropdown to only display entities most interesting to you or your team. Optional: Toggle Show metrics or Show hosts to display more or less entity data. Optional: Display the health map on a TV / wallboard in your operations center to see your system's current health at a glance. If entities start showing critical (red) or warning (yellow) health statuses, hover over the entity or the Related hosts/apps tiles for violation information to quickly ascertain the scope and scale of the problem. Click through to the relevant APM or Infrastructure UI pages to get detailed information to start troubleshooting. Use cases The health map is designed to help operations and DevOps professionals, who are responsible for the health of large, complex environments, understand: The system's current health at a glance You like to have a view up on the TV wallboard in your network operations center (NOC) that represents the health of all systems. You may be focused on a task and not notice when an alert comes in. With a wallboard you can feel assured that you can always glance up to see if anything is on fire. Conversely, even though something is alerting, you like to see the applications and hosts that are healthy to help keep things in perspective. Scope of the problem: What else is broken? You are responsible for many applications at your company. At any point in time, something is alerting and because there are many applications deployed across many hosts, it’s difficult for you to keep track of everything and know what is experiencing problems. The health map gives you a single place to see the health and relationship between all applications and hosts. You can easily correlate the alerting host with applications deployed to it and easily answer the question: What else is broken right now? Scale of the problem: Use context to find a noisy neighbor With container orchestration deploying containerized applications across many hosts, it’s difficult for you to understand the scale of the problem when you receive an alert for a host or groups of hosts. By using the application view of the health map, you can see the alerting host along with all the other hosts serving the application. If the issue is isolated to a single host, you can change to the host view of the health map to see what other applications are deployed on that host. In that view, you see that the host has four applications running and one of the applications is alerting on higher than normal throughput. Troubleshooting If health map host boxes do not display their installed apps, or if application boxes do not display the Infrastructure-monitored hosts where they are running, see APM data missing from infrastructure monitoring.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 227.42639,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Best</em> <em>practices</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": " to monitor applications and hosts in real-time, and quickly track down problems as they occur. <em>Best</em> <em>practices</em> The health map pulls data together from several <em>New</em> <em>Relic</em> <em>solutions</em>. To get the most out of the health map, we recommend using the following features: Infrastructure monitoring: Create"
      },
      "id": "6044155e28ccbc6f972ea01c"
    }
  ],
  "/docs/new-relic-solutions/best-practices-guides/full-stack-observability/mobile-monitoring-best-practices-guide": [
    {
      "sections": [
        "APM best practices guide",
        "Tip",
        "1. Standardize application names",
        "How to do it",
        "2. Add tags to your applications",
        "Caution",
        "3. Create and evaluate alert policies",
        "4. Identify and set up key transactions",
        "5. Track deployment history",
        "6. Review APM reports",
        "7. Review your environment with service maps",
        "8. Keep current",
        "9. Manage user access",
        "Important"
      ],
      "title": "APM best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "368a1a5688384d5bebf128604a9b8f190d335524",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/apm-best-practices-guide/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-03-30T13:08:49Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Application Monitoring Tips You Need To Know It's one thing to know how to use APM, but it's another thing to know how to use New Relic's application performance monitoring software well. Here are some best practices designed to help you become an APM master—and a key asset to your team! Tip To get a high-level overview of all your applications and services, use the New Relic Explorer in New Relic One. 1. Standardize application names Most New Relic agents provide a default application name, such as \"My Application\" or \"PHP Application,\" if you don't specify one in your New Relic configuration file. You don't want to end up with 20 identically named applications, be sure to select a descriptive identifier for your apps as soon you deploy them. To keep things consistent and easy to navigate, New Relic recommends standardizing your application naming (for example, all apps in Staging append [ Staging] or the like at the end of their names). Ideally, you want your new Java applications to be named automatically to reduce the chances of typographical errors and misnaming. How to do it For Java applications, automatic application naming can come from the following sources: Request attribute Servlet init parameter Filter init parameter Web app context parameter Web app context name (display name) Web app context path Choose the method that fits best your needs and follow these steps. For non-Java applications, there are no automatic naming methods, so refer to the documentation for your APM agent. 2. Add tags to your applications When several different applications use the same account, and each application spans multiple environments (for example, development, test, pre-production, production), it can be hard to find a specific application in your overview dashboard. That's why we recommend adding tags to your apps so that you can segment them into logical groups. The two most common tags that mature APM customers use are application name and environment. So, for example, if you wanted to view the billing application in Test, you could simply filter by \"billing app\" (name tag) and \"test\" (environment tag). Caution In the APM agent configuration settings files, use the labels field to add tags to your data. For example, see this description of the Python labels setting. APM is designed so that apps can roll up into an unlimited number of meaningful tag categories. How to do it Read the overview: Use tags to organize and group what you monitor. Follow these instructions for creating tags: NerdGraph tagging API tutorial. 3. Create and evaluate alert policies When key performance indicators spike or drop, individuals and teams in your organization need to be notified. Alerting in New Relic provides a set of tools including dynamic baselines that allow you to detect problems before they impact your end users. Alert policies can be set up in two primary ways: Static threshold alerts are great when you already know the nature of an application and its normal behaviors aren't likely to change anytime soon. Apdex score, response time, error rate, throughput are some of the static thresholds you can create alert policies on. Dynamic baseline alerts make it easy to determine and set dynamic alert thresholds for applications with varying seasonal patterns and growth trends (which make it difficult to set thresholds that define normal behavior). These alerts use baselines modeled from your application’s historical metric data. Each alert policy can contain as many conditions as you need, and each alert condition includes three components: Type of condition (metric, external service, and so on) Entities that the policy targets (for example, apps monitored by New Relic APM or New Relic Browser, hosts monitored by New Relic Infrastructure, and so on) Thresholds that escalate into alerting situations with increasing severity Once you have your alerting set up, you then want to make sure you're taking advantage of all viable notification channels. After all, what good are alerts if no one knows about them? You can manage alerts by creating specific user groups and by leveraging New Relic's integrated alert channels, including Slack, PagerDuty, webhooks, and email. Be sure to evaluate alert policies on a regular basis to ensure that they are always valid. How to do it See the detailed documentation: To set up dynamic baseline alerts and choose an application, follow standard procedures. You will see a preview of the metric with the predicted baseline You can select a metric for that application and see the corresponding baseline. Then, using the threshold sliders, you can set how closely you want your threshold to follow the baseline prediction. To set up static threshold alerts for your Apdex settings, follow standard procedures. To set up your alert notification channels, follow standard procedures. 4. Identify and set up key transactions Depending on the nature of your application, some transactions may be more important to you than others. New Relic's key transactions feature is designed to help you closely monitor what you consider to be your app's most business-critical transactions, whether that's end-user or app response time, call counts, error rates, or something else. You can also set alert threshold levels for notifications when your key transactions are performing poorly. How to do it In the menu bar, select More > Key transactions, and then select Add more. Then select the app and web transaction or, from the selected transaction, select Track as key transaction. Type a name for the key transaction, and select Track key transaction. Optional: If the agent for the selected app supports custom alerting, use the default values that New Relic automatically fills, or select Edit key alert transaction policy to set the Apdex and alert threshold values. To view the key transactions dashboard details, select View new key transaction. 5. Track deployment history When development teams are pushing new code out as frequently as possible, it can be hard to measure the impact that each deployment is having on performance. One way to stay in tune with how these changes are affecting your application is with deployment reports. These reports list recent deployments and their impact on end-users and app servers' Apdex scores, along with response times, throughput, and errors. You can also view and drill down into the details to catch errors related to recent deployments, or file a ticket and share details with your team. How to do it From the New Relic menu bar, select APM > (selected app) > Events > Deployments. To view performance after a deployment, go to the selected app's Overview dashboard in the Recent events section. A blue vertical bar on a chart indicates a deployment. To view summary information about the deployment, point to the blue bar. 6. Review APM reports From SLA, deployment, and capacity to scalability, host usage reports, and more, New Relic APM offers a variety of downloadable reporting tools surfacing historical trends—all great ways to report to senior executive teams or customers. Take a look at the full list of reports and use them to your advantage. How to do it From the New Relic APM menu bar, select Applications > (selected app) > Reports. Select the report you'd like to see. If you want to save or export a report to share, select Download this report as .csv, which will create a report with comma-separated values. 7. Review your environment with service maps Use New Relic service maps, a feature included in APM, to understand how apps and services in your architecture connect and talk to each other. Service maps are visual, customizable representations of your application architecture. Maps automatically show you your app's connections and dependencies, including databases and external services. Health indicators and performance metrics show you the current operational status for every part of your architecture. How to do it Go to one.newrelic.com > More > service maps. To get started, read the instructions in Introduction to service maps. 8. Keep current With New Relic’s SaaS platform, getting new features is as easy as updating your agent. Most likely your organization already has a set of scripts for deploying application upgrades into your environment. In a similar fashion, you can also automate your New Relic agent deployment to ensure that your systems are up to date. Both Puppet and Chef scripts are great examples of deployment frameworks that make life easier by allowing you to automate your entire deployment and management process. How to do it Regularly review which version of the agent you're using so that you know when an update is needed. If the latest agent release contains a needed fix or added functionality, download it. To deploy the agent automatically (preferred as a method to avoid errors): Use existing deployment scripts, provided they can be adapted to handle the deployment. OR Create and maintain a script that specifically deploys and configures the New Relic agent. Ideally, the script would pull the agent files from a repository where the files are versioned (for rollback purposes). Once the script has been created, shut down the application (unless script handles this). Run the deployment script. Start the application (unless script handles this). If problems arise, run the script to roll back to the previous version. To deploy the agent manually: Back up the current agent directory. Deploy the updated agent into the existing agent directory. Modify configuration files by comparing new files with existing files. In particular, make sure things like license key and custom extensions are copied over to the new configuration. Restart the application. If problems arise, restore the old agent using the backup and restart. 9. Manage user access Important This is available only for accounts on our original product-based pricing plan. Enable role-based access control (RBAC) and single sign-on (SSO) New Relic allows authorized individuals to access the broadest possible amount of data, regardless of their assigned role. As an Owner or Administrator of your New Relic account, you can control the permissions of individual users or entire roles with RBAC. To find out what is possible and how to make changes, see Users and roles. Security is no doubt of utmost concern to your organization. To simplify password management for your employees and strengthen security, you may already be using SSO with your other systems. You should do the same with New Relic. Using New Relic's SSO integration feature, account administrators will be able to enforce strong passwords and restrict login via a corporate authentication mechanism. This way, New Relic users who have already authenticated using a corporate SSO system will be able to bypass the New Relic login prompt. How to do it Log in to New Relic as an admin and go to the SSO configuration page. From the New Relic title bar, select (your account name) > Account Settings > Integrations > Single Sign On. From the SAML Single Sign On page, review your New Relic SAML Service Provider details. To upload your SAML Identity Provider certificate, select Choose File, and then follow standard procedures to select and save the file. Copy and paste in (or type) the Remove login URL that your users will use for Single Sign-On. If your organization’s SAML integration provides a redirect URL for logout, copy and paste in (or type) the Logout landing URL; otherwise leave blank. Save, test, and enable.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 240.15309,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Application Monitoring Tips You Need To Know It&#x27;s one thing to know how to use APM, but it&#x27;s another thing to know how to use <em>New</em> <em>Relic</em>&#x27;s application performance monitoring software well. Here are some <em>best</em> <em>practices</em> designed to help you become an APM master—and a key asset to your team! Tip To get"
      },
      "id": "6044186564441f1f94378ecc"
    },
    {
      "sections": [
        "Synthetic monitoring best practices guide",
        "Tip",
        "1. Match your monitor type to monitoring need",
        "How to do it",
        "2. View all monitors with the Monitors index page",
        "How to view your monitors in the New Relic One:",
        "New Relic Explorer",
        "Monitors index page",
        "3. View individual monitor results",
        "How to do it:",
        "4. Understand the load-time impact of each resource",
        "5. Configure and develop a scripted browser test"
      ],
      "title": "Synthetic monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e76eb0669a1433bb9d0de70d90413e19749adf61",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/synthetic-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:54:11Z",
      "updated_at": "2021-03-29T20:29:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its full power. Tip To use synthetic monitoring and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. 1. Match your monitor type to monitoring need Synthetic monitors are virtual browsers that measure the performance of your website, recording each check in detail. They also capture aggregate numbers for load time, uptime, and average download size, as well as an overview, detailed statistics for each page resource, and downtime incidents. There are four types of synthetic monitors; the ones you deploy will depend on the things you want to monitor: Ping monitors—to ensure that your site is accessible. Simple browser monitors—to ensure end-user performance. Scripted browsers—to ensure that particular resources are present. API monitors—to ensure that your app server works as well as your website. How to do it To add a monitor, go to one.newrelic.com > Synthetics (or one.eu.newrelic.com if you have an EU-based account) and click Create monitor. Specify monitor type, name, and URL. Optional: Add a validation string (available for ping and simple browser) or advanced options, which enable substring monitoring for the following types of response validation: Verify SSL (for Ping and Simple Browser). This option verifies the validity of the SSL certificate chain. It can be duplicated by running the following syntax: openssl s_client -servername {YOUR_HOSTNAME} -connect {YOUR_HOSTNAME}:443 -CApath /etc/ssl/certs > /dev/null Copy Bypass HEAD request (for Ping). This option skips the default HEAD request and instead uses the GET verb with a ping check. Redirect is Failure (for Ping). If a redirect result occurs when Redirect is Failure is enabled, Synthetics categorizes it as a failure (rather than following the redirect and checking the resulting URL). Select the locations where you want your monitor to run. Choose a frequency to determine how often each location will run your monitor. Optional: Set up alert notifications. Select Create my monitor to confirm. Wait a few minutes; then from the Monitors index check your monitor. 2. View all monitors with the Monitors index page Continuous application performance monitoring is essential to ensure that web services are in place, working correctly, and error-free. Synthetic monitoring provides this type of assurance by performing automated tests on your web application for each selected location—noting downtime instances (“violations”) and collecting aggregate numbers, results, and detailed statistics for each page resource. Use the Monitors index page to get a high level view of this information, or select an individual monitor to view the Summary, for ping monitors, or Overview, for simple and scripted monitors, page and get a deeper insight into its performance over time. How to view your monitors in the New Relic One: New Relic Explorer To view a list of monitors using the New Relic One Monitors index page: Go to one.newrelic.com > Explorer > Synthetic monitors. For more information, see the documentation about navigating core UI components in New Relic One. Monitors index page To view a list of monitors using the Monitors index page: Go to one.newrelic.com > Synthetics. 3. View individual monitor results It’s not enough to understand how your web apps are performing for your West Coast customers; you need to be able to view how they’re performing across the country and around the globe. By taking advantage of synthetic monitors and visiting your Results page, you can see how everything from development to production affects user experience. You can locate interesting results by sorting the list to identify slow, fast, or other unusual results. Or filter by location to understand how monitor performance varies with geography. (The “Network timings” graph below provides a snapshot of webpage performance over a given period.) How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors tab, select your monitor. Select Monitor > Results. Gain an up-to-the-minute view of the slowest page loads for every monitored location. 4. Understand the load-time impact of each resource Visit the synthetics Resources page to see how each resource on your website—including CSS, JavaScript, images, HTML and more—is affecting your overall load. You can drill into detailed metrics collected at run time, locate performance information for time spent by third-party resources, and identify HTTP response codes for each resource. How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors drop-down menu, select your monitor. Select Monitor > Resources. 5. Configure and develop a scripted browser test Using scripted browsers, you can build complex monitoring workflows using the Selenium JavaScript Webdriver bindings. For instance, you can log in to the application, navigate to a particular link, and wait for a page element to load and add an assertion. How to do it: Go to one.newrelic.com > Synthetics. Choose your monitor type (for example, Scripted Browser). Enter the name and details of your monitor (for example, Sitename.com Scripted Browser) Select the locations from which you want your monitor to run (for example, Mumbai, Seoul, Columbus, and Montreal). Choose a frequency to determine how often each location will run your monitor (for example, five minutes). Set a notification method to alert your team when performance violations occur. You are now ready to write your script. (Below is an example of a script used to test the performance of a main navigation page.) var assert = require('chai').assert; // script-wide timeout for all wait and waitandfind functions (in ms) var default_element_timeout = 190000; //3 mins var default_pageload_timeout = 240000; //4 mins var navlinks = [\"css-locator-1\",\"css-locator-2\"]; //sets element load timeout to 3 mins $browser.manage().timeouts().implicitlyWait(default_element_timeout); //sets page load timoeout to 4 mins $browser.manage().timeouts().pageloadTimeout(default_pageload_timeout); //test all the main nav page performances $browser.get(\"http://www.sitename.com\").then(function(){ return $browser.findelement($driver.by.classname(\"site-theme-example\")); }).then(function(){ //verifies the nav list has loaded return $browser.findelement($driver.by.classname(\"site-nav-list-example\")); }).then(function(){ //loops through the navlinks array navlinks.foreach(function(val, i, arr){ //finds and navigates to each navlink page return $browser.findelement($driver.by.classname(navlinks[i])).click().then(function(){ //verifies that the nav list loaded before moving on return $browser.findelement($driver.by.classname(\"site-nav-list-example\")).then(function(){ //verifies that the page logo footer at bottom of page has loaded return $browser.findelement($driver.by.classname(\"site-footer-logo\")); }) }) }) }); Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 239.45792,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its <em>full</em> power. Tip To use synthetic monitoring and the rest of our"
      },
      "id": "603e84bb28ccbce555eba771"
    },
    {
      "sections": [
        "Infrastructure monitoring best practices guide",
        "1. Install the infrastructure agent across your entire environment",
        "How to do it",
        "Tip",
        "2. Configure the native EC2 integration",
        "3. Activate the integrations",
        "4. Create filter sets",
        "5. Create alert conditions",
        "6. View infrastructure data alongside APM data",
        "7. Access Infrastructure data using the Data explorer",
        "8. Update your agents regularly",
        "Want more user tips?"
      ],
      "title": "Infrastructure monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "931ea7767d73381ca0cb3502ec14f88d66ce5eaf",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/infrastructure-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:51:11Z",
      "updated_at": "2021-03-13T07:39:11Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Want even longer periods of uninterrupted sleep? Here are eight best practices to make dynamic infrastructure and server monitoring even easier with New Relic's infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution was designed to help enterprise customers monitor their large and dynamically changing environments at scale. In order to facilitate this, the UI is completely driven by tags that let you visualize aggregated metrics, events, and inventory for a large number of servers. To really get the most out of infrastructure monitoring, we recommend installing it across your entire environment, preferably even across multiple regions and clusters. This will provide a more accurate picture of the health of your host ecosystem and the impact your infrastructure has on your applications. Want to achieve faster Mean Time To Resolution (MTTR)? Install the infrastructure agent on database servers, web servers, and any other host that supports your applications. When deploying the agent, leverage custom attributes to tag your hosts so that you can use those for filtering the data presented in the UI and for setting alerts. This is in addition to any Amazon EC2 tags you may be using which will auto-import when you enable the EC2 integration. You may also prefer to keep the agent logs separate from the system logs, which you can do through the configuration. How to do it Leverage our install modules for config management tools such as Chef, Puppet and Ansible to easily deploy your agent across all your infrastructure. Read the instructions in the github repo for your config management tool referenced in the link above and define the custom_attributes you want to use to tag your hosts. Set the log_file attribute to your preferred location for the infrastructure agent logs. Tip If you are installing the agent on a single host, the process should only take a few minutes and you can find detailed instructions in our documentation. 2. Configure the native EC2 integration If you have an AWS environment, in addition to installing the infrastructure agent on your EC2 instances to monitor them, we also recommend configuring the EC2 integration so that New Relic can automatically import all the tags and metadata associated with your AWS instances. This allows you to filter down to a part of your infrastructure using the same AWS tags (example, ECTag_Role='Kafka'), and slice-and-dice your data in multiple ways. Additionally, our ‘Alerts’ and ‘Saved Filter Sets’ are completely tag-driven and dynamic, so they automatically add/remove instances matching these tags to give our users the most real-time views that scale with your cloud infrastructure. 3. Activate the integrations Monitoring your infrastructure extends beyond just CPU, memory, and storage utilization. That’s why New Relic has out-of-the-box integrations that allow you to monitor all the services that support your hosts as well. Activate any of our integrations, including AWS Billing, AWS ELB, Amazon S3, MySQL, NGINX, and more, to extend monitoring to your AWS or on-host applications, and access the pre-configured dashboards that appear for each of them. 4. Create filter sets With New Relic, users can create filter sets to organize hosts, cluster roles, and other resources based on criteria that matter the most to users. This allows you to optimize your resources by using a focused view to monitor, detect, and resolve any problems proactively. The attributes for filtering are populated from the auto-imported EC2 tags or custom tags that may be applied to hosts. You can combine as many filters as you want in a filter set, and save them to share with other people in your account. You’ll also be able to see the color-coded health status of each host inside the filter set, so you can quickly identify problematic areas of your infrastructure. Additionally, filter sets can be used in the health map to get an overview of your infrastructure performance at a glance based on the filters that matter to your teams. 5. Create alert conditions With New Relic, you can create alert conditions directly within the context of what you are currently monitoring with New Relic. For example, if you are viewing a filter set comprised of a large number of hosts and notice a problem, you don’t need to create an individual alert condition for every host within. Instead, we recommend initiating the alert condition directly from the chart of the metric you are viewing and creating it based on the filter tags. This will create an alert condition for any hosts that match those tags, allowing our infrastructure monitoring to automatically remove hosts that go offline and add new hosts to the alert condition if they match those tags. Alerts configured once for the appropriate tags will scale correctly across all future hosts. And know that you can also leverage existing alert policies for infrastructure alert conditions. 6. View infrastructure data alongside APM data The integration between New Relic APM and infrastructure monitoring lets you see your APM data and infrastructure data side by side, so you can find the root cause of problems more quickly, no matter where they originate. This allows users to view the performance relationship of your hosts and the applications running on them, allowing for quicker diagnosis of the issue and impact on the business’ health. Use health maps to quickly spot any issues or alerts related to the health of your applications and how that connects to the supporting infrastructure. The first boxes starting from the top left are those that require your attention. 7. Access Infrastructure data using the Data explorer Teams that use multiple New Relic capabilities find it useful to create a single dashboard to visually correlate the infrastructure’s health with application, browser and synthetics metrics. That’s where New Relic data exploration features comes in. All the granular metrics and events collected by infrastructure monitoring are stored in New Relic and are accessible to you immediately. Having access to the raw metrics means you can run more custom queries using NRQL, and also create dashboards to share infrastructure metrics with your team. 8. Update your agents regularly New Relic’s software engineering team is constantly pushing out improvements and new features to improve our customers’ overall monitoring experience. In order to take advantage of all the awesomeness they’re delivering, we recommend regularly updating to the latest version of the infrastructure agent. Want more user tips? View training videos at New Relic University. Read the documentation. Check out our Tutorials. Ask a question in the New Relic Explorers Hub.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 227.42703,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Want even longer periods of uninterrupted sleep? Here are eight <em>best</em> <em>practices</em> to make dynamic infrastructure and server monitoring even easier with <em>New</em> <em>Relic</em>&#x27;s infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution"
      },
      "id": "6044151c28ccbc4b4f2c60af"
    }
  ],
  "/docs/new-relic-solutions/best-practices-guides/full-stack-observability/monitor-apps-hosts-health-maps": [
    {
      "sections": [
        "APM best practices guide",
        "Tip",
        "1. Standardize application names",
        "How to do it",
        "2. Add tags to your applications",
        "Caution",
        "3. Create and evaluate alert policies",
        "4. Identify and set up key transactions",
        "5. Track deployment history",
        "6. Review APM reports",
        "7. Review your environment with service maps",
        "8. Keep current",
        "9. Manage user access",
        "Important"
      ],
      "title": "APM best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "368a1a5688384d5bebf128604a9b8f190d335524",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/apm-best-practices-guide/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-03-30T13:08:49Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Application Monitoring Tips You Need To Know It's one thing to know how to use APM, but it's another thing to know how to use New Relic's application performance monitoring software well. Here are some best practices designed to help you become an APM master—and a key asset to your team! Tip To get a high-level overview of all your applications and services, use the New Relic Explorer in New Relic One. 1. Standardize application names Most New Relic agents provide a default application name, such as \"My Application\" or \"PHP Application,\" if you don't specify one in your New Relic configuration file. You don't want to end up with 20 identically named applications, be sure to select a descriptive identifier for your apps as soon you deploy them. To keep things consistent and easy to navigate, New Relic recommends standardizing your application naming (for example, all apps in Staging append [ Staging] or the like at the end of their names). Ideally, you want your new Java applications to be named automatically to reduce the chances of typographical errors and misnaming. How to do it For Java applications, automatic application naming can come from the following sources: Request attribute Servlet init parameter Filter init parameter Web app context parameter Web app context name (display name) Web app context path Choose the method that fits best your needs and follow these steps. For non-Java applications, there are no automatic naming methods, so refer to the documentation for your APM agent. 2. Add tags to your applications When several different applications use the same account, and each application spans multiple environments (for example, development, test, pre-production, production), it can be hard to find a specific application in your overview dashboard. That's why we recommend adding tags to your apps so that you can segment them into logical groups. The two most common tags that mature APM customers use are application name and environment. So, for example, if you wanted to view the billing application in Test, you could simply filter by \"billing app\" (name tag) and \"test\" (environment tag). Caution In the APM agent configuration settings files, use the labels field to add tags to your data. For example, see this description of the Python labels setting. APM is designed so that apps can roll up into an unlimited number of meaningful tag categories. How to do it Read the overview: Use tags to organize and group what you monitor. Follow these instructions for creating tags: NerdGraph tagging API tutorial. 3. Create and evaluate alert policies When key performance indicators spike or drop, individuals and teams in your organization need to be notified. Alerting in New Relic provides a set of tools including dynamic baselines that allow you to detect problems before they impact your end users. Alert policies can be set up in two primary ways: Static threshold alerts are great when you already know the nature of an application and its normal behaviors aren't likely to change anytime soon. Apdex score, response time, error rate, throughput are some of the static thresholds you can create alert policies on. Dynamic baseline alerts make it easy to determine and set dynamic alert thresholds for applications with varying seasonal patterns and growth trends (which make it difficult to set thresholds that define normal behavior). These alerts use baselines modeled from your application’s historical metric data. Each alert policy can contain as many conditions as you need, and each alert condition includes three components: Type of condition (metric, external service, and so on) Entities that the policy targets (for example, apps monitored by New Relic APM or New Relic Browser, hosts monitored by New Relic Infrastructure, and so on) Thresholds that escalate into alerting situations with increasing severity Once you have your alerting set up, you then want to make sure you're taking advantage of all viable notification channels. After all, what good are alerts if no one knows about them? You can manage alerts by creating specific user groups and by leveraging New Relic's integrated alert channels, including Slack, PagerDuty, webhooks, and email. Be sure to evaluate alert policies on a regular basis to ensure that they are always valid. How to do it See the detailed documentation: To set up dynamic baseline alerts and choose an application, follow standard procedures. You will see a preview of the metric with the predicted baseline You can select a metric for that application and see the corresponding baseline. Then, using the threshold sliders, you can set how closely you want your threshold to follow the baseline prediction. To set up static threshold alerts for your Apdex settings, follow standard procedures. To set up your alert notification channels, follow standard procedures. 4. Identify and set up key transactions Depending on the nature of your application, some transactions may be more important to you than others. New Relic's key transactions feature is designed to help you closely monitor what you consider to be your app's most business-critical transactions, whether that's end-user or app response time, call counts, error rates, or something else. You can also set alert threshold levels for notifications when your key transactions are performing poorly. How to do it In the menu bar, select More > Key transactions, and then select Add more. Then select the app and web transaction or, from the selected transaction, select Track as key transaction. Type a name for the key transaction, and select Track key transaction. Optional: If the agent for the selected app supports custom alerting, use the default values that New Relic automatically fills, or select Edit key alert transaction policy to set the Apdex and alert threshold values. To view the key transactions dashboard details, select View new key transaction. 5. Track deployment history When development teams are pushing new code out as frequently as possible, it can be hard to measure the impact that each deployment is having on performance. One way to stay in tune with how these changes are affecting your application is with deployment reports. These reports list recent deployments and their impact on end-users and app servers' Apdex scores, along with response times, throughput, and errors. You can also view and drill down into the details to catch errors related to recent deployments, or file a ticket and share details with your team. How to do it From the New Relic menu bar, select APM > (selected app) > Events > Deployments. To view performance after a deployment, go to the selected app's Overview dashboard in the Recent events section. A blue vertical bar on a chart indicates a deployment. To view summary information about the deployment, point to the blue bar. 6. Review APM reports From SLA, deployment, and capacity to scalability, host usage reports, and more, New Relic APM offers a variety of downloadable reporting tools surfacing historical trends—all great ways to report to senior executive teams or customers. Take a look at the full list of reports and use them to your advantage. How to do it From the New Relic APM menu bar, select Applications > (selected app) > Reports. Select the report you'd like to see. If you want to save or export a report to share, select Download this report as .csv, which will create a report with comma-separated values. 7. Review your environment with service maps Use New Relic service maps, a feature included in APM, to understand how apps and services in your architecture connect and talk to each other. Service maps are visual, customizable representations of your application architecture. Maps automatically show you your app's connections and dependencies, including databases and external services. Health indicators and performance metrics show you the current operational status for every part of your architecture. How to do it Go to one.newrelic.com > More > service maps. To get started, read the instructions in Introduction to service maps. 8. Keep current With New Relic’s SaaS platform, getting new features is as easy as updating your agent. Most likely your organization already has a set of scripts for deploying application upgrades into your environment. In a similar fashion, you can also automate your New Relic agent deployment to ensure that your systems are up to date. Both Puppet and Chef scripts are great examples of deployment frameworks that make life easier by allowing you to automate your entire deployment and management process. How to do it Regularly review which version of the agent you're using so that you know when an update is needed. If the latest agent release contains a needed fix or added functionality, download it. To deploy the agent automatically (preferred as a method to avoid errors): Use existing deployment scripts, provided they can be adapted to handle the deployment. OR Create and maintain a script that specifically deploys and configures the New Relic agent. Ideally, the script would pull the agent files from a repository where the files are versioned (for rollback purposes). Once the script has been created, shut down the application (unless script handles this). Run the deployment script. Start the application (unless script handles this). If problems arise, run the script to roll back to the previous version. To deploy the agent manually: Back up the current agent directory. Deploy the updated agent into the existing agent directory. Modify configuration files by comparing new files with existing files. In particular, make sure things like license key and custom extensions are copied over to the new configuration. Restart the application. If problems arise, restore the old agent using the backup and restart. 9. Manage user access Important This is available only for accounts on our original product-based pricing plan. Enable role-based access control (RBAC) and single sign-on (SSO) New Relic allows authorized individuals to access the broadest possible amount of data, regardless of their assigned role. As an Owner or Administrator of your New Relic account, you can control the permissions of individual users or entire roles with RBAC. To find out what is possible and how to make changes, see Users and roles. Security is no doubt of utmost concern to your organization. To simplify password management for your employees and strengthen security, you may already be using SSO with your other systems. You should do the same with New Relic. Using New Relic's SSO integration feature, account administrators will be able to enforce strong passwords and restrict login via a corporate authentication mechanism. This way, New Relic users who have already authenticated using a corporate SSO system will be able to bypass the New Relic login prompt. How to do it Log in to New Relic as an admin and go to the SSO configuration page. From the New Relic title bar, select (your account name) > Account Settings > Integrations > Single Sign On. From the SAML Single Sign On page, review your New Relic SAML Service Provider details. To upload your SAML Identity Provider certificate, select Choose File, and then follow standard procedures to select and save the file. Copy and paste in (or type) the Remove login URL that your users will use for Single Sign-On. If your organization’s SAML integration provides a redirect URL for logout, copy and paste in (or type) the Logout landing URL; otherwise leave blank. Save, test, and enable.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 240.15309,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Application Monitoring Tips You Need To Know It&#x27;s one thing to know how to use APM, but it&#x27;s another thing to know how to use <em>New</em> <em>Relic</em>&#x27;s application performance monitoring software well. Here are some <em>best</em> <em>practices</em> designed to help you become an APM master—and a key asset to your team! Tip To get"
      },
      "id": "6044186564441f1f94378ecc"
    },
    {
      "sections": [
        "Synthetic monitoring best practices guide",
        "Tip",
        "1. Match your monitor type to monitoring need",
        "How to do it",
        "2. View all monitors with the Monitors index page",
        "How to view your monitors in the New Relic One:",
        "New Relic Explorer",
        "Monitors index page",
        "3. View individual monitor results",
        "How to do it:",
        "4. Understand the load-time impact of each resource",
        "5. Configure and develop a scripted browser test"
      ],
      "title": "Synthetic monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e76eb0669a1433bb9d0de70d90413e19749adf61",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/synthetic-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:54:11Z",
      "updated_at": "2021-03-29T20:29:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "New Relic's synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its full power. Tip To use synthetic monitoring and the rest of our observability platform, join the New Relic family! Sign up to create your free account in only a few seconds. Then ingest up to 100GB of data for free each month. Forever. 1. Match your monitor type to monitoring need Synthetic monitors are virtual browsers that measure the performance of your website, recording each check in detail. They also capture aggregate numbers for load time, uptime, and average download size, as well as an overview, detailed statistics for each page resource, and downtime incidents. There are four types of synthetic monitors; the ones you deploy will depend on the things you want to monitor: Ping monitors—to ensure that your site is accessible. Simple browser monitors—to ensure end-user performance. Scripted browsers—to ensure that particular resources are present. API monitors—to ensure that your app server works as well as your website. How to do it To add a monitor, go to one.newrelic.com > Synthetics (or one.eu.newrelic.com if you have an EU-based account) and click Create monitor. Specify monitor type, name, and URL. Optional: Add a validation string (available for ping and simple browser) or advanced options, which enable substring monitoring for the following types of response validation: Verify SSL (for Ping and Simple Browser). This option verifies the validity of the SSL certificate chain. It can be duplicated by running the following syntax: openssl s_client -servername {YOUR_HOSTNAME} -connect {YOUR_HOSTNAME}:443 -CApath /etc/ssl/certs > /dev/null Copy Bypass HEAD request (for Ping). This option skips the default HEAD request and instead uses the GET verb with a ping check. Redirect is Failure (for Ping). If a redirect result occurs when Redirect is Failure is enabled, Synthetics categorizes it as a failure (rather than following the redirect and checking the resulting URL). Select the locations where you want your monitor to run. Choose a frequency to determine how often each location will run your monitor. Optional: Set up alert notifications. Select Create my monitor to confirm. Wait a few minutes; then from the Monitors index check your monitor. 2. View all monitors with the Monitors index page Continuous application performance monitoring is essential to ensure that web services are in place, working correctly, and error-free. Synthetic monitoring provides this type of assurance by performing automated tests on your web application for each selected location—noting downtime instances (“violations”) and collecting aggregate numbers, results, and detailed statistics for each page resource. Use the Monitors index page to get a high level view of this information, or select an individual monitor to view the Summary, for ping monitors, or Overview, for simple and scripted monitors, page and get a deeper insight into its performance over time. How to view your monitors in the New Relic One: New Relic Explorer To view a list of monitors using the New Relic One Monitors index page: Go to one.newrelic.com > Explorer > Synthetic monitors. For more information, see the documentation about navigating core UI components in New Relic One. Monitors index page To view a list of monitors using the Monitors index page: Go to one.newrelic.com > Synthetics. 3. View individual monitor results It’s not enough to understand how your web apps are performing for your West Coast customers; you need to be able to view how they’re performing across the country and around the globe. By taking advantage of synthetic monitors and visiting your Results page, you can see how everything from development to production affects user experience. You can locate interesting results by sorting the list to identify slow, fast, or other unusual results. Or filter by location to understand how monitor performance varies with geography. (The “Network timings” graph below provides a snapshot of webpage performance over a given period.) How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors tab, select your monitor. Select Monitor > Results. Gain an up-to-the-minute view of the slowest page loads for every monitored location. 4. Understand the load-time impact of each resource Visit the synthetics Resources page to see how each resource on your website—including CSS, JavaScript, images, HTML and more—is affecting your overall load. You can drill into detailed metrics collected at run time, locate performance information for time spent by third-party resources, and identify HTTP response codes for each resource. How to do it: Go to one.newrelic.com > Synthetics and, from the Monitors drop-down menu, select your monitor. Select Monitor > Resources. 5. Configure and develop a scripted browser test Using scripted browsers, you can build complex monitoring workflows using the Selenium JavaScript Webdriver bindings. For instance, you can log in to the application, navigate to a particular link, and wait for a page element to load and add an assertion. How to do it: Go to one.newrelic.com > Synthetics. Choose your monitor type (for example, Scripted Browser). Enter the name and details of your monitor (for example, Sitename.com Scripted Browser) Select the locations from which you want your monitor to run (for example, Mumbai, Seoul, Columbus, and Montreal). Choose a frequency to determine how often each location will run your monitor (for example, five minutes). Set a notification method to alert your team when performance violations occur. You are now ready to write your script. (Below is an example of a script used to test the performance of a main navigation page.) var assert = require('chai').assert; // script-wide timeout for all wait and waitandfind functions (in ms) var default_element_timeout = 190000; //3 mins var default_pageload_timeout = 240000; //4 mins var navlinks = [\"css-locator-1\",\"css-locator-2\"]; //sets element load timeout to 3 mins $browser.manage().timeouts().implicitlyWait(default_element_timeout); //sets page load timoeout to 4 mins $browser.manage().timeouts().pageloadTimeout(default_pageload_timeout); //test all the main nav page performances $browser.get(\"http://www.sitename.com\").then(function(){ return $browser.findelement($driver.by.classname(\"site-theme-example\")); }).then(function(){ //verifies the nav list has loaded return $browser.findelement($driver.by.classname(\"site-nav-list-example\")); }).then(function(){ //loops through the navlinks array navlinks.foreach(function(val, i, arr){ //finds and navigates to each navlink page return $browser.findelement($driver.by.classname(navlinks[i])).click().then(function(){ //verifies that the nav list loaded before moving on return $browser.findelement($driver.by.classname(\"site-nav-list-example\")).then(function(){ //verifies that the page logo footer at bottom of page has loaded return $browser.findelement($driver.by.classname(\"site-footer-logo\")); }) }) }) }); Copy",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 239.45792,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Synthetic monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "<em>New</em> <em>Relic</em>&#x27;s synthetic monitoring—powered by a Selenium-driven Chrome browser—allows you to monitor and test your apps and address issues before they affect your end users. Here are five tips to help you take immediate advantage of its <em>full</em> power. Tip To use synthetic monitoring and the rest of our"
      },
      "id": "603e84bb28ccbce555eba771"
    },
    {
      "sections": [
        "Infrastructure monitoring best practices guide",
        "1. Install the infrastructure agent across your entire environment",
        "How to do it",
        "Tip",
        "2. Configure the native EC2 integration",
        "3. Activate the integrations",
        "4. Create filter sets",
        "5. Create alert conditions",
        "6. View infrastructure data alongside APM data",
        "7. Access Infrastructure data using the Data explorer",
        "8. Update your agents regularly",
        "Want more user tips?"
      ],
      "title": "Infrastructure monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "931ea7767d73381ca0cb3502ec14f88d66ce5eaf",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/infrastructure-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:51:11Z",
      "updated_at": "2021-03-13T07:39:11Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Want even longer periods of uninterrupted sleep? Here are eight best practices to make dynamic infrastructure and server monitoring even easier with New Relic's infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution was designed to help enterprise customers monitor their large and dynamically changing environments at scale. In order to facilitate this, the UI is completely driven by tags that let you visualize aggregated metrics, events, and inventory for a large number of servers. To really get the most out of infrastructure monitoring, we recommend installing it across your entire environment, preferably even across multiple regions and clusters. This will provide a more accurate picture of the health of your host ecosystem and the impact your infrastructure has on your applications. Want to achieve faster Mean Time To Resolution (MTTR)? Install the infrastructure agent on database servers, web servers, and any other host that supports your applications. When deploying the agent, leverage custom attributes to tag your hosts so that you can use those for filtering the data presented in the UI and for setting alerts. This is in addition to any Amazon EC2 tags you may be using which will auto-import when you enable the EC2 integration. You may also prefer to keep the agent logs separate from the system logs, which you can do through the configuration. How to do it Leverage our install modules for config management tools such as Chef, Puppet and Ansible to easily deploy your agent across all your infrastructure. Read the instructions in the github repo for your config management tool referenced in the link above and define the custom_attributes you want to use to tag your hosts. Set the log_file attribute to your preferred location for the infrastructure agent logs. Tip If you are installing the agent on a single host, the process should only take a few minutes and you can find detailed instructions in our documentation. 2. Configure the native EC2 integration If you have an AWS environment, in addition to installing the infrastructure agent on your EC2 instances to monitor them, we also recommend configuring the EC2 integration so that New Relic can automatically import all the tags and metadata associated with your AWS instances. This allows you to filter down to a part of your infrastructure using the same AWS tags (example, ECTag_Role='Kafka'), and slice-and-dice your data in multiple ways. Additionally, our ‘Alerts’ and ‘Saved Filter Sets’ are completely tag-driven and dynamic, so they automatically add/remove instances matching these tags to give our users the most real-time views that scale with your cloud infrastructure. 3. Activate the integrations Monitoring your infrastructure extends beyond just CPU, memory, and storage utilization. That’s why New Relic has out-of-the-box integrations that allow you to monitor all the services that support your hosts as well. Activate any of our integrations, including AWS Billing, AWS ELB, Amazon S3, MySQL, NGINX, and more, to extend monitoring to your AWS or on-host applications, and access the pre-configured dashboards that appear for each of them. 4. Create filter sets With New Relic, users can create filter sets to organize hosts, cluster roles, and other resources based on criteria that matter the most to users. This allows you to optimize your resources by using a focused view to monitor, detect, and resolve any problems proactively. The attributes for filtering are populated from the auto-imported EC2 tags or custom tags that may be applied to hosts. You can combine as many filters as you want in a filter set, and save them to share with other people in your account. You’ll also be able to see the color-coded health status of each host inside the filter set, so you can quickly identify problematic areas of your infrastructure. Additionally, filter sets can be used in the health map to get an overview of your infrastructure performance at a glance based on the filters that matter to your teams. 5. Create alert conditions With New Relic, you can create alert conditions directly within the context of what you are currently monitoring with New Relic. For example, if you are viewing a filter set comprised of a large number of hosts and notice a problem, you don’t need to create an individual alert condition for every host within. Instead, we recommend initiating the alert condition directly from the chart of the metric you are viewing and creating it based on the filter tags. This will create an alert condition for any hosts that match those tags, allowing our infrastructure monitoring to automatically remove hosts that go offline and add new hosts to the alert condition if they match those tags. Alerts configured once for the appropriate tags will scale correctly across all future hosts. And know that you can also leverage existing alert policies for infrastructure alert conditions. 6. View infrastructure data alongside APM data The integration between New Relic APM and infrastructure monitoring lets you see your APM data and infrastructure data side by side, so you can find the root cause of problems more quickly, no matter where they originate. This allows users to view the performance relationship of your hosts and the applications running on them, allowing for quicker diagnosis of the issue and impact on the business’ health. Use health maps to quickly spot any issues or alerts related to the health of your applications and how that connects to the supporting infrastructure. The first boxes starting from the top left are those that require your attention. 7. Access Infrastructure data using the Data explorer Teams that use multiple New Relic capabilities find it useful to create a single dashboard to visually correlate the infrastructure’s health with application, browser and synthetics metrics. That’s where New Relic data exploration features comes in. All the granular metrics and events collected by infrastructure monitoring are stored in New Relic and are accessible to you immediately. Having access to the raw metrics means you can run more custom queries using NRQL, and also create dashboards to share infrastructure metrics with your team. 8. Update your agents regularly New Relic’s software engineering team is constantly pushing out improvements and new features to improve our customers’ overall monitoring experience. In order to take advantage of all the awesomeness they’re delivering, we recommend regularly updating to the latest version of the infrastructure agent. Want more user tips? View training videos at New Relic University. Read the documentation. Check out our Tutorials. Ask a question in the New Relic Explorers Hub.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 227.42703,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Want even longer periods of uninterrupted sleep? Here are eight <em>best</em> <em>practices</em> to make dynamic infrastructure and server monitoring even easier with <em>New</em> <em>Relic</em>&#x27;s infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution"
      },
      "id": "6044151c28ccbc4b4f2c60af"
    }
  ],
  "/docs/new-relic-solutions/best-practices-guides/full-stack-observability/synthetic-monitoring-best-practices-guide": [
    {
      "sections": [
        "APM best practices guide",
        "Tip",
        "1. Standardize application names",
        "How to do it",
        "2. Add tags to your applications",
        "Caution",
        "3. Create and evaluate alert policies",
        "4. Identify and set up key transactions",
        "5. Track deployment history",
        "6. Review APM reports",
        "7. Review your environment with service maps",
        "8. Keep current",
        "9. Manage user access",
        "Important"
      ],
      "title": "APM best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "368a1a5688384d5bebf128604a9b8f190d335524",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/apm-best-practices-guide/",
      "published_at": "2021-05-04T23:58:05Z",
      "updated_at": "2021-03-30T13:08:49Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Application Monitoring Tips You Need To Know It's one thing to know how to use APM, but it's another thing to know how to use New Relic's application performance monitoring software well. Here are some best practices designed to help you become an APM master—and a key asset to your team! Tip To get a high-level overview of all your applications and services, use the New Relic Explorer in New Relic One. 1. Standardize application names Most New Relic agents provide a default application name, such as \"My Application\" or \"PHP Application,\" if you don't specify one in your New Relic configuration file. You don't want to end up with 20 identically named applications, be sure to select a descriptive identifier for your apps as soon you deploy them. To keep things consistent and easy to navigate, New Relic recommends standardizing your application naming (for example, all apps in Staging append [ Staging] or the like at the end of their names). Ideally, you want your new Java applications to be named automatically to reduce the chances of typographical errors and misnaming. How to do it For Java applications, automatic application naming can come from the following sources: Request attribute Servlet init parameter Filter init parameter Web app context parameter Web app context name (display name) Web app context path Choose the method that fits best your needs and follow these steps. For non-Java applications, there are no automatic naming methods, so refer to the documentation for your APM agent. 2. Add tags to your applications When several different applications use the same account, and each application spans multiple environments (for example, development, test, pre-production, production), it can be hard to find a specific application in your overview dashboard. That's why we recommend adding tags to your apps so that you can segment them into logical groups. The two most common tags that mature APM customers use are application name and environment. So, for example, if you wanted to view the billing application in Test, you could simply filter by \"billing app\" (name tag) and \"test\" (environment tag). Caution In the APM agent configuration settings files, use the labels field to add tags to your data. For example, see this description of the Python labels setting. APM is designed so that apps can roll up into an unlimited number of meaningful tag categories. How to do it Read the overview: Use tags to organize and group what you monitor. Follow these instructions for creating tags: NerdGraph tagging API tutorial. 3. Create and evaluate alert policies When key performance indicators spike or drop, individuals and teams in your organization need to be notified. Alerting in New Relic provides a set of tools including dynamic baselines that allow you to detect problems before they impact your end users. Alert policies can be set up in two primary ways: Static threshold alerts are great when you already know the nature of an application and its normal behaviors aren't likely to change anytime soon. Apdex score, response time, error rate, throughput are some of the static thresholds you can create alert policies on. Dynamic baseline alerts make it easy to determine and set dynamic alert thresholds for applications with varying seasonal patterns and growth trends (which make it difficult to set thresholds that define normal behavior). These alerts use baselines modeled from your application’s historical metric data. Each alert policy can contain as many conditions as you need, and each alert condition includes three components: Type of condition (metric, external service, and so on) Entities that the policy targets (for example, apps monitored by New Relic APM or New Relic Browser, hosts monitored by New Relic Infrastructure, and so on) Thresholds that escalate into alerting situations with increasing severity Once you have your alerting set up, you then want to make sure you're taking advantage of all viable notification channels. After all, what good are alerts if no one knows about them? You can manage alerts by creating specific user groups and by leveraging New Relic's integrated alert channels, including Slack, PagerDuty, webhooks, and email. Be sure to evaluate alert policies on a regular basis to ensure that they are always valid. How to do it See the detailed documentation: To set up dynamic baseline alerts and choose an application, follow standard procedures. You will see a preview of the metric with the predicted baseline You can select a metric for that application and see the corresponding baseline. Then, using the threshold sliders, you can set how closely you want your threshold to follow the baseline prediction. To set up static threshold alerts for your Apdex settings, follow standard procedures. To set up your alert notification channels, follow standard procedures. 4. Identify and set up key transactions Depending on the nature of your application, some transactions may be more important to you than others. New Relic's key transactions feature is designed to help you closely monitor what you consider to be your app's most business-critical transactions, whether that's end-user or app response time, call counts, error rates, or something else. You can also set alert threshold levels for notifications when your key transactions are performing poorly. How to do it In the menu bar, select More > Key transactions, and then select Add more. Then select the app and web transaction or, from the selected transaction, select Track as key transaction. Type a name for the key transaction, and select Track key transaction. Optional: If the agent for the selected app supports custom alerting, use the default values that New Relic automatically fills, or select Edit key alert transaction policy to set the Apdex and alert threshold values. To view the key transactions dashboard details, select View new key transaction. 5. Track deployment history When development teams are pushing new code out as frequently as possible, it can be hard to measure the impact that each deployment is having on performance. One way to stay in tune with how these changes are affecting your application is with deployment reports. These reports list recent deployments and their impact on end-users and app servers' Apdex scores, along with response times, throughput, and errors. You can also view and drill down into the details to catch errors related to recent deployments, or file a ticket and share details with your team. How to do it From the New Relic menu bar, select APM > (selected app) > Events > Deployments. To view performance after a deployment, go to the selected app's Overview dashboard in the Recent events section. A blue vertical bar on a chart indicates a deployment. To view summary information about the deployment, point to the blue bar. 6. Review APM reports From SLA, deployment, and capacity to scalability, host usage reports, and more, New Relic APM offers a variety of downloadable reporting tools surfacing historical trends—all great ways to report to senior executive teams or customers. Take a look at the full list of reports and use them to your advantage. How to do it From the New Relic APM menu bar, select Applications > (selected app) > Reports. Select the report you'd like to see. If you want to save or export a report to share, select Download this report as .csv, which will create a report with comma-separated values. 7. Review your environment with service maps Use New Relic service maps, a feature included in APM, to understand how apps and services in your architecture connect and talk to each other. Service maps are visual, customizable representations of your application architecture. Maps automatically show you your app's connections and dependencies, including databases and external services. Health indicators and performance metrics show you the current operational status for every part of your architecture. How to do it Go to one.newrelic.com > More > service maps. To get started, read the instructions in Introduction to service maps. 8. Keep current With New Relic’s SaaS platform, getting new features is as easy as updating your agent. Most likely your organization already has a set of scripts for deploying application upgrades into your environment. In a similar fashion, you can also automate your New Relic agent deployment to ensure that your systems are up to date. Both Puppet and Chef scripts are great examples of deployment frameworks that make life easier by allowing you to automate your entire deployment and management process. How to do it Regularly review which version of the agent you're using so that you know when an update is needed. If the latest agent release contains a needed fix or added functionality, download it. To deploy the agent automatically (preferred as a method to avoid errors): Use existing deployment scripts, provided they can be adapted to handle the deployment. OR Create and maintain a script that specifically deploys and configures the New Relic agent. Ideally, the script would pull the agent files from a repository where the files are versioned (for rollback purposes). Once the script has been created, shut down the application (unless script handles this). Run the deployment script. Start the application (unless script handles this). If problems arise, run the script to roll back to the previous version. To deploy the agent manually: Back up the current agent directory. Deploy the updated agent into the existing agent directory. Modify configuration files by comparing new files with existing files. In particular, make sure things like license key and custom extensions are copied over to the new configuration. Restart the application. If problems arise, restore the old agent using the backup and restart. 9. Manage user access Important This is available only for accounts on our original product-based pricing plan. Enable role-based access control (RBAC) and single sign-on (SSO) New Relic allows authorized individuals to access the broadest possible amount of data, regardless of their assigned role. As an Owner or Administrator of your New Relic account, you can control the permissions of individual users or entire roles with RBAC. To find out what is possible and how to make changes, see Users and roles. Security is no doubt of utmost concern to your organization. To simplify password management for your employees and strengthen security, you may already be using SSO with your other systems. You should do the same with New Relic. Using New Relic's SSO integration feature, account administrators will be able to enforce strong passwords and restrict login via a corporate authentication mechanism. This way, New Relic users who have already authenticated using a corporate SSO system will be able to bypass the New Relic login prompt. How to do it Log in to New Relic as an admin and go to the SSO configuration page. From the New Relic title bar, select (your account name) > Account Settings > Integrations > Single Sign On. From the SAML Single Sign On page, review your New Relic SAML Service Provider details. To upload your SAML Identity Provider certificate, select Choose File, and then follow standard procedures to select and save the file. Copy and paste in (or type) the Remove login URL that your users will use for Single Sign-On. If your organization’s SAML integration provides a redirect URL for logout, copy and paste in (or type) the Logout landing URL; otherwise leave blank. Save, test, and enable.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 240.15308,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "APM <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Application Monitoring Tips You Need To Know It&#x27;s one thing to know how to use APM, but it&#x27;s another thing to know how to use <em>New</em> <em>Relic</em>&#x27;s application performance monitoring software well. Here are some <em>best</em> <em>practices</em> designed to help you become an APM master—and a key asset to your team! Tip To get"
      },
      "id": "6044186564441f1f94378ecc"
    },
    {
      "sections": [
        "Infrastructure monitoring best practices guide",
        "1. Install the infrastructure agent across your entire environment",
        "How to do it",
        "Tip",
        "2. Configure the native EC2 integration",
        "3. Activate the integrations",
        "4. Create filter sets",
        "5. Create alert conditions",
        "6. View infrastructure data alongside APM data",
        "7. Access Infrastructure data using the Data explorer",
        "8. Update your agents regularly",
        "Want more user tips?"
      ],
      "title": "Infrastructure monitoring best practices guide",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "931ea7767d73381ca0cb3502ec14f88d66ce5eaf",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/infrastructure-monitoring-best-practices-guide/",
      "published_at": "2021-05-05T19:51:11Z",
      "updated_at": "2021-03-13T07:39:11Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Want even longer periods of uninterrupted sleep? Here are eight best practices to make dynamic infrastructure and server monitoring even easier with New Relic's infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution was designed to help enterprise customers monitor their large and dynamically changing environments at scale. In order to facilitate this, the UI is completely driven by tags that let you visualize aggregated metrics, events, and inventory for a large number of servers. To really get the most out of infrastructure monitoring, we recommend installing it across your entire environment, preferably even across multiple regions and clusters. This will provide a more accurate picture of the health of your host ecosystem and the impact your infrastructure has on your applications. Want to achieve faster Mean Time To Resolution (MTTR)? Install the infrastructure agent on database servers, web servers, and any other host that supports your applications. When deploying the agent, leverage custom attributes to tag your hosts so that you can use those for filtering the data presented in the UI and for setting alerts. This is in addition to any Amazon EC2 tags you may be using which will auto-import when you enable the EC2 integration. You may also prefer to keep the agent logs separate from the system logs, which you can do through the configuration. How to do it Leverage our install modules for config management tools such as Chef, Puppet and Ansible to easily deploy your agent across all your infrastructure. Read the instructions in the github repo for your config management tool referenced in the link above and define the custom_attributes you want to use to tag your hosts. Set the log_file attribute to your preferred location for the infrastructure agent logs. Tip If you are installing the agent on a single host, the process should only take a few minutes and you can find detailed instructions in our documentation. 2. Configure the native EC2 integration If you have an AWS environment, in addition to installing the infrastructure agent on your EC2 instances to monitor them, we also recommend configuring the EC2 integration so that New Relic can automatically import all the tags and metadata associated with your AWS instances. This allows you to filter down to a part of your infrastructure using the same AWS tags (example, ECTag_Role='Kafka'), and slice-and-dice your data in multiple ways. Additionally, our ‘Alerts’ and ‘Saved Filter Sets’ are completely tag-driven and dynamic, so they automatically add/remove instances matching these tags to give our users the most real-time views that scale with your cloud infrastructure. 3. Activate the integrations Monitoring your infrastructure extends beyond just CPU, memory, and storage utilization. That’s why New Relic has out-of-the-box integrations that allow you to monitor all the services that support your hosts as well. Activate any of our integrations, including AWS Billing, AWS ELB, Amazon S3, MySQL, NGINX, and more, to extend monitoring to your AWS or on-host applications, and access the pre-configured dashboards that appear for each of them. 4. Create filter sets With New Relic, users can create filter sets to organize hosts, cluster roles, and other resources based on criteria that matter the most to users. This allows you to optimize your resources by using a focused view to monitor, detect, and resolve any problems proactively. The attributes for filtering are populated from the auto-imported EC2 tags or custom tags that may be applied to hosts. You can combine as many filters as you want in a filter set, and save them to share with other people in your account. You’ll also be able to see the color-coded health status of each host inside the filter set, so you can quickly identify problematic areas of your infrastructure. Additionally, filter sets can be used in the health map to get an overview of your infrastructure performance at a glance based on the filters that matter to your teams. 5. Create alert conditions With New Relic, you can create alert conditions directly within the context of what you are currently monitoring with New Relic. For example, if you are viewing a filter set comprised of a large number of hosts and notice a problem, you don’t need to create an individual alert condition for every host within. Instead, we recommend initiating the alert condition directly from the chart of the metric you are viewing and creating it based on the filter tags. This will create an alert condition for any hosts that match those tags, allowing our infrastructure monitoring to automatically remove hosts that go offline and add new hosts to the alert condition if they match those tags. Alerts configured once for the appropriate tags will scale correctly across all future hosts. And know that you can also leverage existing alert policies for infrastructure alert conditions. 6. View infrastructure data alongside APM data The integration between New Relic APM and infrastructure monitoring lets you see your APM data and infrastructure data side by side, so you can find the root cause of problems more quickly, no matter where they originate. This allows users to view the performance relationship of your hosts and the applications running on them, allowing for quicker diagnosis of the issue and impact on the business’ health. Use health maps to quickly spot any issues or alerts related to the health of your applications and how that connects to the supporting infrastructure. The first boxes starting from the top left are those that require your attention. 7. Access Infrastructure data using the Data explorer Teams that use multiple New Relic capabilities find it useful to create a single dashboard to visually correlate the infrastructure’s health with application, browser and synthetics metrics. That’s where New Relic data exploration features comes in. All the granular metrics and events collected by infrastructure monitoring are stored in New Relic and are accessible to you immediately. Having access to the raw metrics means you can run more custom queries using NRQL, and also create dashboards to share infrastructure metrics with your team. 8. Update your agents regularly New Relic’s software engineering team is constantly pushing out improvements and new features to improve our customers’ overall monitoring experience. In order to take advantage of all the awesomeness they’re delivering, we recommend regularly updating to the latest version of the infrastructure agent. Want more user tips? View training videos at New Relic University. Read the documentation. Check out our Tutorials. Ask a question in the New Relic Explorers Hub.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 227.42702,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "sections": "Infrastructure monitoring <em>best</em> <em>practices</em> <em>guide</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": "Want even longer periods of uninterrupted sleep? Here are eight <em>best</em> <em>practices</em> to make dynamic infrastructure and server monitoring even easier with <em>New</em> <em>Relic</em>&#x27;s infrastructure monitoring. 1. Install the infrastructure agent across your entire environment Our infrastructure monitoring solution"
      },
      "id": "6044151c28ccbc4b4f2c60af"
    },
    {
      "sections": [
        "Monitor apps and hosts with health maps",
        "Best practices",
        "Features",
        "Entities prioritized by health",
        "Tip",
        "Entity sort order criteria",
        "Views, filters, toggles",
        "View and use health maps",
        "Use cases",
        "The system's current health at a glance",
        "Scope of the problem: What else is broken?",
        "Scale of the problem: Use context to find a noisy neighbor",
        "Troubleshooting"
      ],
      "title": "Monitor apps and hosts with health maps",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "Best practices guides",
        "Full-stack observability"
      ],
      "external_id": "e7d1c9a1f713b33c4aa42c2cb5e1b7a6ac23c2e3",
      "image": "https://docs.newrelic.com/static/2a20f997d494faa0658b6d93c6ab1fd3/c1b63/health-map-demo-ss_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/best-practices-guides/full-stack-observability/monitor-apps-hosts-health-maps/",
      "published_at": "2021-05-05T19:51:59Z",
      "updated_at": "2021-03-13T07:37:28Z",
      "document_type": "page",
      "popularity": 1,
      "body": "The health map provides a single place to visually monitor the health of all your apps and their related hosts, prioritized by health status. You can customize the page by using different views, filters, and toggles to organize the map in a way most relevant to you or your team. Use your health map to monitor applications and hosts in real-time, and quickly track down problems as they occur. Best practices The health map pulls data together from several New Relic solutions. To get the most out of the health map, we recommend using the following features: Infrastructure monitoring: Create filter sets to meaningfully categorize hosts. APM: Create tags to meaningfully categorize your applications. Alerts: Create alert policies that cover all your alerting scenarios. The health map is also especially useful if you're using containerized apps on hosts, with many instances of apps per host. Features one.newrelic.com > More > Health maps: The health map combines data from APM, infrastructure monitoring, and alerts to display your applications and hosts prioritized by health status. Health map features include: Entities prioritized by health The health map organizes the page by primary entity boxes. Primary entity boxes contain current (refreshes every two minutes), at-a-glance health and performance data, secondary entities related to it, and links to relevant APM or Infrastructure UI pages for detailed performance data. Example of a health map primary entity box with secondary entities. The health map prioritizes entities based on the health status of primary then secondary entities. The health status is determined using data from Alerts. The health map prioritizes the entities by first sorting the primary entities by health status, then sorting those by the health status of their secondary entities (related apps or hosts). The health map supports red, yellow, green, light green (not targeted by any conditions), and gray (application stopped reporting data) statuses for applications. The health map supports red, yellow, and green statuses for hosts. Tip If you have a host not targeted by any conditions, it appears green on the health map. If a host is not reporting data, it does not display on the health map unless you create a host-not-reporting condition. Entities are prioritized to the top based on this order: Entity sort order criteria Primary entities that have critical (red) health status ordered by: Count of secondary entities with critical (red) health status Count of secondary entities with warning (yellow) health status Count of secondary entities with green health status Count of secondary entities with light green health status (host view only) Primary entities that have warning (yellow) health status ordered by: Count of secondary entities with critical (red) health status Count of secondary entities with warning (yellow) health status Count of secondary entities with green health status Count of secondary entities with light green health status (host view only) Primary entities that have green health status ordered by: Count of secondary entities with critical (red) health status Count of secondary entities with warning (yellow) health status Count of secondary entities with green health status Count of secondary entities with light green health status (host view only) Count of secondary entities Name of entity Views, filters, toggles Use the Views dropdown to see the health of your system organized by your applications or your hosts. You can then filter those views by tags (apps) or filter set (hosts) to only see data most relevant to you or your team. Use the Show metrics/hosts toggles to show more/less information in the entity boxes. View Description Applications and related hosts Organizes the map by application entities to display for each app: Health status color Condition violation information, if any Summary metrics Health of related hosts the application is running on as reported by New Relic Infrastructure Map includes an optional app tag filter. Hosts and related applications Organizes the map by host entities to display for each host: Health status color Condition violation information, if any Summary metrics Health of related applications running on the host reported by New Relic APM Map includes an optional host filter. Filter sets and related hosts Uses data reported by our infrastructure monitoring to display: Health of the hosts in each filter set in Infrastructure View and use health maps Tip To get the most out of your health map, see health maps best practices. The health map represents the current state of your system. The map refreshes every two minutes. To view the health map: From one.newrelic.com, select More, then select Health maps. Select a view from the View dropdown to organize the map by application, host, or infrastructure filter sets. If using the views Applications and related hosts or Hosts and related applications, use the Filter dropdown to only display entities most interesting to you or your team. Optional: Toggle Show metrics or Show hosts to display more or less entity data. Optional: Display the health map on a TV / wallboard in your operations center to see your system's current health at a glance. If entities start showing critical (red) or warning (yellow) health statuses, hover over the entity or the Related hosts/apps tiles for violation information to quickly ascertain the scope and scale of the problem. Click through to the relevant APM or Infrastructure UI pages to get detailed information to start troubleshooting. Use cases The health map is designed to help operations and DevOps professionals, who are responsible for the health of large, complex environments, understand: The system's current health at a glance You like to have a view up on the TV wallboard in your network operations center (NOC) that represents the health of all systems. You may be focused on a task and not notice when an alert comes in. With a wallboard you can feel assured that you can always glance up to see if anything is on fire. Conversely, even though something is alerting, you like to see the applications and hosts that are healthy to help keep things in perspective. Scope of the problem: What else is broken? You are responsible for many applications at your company. At any point in time, something is alerting and because there are many applications deployed across many hosts, it’s difficult for you to keep track of everything and know what is experiencing problems. The health map gives you a single place to see the health and relationship between all applications and hosts. You can easily correlate the alerting host with applications deployed to it and easily answer the question: What else is broken right now? Scale of the problem: Use context to find a noisy neighbor With container orchestration deploying containerized applications across many hosts, it’s difficult for you to understand the scale of the problem when you receive an alert for a host or groups of hosts. By using the application view of the health map, you can see the alerting host along with all the other hosts serving the application. If the issue is isolated to a single host, you can change to the host view of the health map to see what other applications are deployed on that host. In that view, you see that the host has four applications running and one of the applications is alerting on higher than normal throughput. Troubleshooting If health map host boxes do not display their installed apps, or if application boxes do not display the Infrastructure-monitored hosts where they are running, see APM data missing from infrastructure monitoring.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 227.42638,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "<em>Best</em> <em>practices</em>",
        "tags": "<em>Best</em> <em>practices</em> <em>guides</em>",
        "body": " to monitor applications and hosts in real-time, and quickly track down problems as they occur. <em>Best</em> <em>practices</em> The health map pulls data together from several <em>New</em> <em>Relic</em> <em>solutions</em>. To get the most out of the health map, we recommend using the following features: Infrastructure monitoring: Create"
      },
      "id": "6044155e28ccbc6f972ea01c"
    }
  ],
  "/docs/new-relic-solutions/index": [
    {
      "sections": [
        "Prioritize migration order",
        "1. Identify components",
        "2. Instrument applications",
        "3. Instrument hosts",
        "Tip",
        "4. Identify and track issues",
        "5. Create baselines",
        "6. Determine next steps",
        "Use service maps to find connections",
        "Use the New Relic Explorer to analyze health",
        "Use the Inventory page to identify components",
        "Expert tips for organizing your data"
      ],
      "title": "Prioritize migration order",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "f728804bace8dbe4a8176df74986fbf094e1ba62",
      "image": "https://docs.newrelic.com/static/9c3844bf72e803766bcb7b5146bf279b/c1b63/screen-service-maps_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/prioritize-migration-order/",
      "published_at": "2021-05-05T18:42:07Z",
      "updated_at": "2021-03-30T01:17:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Before you migrate any applications to the cloud, verify that the applications and their underlying server infrastructures are candidates for migration. When you instrument every layer of an application’s architecture, you get end-to-end visibility and are able to identify additional cloud migration risks or dependencies. Such analysis provides a more focused cloud migration priority list. 1. Identify components Create a list all of applications, services, and their underlying server infrastructures in your application portfolio that you want to migrate to the cloud. 2. Instrument applications Before you install any New Relic agents, review the compatibility and requirements for New Relic agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each tier of the application stack (database, application, web server, etc.), as you will install Infrastructure agents on each of those hosts in the next step. 3. Instrument hosts After reviewing the requirements for New Relic Infrastructure, follow the instructions for installing the Infrastructure agent on all hosts in your application stack: Install for Linux Install for Windows Server Install on AWS Elastic Beanstalk Install with a configuration management tool Also, in order to report data to New Relic, Infrastructure agents must have outbound access to certain domains and ports. If your system requires a proxy to connect to these domains, use the proxy setting. To gain extended visibility into applications that your code depends on, deploy on-host integrations. New Relic supports several commonly used application components, such as MySQL, Apache, and NGINX. Tip If you discover any applications, dependencies, or server infrastructure that you did not include in your list of components, instrument them with New Relic by installing the appropriate agents before moving forward. 4. Identify and track issues After installing, New Relic APM and Browser show you error events, error metrics, and detailed error traces for your applications. If an error or unhandled exception happens, the data appears on the Browser JavaScript errors page and the APM Error analytics page. From these pages, you can quickly troubleshoot runtime errors. Then, further analyze errors by grouping them according to attributes, by filtering them, or by searching for keywords in the event data. Each unhandled exception generates a transaction error event in Insights, and the dashboards are updated in real time. Event data is a record of a single event at a particular moment in time and consists of default attributes, like a timestamp, and an event type. You can also add custom attributes to provide more context. Tip Once you start capturing JavaScript errors as events in Insights, set up NRQL alerting so you can stay on top of your error data. 5. Create baselines One of the benefits of using APM while you are planning your cloud migration is that you get a deeper understanding of your application’s baseline. A baseline is a measurement of the current performance and availability of your application, which you then use as a comparison after your migration to validate your business case. 6. Determine next steps Use the following New Relic features to determine the next steps for your application: Use service maps to find connections After you install the APM agent, use service maps to get a full view into your application’s architecture. service maps allow you to identify any external services, web services, databases, or APIs that the application might be connecting to. Once you have an application node on the map, you can add its connections to the map, including New Relic Browser apps, databases, or external services (for example, third-party APIs). Every node you add is automatically connected to the map, so you see the shape of your application’s architecture emerge. one.newrelic.com > APM > (select an application) > Service map: Use service maps to understand the connections between different parts of your architecture. Use the New Relic Explorer to analyze health Use the explorer to see a high level overview of your services, which includes applications. Select the service to view a summary of your instrumented applications. You can then select dependencies to view the underlying infrastructure. To view this information at a glance, use the New Relic Explorer by going to one.newrelic.com > Explorer. From the explorer, you can: Sort applications by labels: Name Response Time Throughput Error Rate Identify owners Identify which users will be affected by a migration Discover application architecture details, such as the number of tiers and data sources Discover any dependencies Extract operational costs of each application or group one.newrelic.com > Explorer: The explorer allows you to see an overview of your services. Use the Inventory page to identify components Infrastructure's inventory page gives you visibility into the software packages installed on your servers. New Relic Infrastructure reports detailed information about a system’s per-host configuration, including system modules, configuration files, metadata, packages, services, user sessions, and more. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. Use this data to identify various components of the applications you want to migrate. one.newrelic.com > Infrastructure > Inventory: Use the filter and search functions to find information for specific items across all your hosts. Analyze these criteria for each of your apps to determine the next steps for your migration: Should you move your app to a new host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the cloud? By using the information that New Relic provides, you are better equipped to create a prioritized list of applications ready for cloud migration. Expert tips for organizing your data In APM, use labels to group the instrumented applications into meaningful categories like environments, functional areas, technologies, business units. Or, you can separate them for development or operational teams. In Infrastructure, use filter sets to organize hosts into cluster, environment, role, or any Infrastructure attribute based on criteria that you define.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 715.52014,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use the <em>New</em> <em>Relic</em> Explorer to analyze health",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " applications Before you install any <em>New</em> <em>Relic</em> agents, review the compatibility and requirements for <em>New</em> <em>Relic</em> agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each"
      },
      "id": "604458bd64441f87e0378ebf"
    },
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 684.29724,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 684.2941,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " status, and performance metrics. Determine which stats you want to report to <em>New</em> <em>Relic</em>. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline&#x2F;CI&#x2F;CD system indicating when a given stage started; and whether it succeeded or failed. This step"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/cloud-adoption/modern-cloud-services": [
    {
      "sections": [
        "Prioritize migration order",
        "1. Identify components",
        "2. Instrument applications",
        "3. Instrument hosts",
        "Tip",
        "4. Identify and track issues",
        "5. Create baselines",
        "6. Determine next steps",
        "Use service maps to find connections",
        "Use the New Relic Explorer to analyze health",
        "Use the Inventory page to identify components",
        "Expert tips for organizing your data"
      ],
      "title": "Prioritize migration order",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "f728804bace8dbe4a8176df74986fbf094e1ba62",
      "image": "https://docs.newrelic.com/static/9c3844bf72e803766bcb7b5146bf279b/c1b63/screen-service-maps_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/prioritize-migration-order/",
      "published_at": "2021-05-05T18:42:07Z",
      "updated_at": "2021-03-30T01:17:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Before you migrate any applications to the cloud, verify that the applications and their underlying server infrastructures are candidates for migration. When you instrument every layer of an application’s architecture, you get end-to-end visibility and are able to identify additional cloud migration risks or dependencies. Such analysis provides a more focused cloud migration priority list. 1. Identify components Create a list all of applications, services, and their underlying server infrastructures in your application portfolio that you want to migrate to the cloud. 2. Instrument applications Before you install any New Relic agents, review the compatibility and requirements for New Relic agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each tier of the application stack (database, application, web server, etc.), as you will install Infrastructure agents on each of those hosts in the next step. 3. Instrument hosts After reviewing the requirements for New Relic Infrastructure, follow the instructions for installing the Infrastructure agent on all hosts in your application stack: Install for Linux Install for Windows Server Install on AWS Elastic Beanstalk Install with a configuration management tool Also, in order to report data to New Relic, Infrastructure agents must have outbound access to certain domains and ports. If your system requires a proxy to connect to these domains, use the proxy setting. To gain extended visibility into applications that your code depends on, deploy on-host integrations. New Relic supports several commonly used application components, such as MySQL, Apache, and NGINX. Tip If you discover any applications, dependencies, or server infrastructure that you did not include in your list of components, instrument them with New Relic by installing the appropriate agents before moving forward. 4. Identify and track issues After installing, New Relic APM and Browser show you error events, error metrics, and detailed error traces for your applications. If an error or unhandled exception happens, the data appears on the Browser JavaScript errors page and the APM Error analytics page. From these pages, you can quickly troubleshoot runtime errors. Then, further analyze errors by grouping them according to attributes, by filtering them, or by searching for keywords in the event data. Each unhandled exception generates a transaction error event in Insights, and the dashboards are updated in real time. Event data is a record of a single event at a particular moment in time and consists of default attributes, like a timestamp, and an event type. You can also add custom attributes to provide more context. Tip Once you start capturing JavaScript errors as events in Insights, set up NRQL alerting so you can stay on top of your error data. 5. Create baselines One of the benefits of using APM while you are planning your cloud migration is that you get a deeper understanding of your application’s baseline. A baseline is a measurement of the current performance and availability of your application, which you then use as a comparison after your migration to validate your business case. 6. Determine next steps Use the following New Relic features to determine the next steps for your application: Use service maps to find connections After you install the APM agent, use service maps to get a full view into your application’s architecture. service maps allow you to identify any external services, web services, databases, or APIs that the application might be connecting to. Once you have an application node on the map, you can add its connections to the map, including New Relic Browser apps, databases, or external services (for example, third-party APIs). Every node you add is automatically connected to the map, so you see the shape of your application’s architecture emerge. one.newrelic.com > APM > (select an application) > Service map: Use service maps to understand the connections between different parts of your architecture. Use the New Relic Explorer to analyze health Use the explorer to see a high level overview of your services, which includes applications. Select the service to view a summary of your instrumented applications. You can then select dependencies to view the underlying infrastructure. To view this information at a glance, use the New Relic Explorer by going to one.newrelic.com > Explorer. From the explorer, you can: Sort applications by labels: Name Response Time Throughput Error Rate Identify owners Identify which users will be affected by a migration Discover application architecture details, such as the number of tiers and data sources Discover any dependencies Extract operational costs of each application or group one.newrelic.com > Explorer: The explorer allows you to see an overview of your services. Use the Inventory page to identify components Infrastructure's inventory page gives you visibility into the software packages installed on your servers. New Relic Infrastructure reports detailed information about a system’s per-host configuration, including system modules, configuration files, metadata, packages, services, user sessions, and more. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. Use this data to identify various components of the applications you want to migrate. one.newrelic.com > Infrastructure > Inventory: Use the filter and search functions to find information for specific items across all your hosts. Analyze these criteria for each of your apps to determine the next steps for your migration: Should you move your app to a new host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the cloud? By using the information that New Relic provides, you are better equipped to create a prioritized list of applications ready for cloud migration. Expert tips for organizing your data In APM, use labels to group the instrumented applications into meaningful categories like environments, functional areas, technologies, business units. Or, you can separate them for development or operational teams. In Infrastructure, use filter sets to organize hosts into cluster, environment, role, or any Infrastructure attribute based on criteria that you define.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 206.52837,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use the <em>New</em> <em>Relic</em> Explorer to analyze health",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " to determine the next steps for your migration: Should you move your app to a <em>new</em> host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the <em>cloud</em>? By using the information that <em>New</em> <em>Relic</em> provides, you are better equipped to create a prioritized list"
      },
      "id": "604458bd64441f87e0378ebf"
    },
    {
      "sections": [
        "Optimize your cloud spend",
        "1. Deploy the New Relic Infrastructure agent",
        "2. Create dashboard charts for cloud performance",
        "Break out data by cloud performance and application metrics",
        "3. Configure the Amazon AWS integration",
        "4. Set up billing budgets in AWS",
        "5. Add cloud spend and budget widgets to Insights dashboard",
        "Break out data by application and by AWS budget",
        "6. Create dashboards for every level of your organization",
        "Dashboards for developers",
        "Dashboards for DevOps",
        "Dashboards for executives",
        "7. Set up alerts",
        "Configure a baseline query using the forecasted amount"
      ],
      "title": "Optimize your cloud spend",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "7a0ac1127aee1ef0668e8aad47af8813f0ed7259",
      "image": "https://docs.newrelic.com/static/2f167e48441b82a62aae1463592e0aed/8c557/CloudPerformanceForAppX.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/optimize-your-cloud-spend/",
      "published_at": "2021-05-05T18:44:57Z",
      "updated_at": "2021-03-13T07:30:46Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Now that you are using cloud-hosted infrastructure and services, it is important to start looking very early and very closely at your cloud spend: Make sure that your assumptions about your cloud spend are playing out as expected. Quickly catch and correct any unexpected spikes in spending. Start fine-tuning the usage of your cloud-based resources. For example, if you have a set of 20 instances all running at 10% CPU, you can think about using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud spend helps you optimize and save money quickly. New Relic can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your cloud spend data, just like you can with any data New Relic can help you collect. Using the New Relic applied intelligence platform is a great way to help you learn about your cloud spending or about any of your performance data. 1. Deploy the New Relic Infrastructure agent Review the requirements for the New Relic Infrastructure agent and follow the documentation for instructions on installing the agent. After you install the Infrastructure agent on your hosts, you immediately have access to the broad spectrum of metrics that the agent receives automatically. Then, you can set up the cloud integration to start collecting billing information. 2. Create dashboard charts for cloud performance New Relic Dashboards is the product that you use to write powerful custom queries about your data, and then visualize the results in charts that you collect on a dashboard. You can also feed the results of your dashboard queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Include charts for various Infrastructure metrics related to performance and usage; for example: CPU Memory Disk Database You may also want to include charts that represent the application using this cloud infrastructure. In this way you can correlate the cloud infrastructure performance with that of the application. As you right-size your cloud infrastructure, you will want to monitor application performance to make sure you are achieving any targets. Here is an example of an Insights dashboard for cloud performance. Break out data by cloud performance and application metrics The following dashboard shows several charts that present key cloud infrastructure metrics and an associated application metric. Every one of these charts represents the result of a query. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/rjq7tqrswxwtte9/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Create dashboards that include both cloud infrastructure and application metrics.] insights.newrelic.com: Create dashboards that include both cloud infrastructure and application metrics. 3. Configure the Amazon AWS integration New Relic Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. This tutorial focuses on the AWS Billing integration. First, configure the integration with your AWS account, and then you can set up the AWS Billing integration. 4. Set up billing budgets in AWS The Amazon AWS Billing integration requires some additional configuration on the AWS side. Specifically, you need to go into your AWS Billing dashboard and set up Budgets. Our documentation and the blog post Show Me (Where I’m Spending) the Money! AWS Billing Comes to New Relic Insights provide walk-throughs of this process. When creating Budgets, be sure to: Fill in an application name. Decide whether you are doing cost or service-based budgeting. Decide if your budget is open-ended or has a definite ending date. 5. Add cloud spend and budget widgets to Insights dashboard New Relic Insights is the product that you use to write powerful custom queries about your data, and then visualize the results in widgets that you collect on a dashboard. You can also feed the results of your Insights queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Here are some examples of ways to use Insights dashboards to visualize your AWS cloud spend data. Break out data by application and by AWS budget The following dashboard shows several widgets that present key information about an AWS budget vs. actual spending, with data broken out by an application AWS budget. Every one of these widgets represents the result of an Insights query, and the data in the supporting Insights tables is the data that our integration automatically receives from AWS. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/ecp5mrnkezh6hjh/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Add charts that include AWS cloud and budgets data.] [ Downs: put this 'code' section below the image please. Here is the query to create the Application X Cloud Cost budget chart in this dashboard example: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy ] insights.newrelic.com: Create dashboards that include AWS cloud and budgets. 6. Create dashboards for every level of your organization Whether you are a developer, in DevOps, or an executive, having information about your cloud spend can help you optimize your cloud environment. Here are a few ways dashboards can help at each level of your organization: Dashboards for developers Understanding how much applications cost to run helps developers properly configure applications to use more efficient services. For example, could developers save cloud costs using Amazon AWS Lambda or properly sized instances instead of randomly selecting an instance? Dashboards for DevOps Monitoring application costs allows operators to catch possible overruns due to misconfigured services. For example, is the DevOps team’s auto-scaling configuration not scaling down properly? Are they spending money on instances that are not being used? Dashboards for executives An overall view of both forecasted and actual cloud spends for individual applications on a per region basis, as well as total costs, helps executives make better business decisions. Use New Relic to keep control of your cloud spending costs, and get your teams alerted when you go over your budgets. 7. Set up alerts After you write queries on your data in Insights, you can easily use them to create alert conditions. New Relic gives you the ability to write baseline queries against your data. A baseline query is a query that you write without setting hard limits on the results and instead let New Relic Applied Intelligence “machine-learn” your performance data. New Relic alerts you when you go too far outside of your baseline numbers. Configure a baseline query using the forecasted amount Configuring a baseline query using a forecasted amount is a great starting point for monitoring any cloud budget, as you grow to understand what your cloud spend will be over time. New Relic notifies you if something spikes beyond your forecasted trend. That query looks like this: SELECT latest(`provider.forecastedAmount`) FROM FinanceSample WHERE provider = 'BillingBudget' and `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy When you create a baseline query and alert on it, you decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider either increases or decreases the gray band around your budget threshold (the blue line): alerts.newrelic.com > Alert policies > (select a policy) > Alert conditions: Create alert conditions based on your NRQL queries and Insights data. This example would have resulted in zero violations based on recent data, and that is exactly what you are looking for. However, if that blue line spikes up out of the gray band, New Relic notifies you. For more detailed information about creating, managing, and using alerts, view these New Relic University tutorials: Intro to alerting Alert policies Alerting incident lifecycle Notification channels",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.98701,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Optimize your <em>cloud</em> spend",
        "sections": "1. Deploy the <em>New</em> <em>Relic</em> Infrastructure agent",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " quickly. <em>New</em> <em>Relic</em> can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your <em>cloud</em> spend data, just like you can with any data <em>New</em> <em>Relic</em> can help you collect. Using"
      },
      "id": "60445c4928ccbcd0132c6094"
    },
    {
      "sections": [
        "Identify application dependencies and inventory",
        "1. Identify applications and components",
        "2. Install New Relic agents",
        "New Relic APM",
        "New Relic Infrastructure",
        "Infrastructure on-host integrations",
        "3. Visualize application dependencies with APM",
        "4. Inventory underlining instances with Infrastructure",
        "5. Uncover unknown applications and components",
        "6. Resolve errors or other issues",
        "7. Create Dashboards",
        "Expert tip for reporting custom data",
        "For more help"
      ],
      "title": "Identify application dependencies and inventory",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "b1159866272377cc25c356317d171a3325ebe9f3",
      "image": "https://docs.newrelic.com/static/4e6e64bb47951c91d6f027331b05fb5f/c1b63/new-relic-one-application-issues.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/identify-application-dependencies-inventory/",
      "published_at": "2021-05-05T18:41:17Z",
      "updated_at": "2021-03-13T04:22:57Z",
      "document_type": "page",
      "popularity": 1,
      "body": "When you are planning a migration to the cloud, it is important to analyze your current on-premise architecture and identify the scope of your migration. When you have a full understanding of your applications, your hosts, and their architecture, you reduce the possibility of missing dependencies during your migration. 1. Identify applications and components First, you need to determine the level of instrumentation that is possible or allowed within your organization. The deeper you instrument, the more visibility you gain into your applications. Then, address the scope of your cloud migration by answering the following questions and keeping track of your answers: What applications do I need to include in the migration? What are the dependencies of each application? What are the underlying services/inventory supporting these applications? 2. Install New Relic agents Based on your answers when you determined the scope of your cloud migration, verify that the applications that you want to migrate are compatible with New Relic products and install the agents: New Relic APM New Relic APM delivers data about your application's performance, providing information about app availability and external services so you can visualize your application dependencies. Confirm that your system meets the requirements for the APM agents that you want to install, and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. New Relic Infrastructure New Relic Infrastructure provides flexible, dynamic server monitoring so you can inventory your hosts and their configuration settings. Confirm that your underlying infrastructure meets the requirements for New Relic Infrastructure. Install the Infrastructure agent on instances that host your applications. Infrastructure on-host integrations Infrastructure on-host integrations monitor the services that your code depends on. Install the on-host integrations for the services that you are using. 3. Visualize application dependencies with APM After you install the APM agent, use service maps to get a full view of your application’s architecture. Service maps allow you to identify any connections from applications to external services, web services, databases, or APIs. After creating a service map for the application that has dependencies that you want to explore, add an application node on the map. Then, begin to add connections to the map including databases, external services, third-party APIs, and even New Relic Browser-monitored applications. New Relic pulls every node you add into the map, and you can watch the shape of your architecture emerge. one.newrelic.com > APM > (select an application) > Service map: View a service map to see a visual overview of your system architecture and the health of entities. Based on the visibility into internal and external dependencies that the service map provides, you can create a migration plan that includes all aspects of an application’s ecosystem. 4. Inventory underlining instances with Infrastructure New Relic Infrastructure's inventory page gives you visibility into the software packages installed on your servers. Essentially, the inventory page displays detailed information about a system’s per-host configuration, including details about system modules, configuration files, metadata, packages, services, and user sessions. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. The inventory page not only provides you with the list of packages installed but also provides version information as well. Use this version information to know which packages to upgrade and which packages to replicate for your cloud migration. It also helps you track the dependencies between the software packages and configuration files. one.newrelic.com > Infrastructure > Inventory: View the inventory page for details about your hosts and their configurations. You can also use the Inventory page to get a sense of what software or packages you no longer need, which is a great way to “clean up” your servers before you migrate to the cloud. 5. Uncover unknown applications and components Since anything can happen during an application’s lifecycle, like an application changing ownership, you may come across applications or component dependencies that you did not know about. If you discover any unknown dependencies, assess their relationship to other applications and components in your infrastructure to determine if they should be pulled into your migration plan. If you discover any applications or components while viewing service maps or while reviewing the inventory page, remember to instrument them before you migrate them. 6. Resolve errors or other issues After you instrument your applications, APM may uncover errors or issues with your current on-prem applications. Use APM error analytics to determine the root cause of any errors or issues in your applications. one.newrelic.com > APM > (select an app) > Events > Errors: Use error analytics to determine the root cause of errors in your applications. Start with the Error rate chart to see if there are any unexpected spikes, dips, or error patterns. Correlate any patterns on the Top 5 errors chart to alerts occurring during the same time period. The Error traces table includes specific stack trace details, such as associated host, user, framework code, and custom attributes to help you identify the root cause of an error. 7. Create Dashboards In addition to the application baselines you built, create dashboards to assess your on-premises applications in preparation for migrating them to the cloud. Use Dashboards to gain visibility into the average response times, the top transactions, the associated average duration, and the overall CPU usage for your instrumented application. Drill down into individual applications to see your top processes and the CPU percent for each process. You can also view an error analysis for a set of instrumented applications: one.newrelic.com > Dashboards > (select a dashboard): View errors visualize issues with your applications. Check out the best practices guide for tips on creating and utilizing dashboards. Sharing New Relic Dashboards with your teams and stakeholders is a powerful way to communicate the impact of your migration during your cloud adoption process. Expert tip for reporting custom data Utilizing service maps, errors, and inventory management gives you a critical look at the architecture of your applications and their dependencies. If you find that you need data that is not available by default, New Relic products allow you to capture custom data: APM Browser Infrastructure Dashboards Mobile Synthetics For more help Explore the New Relic Platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.92685,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "2. Install <em>New</em> <em>Relic</em> agents",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " answers when you determined the scope of your <em>cloud</em> migration, verify that the applications that you want to migrate are compatible with <em>New</em> <em>Relic</em> products and install the agents: <em>New</em> <em>Relic</em> APM <em>New</em> <em>Relic</em> APM delivers data about your application&#x27;s performance, providing information about app availability"
      },
      "id": "60445fcc64441f498e378efb"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/app-remediation-gather-performance-statistics": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.4515,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45045,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43387,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.4515,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45044,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Resolve dependency risk: identify and analyze potential issues",
        "Prerequisites",
        "1. Analyze dependencies with service maps",
        "2. Identify back-end application dependency risks",
        "Tip",
        "3. Identify front-end dependency risk",
        "4. Identify Microservice Dependencies",
        "5. Create an action plan for risk mitigation"
      ],
      "title": "Resolve dependency risk: identify and analyze potential issues",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "4911ddf0c6fca572b52e22fbe464f21f0c6f338f",
      "image": "https://docs.newrelic.com/static/d1d4cf78d193ae770219cfdb9f6f792f/c1b63/distributed-trace_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/resolve-dependency-risk-identify-analyze-potential-issues/",
      "published_at": "2021-05-05T17:40:36Z",
      "updated_at": "2021-03-13T07:26:50Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Successfully scaling DevOps requires a robust understanding of dependencies across application teams and related services. Use New Relics service maps to discover and mitigate risky dependencies from upstream and downstream services. Prerequisites This tutorial assumes you’ve completed the previous DevOps procedures. 1. Analyze dependencies with service maps Use service maps for each application and note any dependent systems and transactions. New Relic recommends that you start by viewing the entire architecture using the Discover your environment option. rpm.newrelic.com/apm > Service Maps > App/Service list This initial view shows all applications that are configured in your account. Applications that have violated a warning threshold are shown in yellow, and those with an active alert are shown in red. Healthy applications appear in green. New Relic uses a bold line to map applications to the services (such as databases) they connect to. Familiarize yourself with these maps to see how applications and their services fit together. Take note of which applications have the most dependencies and which rely on the same dependency, such as an API. Click an application to see high level metrics about that app, including throughput, response time, Apdex score, and error rate for the last 30 minutes. Tracking throughput is a good way to determine which of your applications are serving the most traffic. After looking at the architecture as a whole, review the applications that have the most dependencies. Select the App/Services list to see a full list of your applications. rpm.newrelic.com/apm > Service Maps > App/Service list In this example, we’ve chosen Tower-Chicago from the App/Services list. All of the traffic being sent to Tower-Chicago is coming from Proxy-East. In this case, Tower-Chicago is showing 48.3 requests per minute, or 11.3% of the 426 requests per minute flowing through Proxy-East. rpm.newrelic.com/apm > Service Maps > App/Service list In most cases, the separate applications and services represented in service maps are created and maintained by separate teams. This exercise of walking through the dependencies of your architecture should involve representatives from each of those teams. Teams should work together to ask questions such as: How critical is this particular dependency? What would happen if it were to go down? What happened last time it went down? Was there a revenue loss? 2. Identify back-end application dependency risks Once you’ve analyzed your applications’ dependencies, you’ll want to examine the quality of dependency execution. For example, is the dependency stable and predictable for each application or transaction you’ve identified? To do this, you’ll first need to gather as much information as you can about the applications from New Relic Insights, which helps you analyze data that is collected about the applications in more detail. Here is an example NRQL query to further analyze back-end service performance: SELECT count(appName)/30 as 'Throughput', apdex(duration), average(duration), stddev(duration), max(duration), count(error_type), uniquecount(host) FROM Transaction FACET appName SINCE 30 MINUTES AGO Copy This query shows you each application’s request per minute (throughput), Apdex score, and an overview of how the application is performing overall (through the standard deviation calculation, in which lower numbers are generally better). It also shows errors for the time period and the number of hosts on which the application is running. insights.newrelic.com > query results Next, gather information on incidents and events related to the services from New Relic Alerts: Click Alerts > Incidents > All Incidents. alerts.newrelic.com > Incidents > All Incidents Click Alerts > Events > All Events. alerts.newrelic.com > Incidents > All Events Tip Using webhooks to send alert events to New Relic Insights, allows you to supplement your dashboards with Alerts data. The process is outlined in this community discussion post. Here is a simplified example of the results of this exercise: Application Number of dependencies RPM Hosts APDEX (avg) Last outage TTR (hrs) Routing Service 10 983 4 .93 2/19/18 .75 Tower Austin 1 58 1 .95 10/11/17 1.5 Proxy-East 11 498 4 .92 1/4/18 .25 Proxy-West 11 495 4 .97 12/3/17 .25 WebPortal 7 396 8 .98 4/1/18 2.5 Supplement this data with the data that your teams know about your service and that you gathered from the dependency exercise in step 1, and use that data to develop hypotheses about the highest risk areas in your services that should be mitigated. 3. Identify front-end dependency risk Once you’ve analyzed back-end dependencies, explore front-end dependencies. This is a critical step because as you walk higher up the stack and closer to the user, you will likely have more dependencies and abstractions. Service maps seamlessly integrate data from New Relic Browser and New Relic Mobile to help you understand the dependencies from front-end user interfaces to back-end services. rpm.newrelic.com/apm > Service Maps Use the service map view to drill into front-end dependencies, and execute a similar exercise to the one you executed for back-end dependencies. This exercise will again expose data to help you identify risk areas you should address and optimize. We recommend that you conduct the analysis with user interface (UI) teams so that you can also gather a complementary qualitative understanding of what the UI teams consider critical based on their experience. A ranking from the UI teams of the most critical dependency is a useful output of this work. 4. Identify Microservice Dependencies If you are using microservices, you can have dozens, if not hundreds, of services that are calling each other. Use Distributed Tracing to see how all those services connect together and how your requests flow through those different services. Distributed tracing lets you see the path that a request takes as it travels through a distributed system. A distributed trace is composed of multiple \"spans,\" which represent time spent in services or resources of those services. Click on the Distributed tracing menu in New Relic APM left nav. You can see “trace listing” view where you’ll be able to quickly identify slow traces and traces with errors. The scatter plot lets you easily see outliers. Below that are the trace summaries, click on a trace to see details. Dive into distributed traces to see how long each span takes. Click into each span to see historical performance charts and associated attributes that layer in the context you need to understand and troubleshoot issues. one.newrelic.com > APM > (select an app) > Distributed tracing This rounds out your list of dependencies. 5. Create an action plan for risk mitigation Once you’ve analyzed the dependencies across your application from both front-end and back-end services, create an action plan to reduce dependency risks and achieve your service level objectives (SLO). As you prioritize these next steps, we recommend you keep these four principles in mind: Understand your risk tolerance. It’s helpful to have a clear picture of your tolerance for risk, which ideally should be informed by your service level objectives (refer to the Establish Objectives and Baselines tutorial for more information). Set an alert policy to monitor dependencies that you’ve determined have a high relationship to SLO achievement. Minimize dependencies. The simpler you keep your code, the less functions you'll have referring to other modules. Removing unnecessary complexity is an important way to ensure you have a maintainable system that meets your customers’ expectations. Localize dependencies. For the code you write, package together functions that depend on each other whenever possible. Stabilize dependencies. When dependencies are unavoidable, mitigate risks by ensuring these dependencies point to modules that are the least likely to change or are easier to substitute. When your action plan is complete, monitor the results of the efforts. The efficacy of your actions to resolve dependency risks should ultimately be measured by your SLOs",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 232.6349,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>DevOps</em> procedures. 1. Analyze dependencies with service maps Use service maps for each application and note any dependent systems and transactions. <em>New</em> <em>Relic</em> recommends that you start by viewing the entire architecture using the Discover your environment option. rpm.newrelic.com&#x2F;apm &gt; Service Maps"
      },
      "id": "60440f13e7b9d2ec025799f0"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/customer-experience-improvement-track-experience-indicators": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45149,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45044,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43385,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/establish-objectives-baselines-define-team-slos": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45149,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45044,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43385,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/establish-team-dashboards-gather-visualize-key-metrics": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45148,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45044,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43384,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/guide-measuring-devops-success": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45148,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45044,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43384,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives": [
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45042,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43384,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    },
    {
      "sections": [
        "Resolve dependency risk: identify and analyze potential issues",
        "Prerequisites",
        "1. Analyze dependencies with service maps",
        "2. Identify back-end application dependency risks",
        "Tip",
        "3. Identify front-end dependency risk",
        "4. Identify Microservice Dependencies",
        "5. Create an action plan for risk mitigation"
      ],
      "title": "Resolve dependency risk: identify and analyze potential issues",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "4911ddf0c6fca572b52e22fbe464f21f0c6f338f",
      "image": "https://docs.newrelic.com/static/d1d4cf78d193ae770219cfdb9f6f792f/c1b63/distributed-trace_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/resolve-dependency-risk-identify-analyze-potential-issues/",
      "published_at": "2021-05-05T17:40:36Z",
      "updated_at": "2021-03-13T07:26:50Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Successfully scaling DevOps requires a robust understanding of dependencies across application teams and related services. Use New Relics service maps to discover and mitigate risky dependencies from upstream and downstream services. Prerequisites This tutorial assumes you’ve completed the previous DevOps procedures. 1. Analyze dependencies with service maps Use service maps for each application and note any dependent systems and transactions. New Relic recommends that you start by viewing the entire architecture using the Discover your environment option. rpm.newrelic.com/apm > Service Maps > App/Service list This initial view shows all applications that are configured in your account. Applications that have violated a warning threshold are shown in yellow, and those with an active alert are shown in red. Healthy applications appear in green. New Relic uses a bold line to map applications to the services (such as databases) they connect to. Familiarize yourself with these maps to see how applications and their services fit together. Take note of which applications have the most dependencies and which rely on the same dependency, such as an API. Click an application to see high level metrics about that app, including throughput, response time, Apdex score, and error rate for the last 30 minutes. Tracking throughput is a good way to determine which of your applications are serving the most traffic. After looking at the architecture as a whole, review the applications that have the most dependencies. Select the App/Services list to see a full list of your applications. rpm.newrelic.com/apm > Service Maps > App/Service list In this example, we’ve chosen Tower-Chicago from the App/Services list. All of the traffic being sent to Tower-Chicago is coming from Proxy-East. In this case, Tower-Chicago is showing 48.3 requests per minute, or 11.3% of the 426 requests per minute flowing through Proxy-East. rpm.newrelic.com/apm > Service Maps > App/Service list In most cases, the separate applications and services represented in service maps are created and maintained by separate teams. This exercise of walking through the dependencies of your architecture should involve representatives from each of those teams. Teams should work together to ask questions such as: How critical is this particular dependency? What would happen if it were to go down? What happened last time it went down? Was there a revenue loss? 2. Identify back-end application dependency risks Once you’ve analyzed your applications’ dependencies, you’ll want to examine the quality of dependency execution. For example, is the dependency stable and predictable for each application or transaction you’ve identified? To do this, you’ll first need to gather as much information as you can about the applications from New Relic Insights, which helps you analyze data that is collected about the applications in more detail. Here is an example NRQL query to further analyze back-end service performance: SELECT count(appName)/30 as 'Throughput', apdex(duration), average(duration), stddev(duration), max(duration), count(error_type), uniquecount(host) FROM Transaction FACET appName SINCE 30 MINUTES AGO Copy This query shows you each application’s request per minute (throughput), Apdex score, and an overview of how the application is performing overall (through the standard deviation calculation, in which lower numbers are generally better). It also shows errors for the time period and the number of hosts on which the application is running. insights.newrelic.com > query results Next, gather information on incidents and events related to the services from New Relic Alerts: Click Alerts > Incidents > All Incidents. alerts.newrelic.com > Incidents > All Incidents Click Alerts > Events > All Events. alerts.newrelic.com > Incidents > All Events Tip Using webhooks to send alert events to New Relic Insights, allows you to supplement your dashboards with Alerts data. The process is outlined in this community discussion post. Here is a simplified example of the results of this exercise: Application Number of dependencies RPM Hosts APDEX (avg) Last outage TTR (hrs) Routing Service 10 983 4 .93 2/19/18 .75 Tower Austin 1 58 1 .95 10/11/17 1.5 Proxy-East 11 498 4 .92 1/4/18 .25 Proxy-West 11 495 4 .97 12/3/17 .25 WebPortal 7 396 8 .98 4/1/18 2.5 Supplement this data with the data that your teams know about your service and that you gathered from the dependency exercise in step 1, and use that data to develop hypotheses about the highest risk areas in your services that should be mitigated. 3. Identify front-end dependency risk Once you’ve analyzed back-end dependencies, explore front-end dependencies. This is a critical step because as you walk higher up the stack and closer to the user, you will likely have more dependencies and abstractions. Service maps seamlessly integrate data from New Relic Browser and New Relic Mobile to help you understand the dependencies from front-end user interfaces to back-end services. rpm.newrelic.com/apm > Service Maps Use the service map view to drill into front-end dependencies, and execute a similar exercise to the one you executed for back-end dependencies. This exercise will again expose data to help you identify risk areas you should address and optimize. We recommend that you conduct the analysis with user interface (UI) teams so that you can also gather a complementary qualitative understanding of what the UI teams consider critical based on their experience. A ranking from the UI teams of the most critical dependency is a useful output of this work. 4. Identify Microservice Dependencies If you are using microservices, you can have dozens, if not hundreds, of services that are calling each other. Use Distributed Tracing to see how all those services connect together and how your requests flow through those different services. Distributed tracing lets you see the path that a request takes as it travels through a distributed system. A distributed trace is composed of multiple \"spans,\" which represent time spent in services or resources of those services. Click on the Distributed tracing menu in New Relic APM left nav. You can see “trace listing” view where you’ll be able to quickly identify slow traces and traces with errors. The scatter plot lets you easily see outliers. Below that are the trace summaries, click on a trace to see details. Dive into distributed traces to see how long each span takes. Click into each span to see historical performance charts and associated attributes that layer in the context you need to understand and troubleshoot issues. one.newrelic.com > APM > (select an app) > Distributed tracing This rounds out your list of dependencies. 5. Create an action plan for risk mitigation Once you’ve analyzed the dependencies across your application from both front-end and back-end services, create an action plan to reduce dependency risks and achieve your service level objectives (SLO). As you prioritize these next steps, we recommend you keep these four principles in mind: Understand your risk tolerance. It’s helpful to have a clear picture of your tolerance for risk, which ideally should be informed by your service level objectives (refer to the Establish Objectives and Baselines tutorial for more information). Set an alert policy to monitor dependencies that you’ve determined have a high relationship to SLO achievement. Minimize dependencies. The simpler you keep your code, the less functions you'll have referring to other modules. Removing unnecessary complexity is an important way to ensure you have a maintainable system that meets your customers’ expectations. Localize dependencies. For the code you write, package together functions that depend on each other whenever possible. Stabilize dependencies. When dependencies are unavoidable, mitigate risks by ensuring these dependencies point to modules that are the least likely to change or are easier to substitute. When your action plan is complete, monitor the results of the efforts. The efficacy of your actions to resolve dependency risks should ultimately be measured by your SLOs",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 232.63489,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>DevOps</em> procedures. 1. Analyze dependencies with service maps Use service maps for each application and note any dependent systems and transactions. <em>New</em> <em>Relic</em> recommends that you start by viewing the entire architecture using the Discover your environment option. rpm.newrelic.com&#x2F;apm &gt; Service Maps"
      },
      "id": "60440f13e7b9d2ec025799f0"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-orchestration-align-teams-tools-processes": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45148,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45042,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43384,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/infrastructure-resource-sizing-analyze-operation-metrics": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45148,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45041,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43382,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/iterate-measure-impact-track-metrics-after-deployments": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45148,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45041,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43382,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45146,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43382,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    },
    {
      "sections": [
        "Resolve dependency risk: identify and analyze potential issues",
        "Prerequisites",
        "1. Analyze dependencies with service maps",
        "2. Identify back-end application dependency risks",
        "Tip",
        "3. Identify front-end dependency risk",
        "4. Identify Microservice Dependencies",
        "5. Create an action plan for risk mitigation"
      ],
      "title": "Resolve dependency risk: identify and analyze potential issues",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "4911ddf0c6fca572b52e22fbe464f21f0c6f338f",
      "image": "https://docs.newrelic.com/static/d1d4cf78d193ae770219cfdb9f6f792f/c1b63/distributed-trace_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/resolve-dependency-risk-identify-analyze-potential-issues/",
      "published_at": "2021-05-05T17:40:36Z",
      "updated_at": "2021-03-13T07:26:50Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Successfully scaling DevOps requires a robust understanding of dependencies across application teams and related services. Use New Relics service maps to discover and mitigate risky dependencies from upstream and downstream services. Prerequisites This tutorial assumes you’ve completed the previous DevOps procedures. 1. Analyze dependencies with service maps Use service maps for each application and note any dependent systems and transactions. New Relic recommends that you start by viewing the entire architecture using the Discover your environment option. rpm.newrelic.com/apm > Service Maps > App/Service list This initial view shows all applications that are configured in your account. Applications that have violated a warning threshold are shown in yellow, and those with an active alert are shown in red. Healthy applications appear in green. New Relic uses a bold line to map applications to the services (such as databases) they connect to. Familiarize yourself with these maps to see how applications and their services fit together. Take note of which applications have the most dependencies and which rely on the same dependency, such as an API. Click an application to see high level metrics about that app, including throughput, response time, Apdex score, and error rate for the last 30 minutes. Tracking throughput is a good way to determine which of your applications are serving the most traffic. After looking at the architecture as a whole, review the applications that have the most dependencies. Select the App/Services list to see a full list of your applications. rpm.newrelic.com/apm > Service Maps > App/Service list In this example, we’ve chosen Tower-Chicago from the App/Services list. All of the traffic being sent to Tower-Chicago is coming from Proxy-East. In this case, Tower-Chicago is showing 48.3 requests per minute, or 11.3% of the 426 requests per minute flowing through Proxy-East. rpm.newrelic.com/apm > Service Maps > App/Service list In most cases, the separate applications and services represented in service maps are created and maintained by separate teams. This exercise of walking through the dependencies of your architecture should involve representatives from each of those teams. Teams should work together to ask questions such as: How critical is this particular dependency? What would happen if it were to go down? What happened last time it went down? Was there a revenue loss? 2. Identify back-end application dependency risks Once you’ve analyzed your applications’ dependencies, you’ll want to examine the quality of dependency execution. For example, is the dependency stable and predictable for each application or transaction you’ve identified? To do this, you’ll first need to gather as much information as you can about the applications from New Relic Insights, which helps you analyze data that is collected about the applications in more detail. Here is an example NRQL query to further analyze back-end service performance: SELECT count(appName)/30 as 'Throughput', apdex(duration), average(duration), stddev(duration), max(duration), count(error_type), uniquecount(host) FROM Transaction FACET appName SINCE 30 MINUTES AGO Copy This query shows you each application’s request per minute (throughput), Apdex score, and an overview of how the application is performing overall (through the standard deviation calculation, in which lower numbers are generally better). It also shows errors for the time period and the number of hosts on which the application is running. insights.newrelic.com > query results Next, gather information on incidents and events related to the services from New Relic Alerts: Click Alerts > Incidents > All Incidents. alerts.newrelic.com > Incidents > All Incidents Click Alerts > Events > All Events. alerts.newrelic.com > Incidents > All Events Tip Using webhooks to send alert events to New Relic Insights, allows you to supplement your dashboards with Alerts data. The process is outlined in this community discussion post. Here is a simplified example of the results of this exercise: Application Number of dependencies RPM Hosts APDEX (avg) Last outage TTR (hrs) Routing Service 10 983 4 .93 2/19/18 .75 Tower Austin 1 58 1 .95 10/11/17 1.5 Proxy-East 11 498 4 .92 1/4/18 .25 Proxy-West 11 495 4 .97 12/3/17 .25 WebPortal 7 396 8 .98 4/1/18 2.5 Supplement this data with the data that your teams know about your service and that you gathered from the dependency exercise in step 1, and use that data to develop hypotheses about the highest risk areas in your services that should be mitigated. 3. Identify front-end dependency risk Once you’ve analyzed back-end dependencies, explore front-end dependencies. This is a critical step because as you walk higher up the stack and closer to the user, you will likely have more dependencies and abstractions. Service maps seamlessly integrate data from New Relic Browser and New Relic Mobile to help you understand the dependencies from front-end user interfaces to back-end services. rpm.newrelic.com/apm > Service Maps Use the service map view to drill into front-end dependencies, and execute a similar exercise to the one you executed for back-end dependencies. This exercise will again expose data to help you identify risk areas you should address and optimize. We recommend that you conduct the analysis with user interface (UI) teams so that you can also gather a complementary qualitative understanding of what the UI teams consider critical based on their experience. A ranking from the UI teams of the most critical dependency is a useful output of this work. 4. Identify Microservice Dependencies If you are using microservices, you can have dozens, if not hundreds, of services that are calling each other. Use Distributed Tracing to see how all those services connect together and how your requests flow through those different services. Distributed tracing lets you see the path that a request takes as it travels through a distributed system. A distributed trace is composed of multiple \"spans,\" which represent time spent in services or resources of those services. Click on the Distributed tracing menu in New Relic APM left nav. You can see “trace listing” view where you’ll be able to quickly identify slow traces and traces with errors. The scatter plot lets you easily see outliers. Below that are the trace summaries, click on a trace to see details. Dive into distributed traces to see how long each span takes. Click into each span to see historical performance charts and associated attributes that layer in the context you need to understand and troubleshoot issues. one.newrelic.com > APM > (select an app) > Distributed tracing This rounds out your list of dependencies. 5. Create an action plan for risk mitigation Once you’ve analyzed the dependencies across your application from both front-end and back-end services, create an action plan to reduce dependency risks and achieve your service level objectives (SLO). As you prioritize these next steps, we recommend you keep these four principles in mind: Understand your risk tolerance. It’s helpful to have a clear picture of your tolerance for risk, which ideally should be informed by your service level objectives (refer to the Establish Objectives and Baselines tutorial for more information). Set an alert policy to monitor dependencies that you’ve determined have a high relationship to SLO achievement. Minimize dependencies. The simpler you keep your code, the less functions you'll have referring to other modules. Removing unnecessary complexity is an important way to ensure you have a maintainable system that meets your customers’ expectations. Localize dependencies. For the code you write, package together functions that depend on each other whenever possible. Stabilize dependencies. When dependencies are unavoidable, mitigate risks by ensuring these dependencies point to modules that are the least likely to change or are easier to substitute. When your action plan is complete, monitor the results of the efforts. The efficacy of your actions to resolve dependency risks should ultimately be measured by your SLOs",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 232.63487,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>DevOps</em> procedures. 1. Analyze dependencies with service maps Use service maps for each application and note any dependent systems and transactions. <em>New</em> <em>Relic</em> recommends that you start by viewing the entire architecture using the Discover your environment option. rpm.newrelic.com&#x2F;apm &gt; Service Maps"
      },
      "id": "60440f13e7b9d2ec025799f0"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/operations-review-assess-optimize-team-progress": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45146,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45041,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.43382,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/resolve-dependency-risk-identify-analyze-potential-issues": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45146,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45041,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.4338,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/set-proactive-alerting-understand-respond-performance-issues": [
    {
      "sections": [
        "Incident learning: Retrospectives",
        "Prerequisites",
        "1. Establish a post-mortem process",
        "2. Don't over-research",
        "3. Tune your monitoring",
        "4. Create an incident repository",
        "Outcomes",
        "For more help"
      ],
      "title": "Incident learning: Retrospectives",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "683e9d7afbd81c80d511401e194bb0ecc2ef68ed",
      "image": "",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/incident-learning-retrospectives/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:56:09Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Equip teams to learn from incidents and stop recycling problems. You may have heard the term blameless post-mortems; here’s how and why to get there. Create a process for learning from problems that enables the organization to improve existing KPIs and incident response patterns and to adapt when new challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone's attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these New Relic tutorials: Establish objectives and baselines Incident orchestration 1. Establish a post-mortem process The goal is to identify technical, organizational, and process follow-up actions after each notable incident. We've found more success by focusing on what happened, rather than who did what. Ask questions like: How were we notified about the problem? Could we have discovered the problem sooner? Was the information we needed to resolve the incident easily accessible? Where did we have humans doing work where computers should have done it? Read more at How and why to hold blameless retrospectives. Ideally, this process should be the same across teams. Create a document that includes: The triggering event. Contributing factors that lead to the incident. A chronology and summary of remediation steps and their result (be sure to include what went right; these are actions/processes you don't want to lose in the future). A measure of the impact to the business in terms of user experience and financial losses, if possible. Recommendations for system or feature improvements to prevent a recurrence. Recommendations for process and communication improvements. Owners of post-retro actions. No root cause? Why is root cause not included in this postmortem report? Root cause implies that it's both possible and useful to find a single cause for an outcome in a complex system. The notion is seductive because we want simple, actionable explanations, but current systems are too complex for simple answers. It is harmful because it tricks us into going down one narrow path of options instead of exploring the different paths available, some of which might be much more important and impactful if we broadened our thinking. Example postmortem report Comments Date March 1, 2018 Executive summary From approximately 1:45PM until 2:30PM, users could not add items to their carts, which prevented any checkouts from occurring during the incident period. Triggering event We determined that a change was made to the CSS rules on the product detail page that effectively disabled the Add to cart button. Timeline 1:50PM: Successful checkouts < 10 for 5 minutes alert triggered; assigned to Alice. 1:55PM: After reviewing the e-commerce team dashboard, Alice determined that the threshold was breached immediately following a deploy by Bob. She notified him of the incident. 2:00PM: Alice and Bob began troubleshooting. Attempts at recreating the issue in production were successful. 2:20PM: Bob determined that his change to the CSS on the product detail page disabled the Add to cart button. He deployed a hotfix. 2:30PM: Functionality was restored and the incident was resolved. Impact No checkouts were completed during the duration of the incident. Our typical revenue for a Thursday during this timeframe is $30,000. Recommendations We have been discussing implementing New Relic Synthetics for a while now. If we had a synthetic check on the checkout process, this issue would have been detected immediately. We should also implement more thorough unit tests in the front-end web app. Next Steps Alice will implement synthetic checks next sprint. Ravi's team will investigate creating more unit tests. At first, your retros will generate obvious follow-ups, like fixing permissions and access, missing instrumentation, or a need to tune certain alerts. Over time, your retros will reveal larger followups—we call them interventions. Before you rush to implement interventions (such as switching from using GUIDs to integers), take time to map out the impact of these changes. By making a major change, you may ensure the previous incident does not occur, but what other problems are you introducing or risking? Not every incident requires preventative action. It is reasonable to accept a certain level of risk and mitigate the impact. 2. Don't over-research Establish guidelines for which incidents require in-depth analysis to prevent diminishing returns from too much overhead. If you had a hardware failure and replace the hardware, you are probably done. If an incident has so much complexity (or emotional heat) that you may never get to clear follow-up actions, you can choose to not do a formal review. Rather, have a meeting and an open discussion of events. Take notes, but you don't need to create a retro report. 3. Tune your monitoring Audit monitoring and alerting after major incidents to tune KPIs and thresholds, improve time to detection, and reduce alert noise. Review the set proactive alerts pattern. Groom your alerts by: Measuring the frequency of pages on your teams. Maintaining policy hygiene. Little things, like using a consistent naming structure, make a big difference. Tune alerts as performance improves Leverage AI to fine tune alerts: Train your system to obtain the most accurate incident correlation. Use muting rules to silence alerts you don't need. Set alerts on system-detected anomalies. Creating runbooks for your conditions. Runbooks for alerts should include: A description of why the alert was created. What the alert is monitoring. What that alert indicates about the state of your system. Initial steps for an on-call engineer to begin triage. Learn more about grooming and tuning your alerts. 4. Create an incident repository Create a centralized, searchable repository of incident post-mortem documents and other incident artifacts, providing the organization with access to lessons learned. A small number of people in your org will probably access these. But get good enough at creating these reports and you can begin to automate the use of this information. Outcomes As you continue to harvest information from your incidents, you should begin to get better SLO compliance, fewer high-severity incidents, improved developer satisfaction, and lower employee turnover rate. For more help Explore the New Relic platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45146,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " <em>new</em> challenges surface. The goal is to learn first, then fix. Yes, you have had an outage, but you now have everyone&#x27;s attention. Take advantage of it. Prerequisites Before starting this tutorial, be sure to complete these <em>New</em> <em>Relic</em> tutorials: Establish objectives and baselines Incident orchestration"
      },
      "id": "603ea329196a678c53a83da9"
    },
    {
      "sections": [
        "Measure code pipelines",
        "Prerequisite",
        "1. Identify what to track",
        "2. Capture the events required to instrument your pipeline",
        "Outcomes"
      ],
      "title": "Measure code pipelines",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "b8a12f9d2f0ba161219ba58cb0816033c382c552",
      "image": "https://docs.newrelic.com/static/6cfae62440efb84aa5c9126e6a33cc8f/508ef/codepipeline2NR.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/measure-code-pipelines/",
      "published_at": "2021-05-05T17:41:27Z",
      "updated_at": "2021-03-16T10:53:39Z",
      "document_type": "page",
      "popularity": 1,
      "body": "High functioning DevOps teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make improvements. Prerequisite Before starting this tutorial, be sure to complete the Establish team dashboards tutorial. 1. Identify what to track Look at your CI/CD system and determine the stats you'd like to gather. We recommend, at a minimum, starting with commit metadata, build status, test results, deploy status, and performance metrics. Determine which stats you want to report to New Relic. 2. Capture the events required to instrument your pipeline Capture timestamped state changes to your pipeline/CI/CD system indicating when a given stage started; and whether it succeeded or failed. This step, in turn, makes it easy to track your deployment process over time—looking for trends in the frequency of deployments, build quality, and other performance indicators. For easiest tracking, capture timestamped changes to your source code management system (SCM) with at least the author and a hash or unique change ID. Propagate this information wherever possible. If you have your own build system, add code to emit custom events at each stage. For hosted services, create a lightweight intermediary service/function-as-a-service (FaaS) to format and forward these custom events. The example below uses AWS CodePipeline to manage the flow of an application that is sourced in GitHub, built and tested with AWS CodeBuild, and deployed with Elastic Beanstalk. It utilizes a simple service written in Node.js, plus some \"glue code\" and event handlers needed to push data from GitHub and AWS to New Relic. Code for this example is available at github.com/newrelic/webinar. Use AWS CodePipeline to understand different parts of your flow. We chose the tools and products used here as examples—with the goal of illustrating the concepts around the types of data and events you should be thinking about when instrumenting your own code pipeline. The sample code, however, should be generic enough to adapt readily to almost any toolset. Outcomes Here is a sample dashboard you could create to track your code pipeline. Track your code pipeline by creating dashboards in New Relic Insights. A dashboard like this yields a number of benefits, including: Faster deploy cycles. The ability to prioritize reliability work by identifying services with frequent deploy failures or gaps in test coverage. Ensuring teams don’t achieve speed at the expense of quality. Responding more effectively to change-related failures.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.45041,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Measure</em> code pipelines",
        "sections": "<em>Measure</em> code pipelines",
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": "High functioning <em>DevOps</em> teams use instrumentation to push changes to production more frequently and with less risk. This process yields important insights: How is your build pipeline performing? Where are the issues? They key is to instrument your pipeline in order to track it and to make"
      },
      "id": "603ea2f7e7b9d26d4c2a080a"
    },
    {
      "sections": [
        "Automate instrumentation",
        "Prerequisite",
        "1. Make instrumentation part of every build",
        "Tip",
        "2. Take advantage of CLI tools",
        "3. Leverage the power of APIs"
      ],
      "title": "Automate instrumentation",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Measure DevOps success"
      ],
      "external_id": "65d82617672b47497b59dcf7c55eaba535714676",
      "image": "https://docs.newrelic.com/static/82b9b43751f8e8c8dbf4be1242cc6cb3/c1b63/new-relic-terraform-snippet.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/measure-devops-success/automate-instrumentation/",
      "published_at": "2021-05-04T17:58:40Z",
      "updated_at": "2021-03-16T10:14:20Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Replacing manual instrumentation with automated setup benefits you in many ways. Automation can make you faster, and it helps to eliminate fat-finger errors—and more importantly, it improves observability. You'll spend less time instrumenting systems, and reduce toil as your development ecosystem grows. Prerequisite Before starting this tutorial, be sure to complete the Measure code pipeline tutorial. 1. Make instrumentation part of every build Rolling instrumentation into your standard build process makes visibility the default, instead of being viewed as yet another burden on your developers. Modern build tools like Gradle can do almost anything; you can take advantage of that power to instrument your code quickly and efficiently. Tip Read this Best Practices post for more information about automating instrumentation in your pipeline Configuration management tools such as Terraform enable automation as well. Using the New Relic Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a new service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done. For example, the New Relic CLI lets you search and tag entities across accounts. The New Relic Lambda CLI installs and configures a New Relic AWS Lambda layer onto your AWS Lambda functions. You can also use the NR-1 CLI to build and share your own New Relic applications. 3. Leverage the power of APIs Now that you've instrumented your services, you can take advantage of New Relic's REST API to harvest information from your instrumentation and to manage your monitoring process. The New Relic API Explorer can help you to determine the cURL request format, available parameters, potential response status codes, and JSON response structure for each of the available API calls. The New Relic documentation includes a wealth of additional information on APIs that you can use to automate a number of important tasks, including: APIs to set up alert conditions APIs to define synthetic monitors APIs to create dashboards",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.4338,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Measure</em> <em>DevOps</em> <em>success</em>",
        "body": " enable automation as well. Using the <em>New</em> <em>Relic</em> Terraform Provider, you can automatically add agents and alerts, or create a dashboard when you start up a <em>new</em> service. 2. Take advantage of CLI tools Most tools provide a command line interface that allows a back-door to quickly get work done"
      },
      "id": "603ea2f7196a672323a83def"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/adopt-cloud-services": [
    {
      "sections": [
        "Manage your containerized environment",
        "1. Update to latest Infrastructure agent and enable Kubernetes integration",
        "2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health",
        "3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment",
        "4. Monitor applications running in Kubernetes with APM",
        "Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics",
        "6. Bring teams together with dashboards tailored to specific business use cases and KPIs",
        "Learn more"
      ],
      "title": "Manage your containerized environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "71ba4468ed7d078021ccd705c78e72cfb5e92b5f",
      "image": "https://docs.newrelic.com/static/f744b0e1c8aac86e63f46a5798df58ae/c1b63/cont_environment01.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/manage-your-containerized-environment/",
      "published_at": "2021-05-05T19:53:07Z",
      "updated_at": "2021-03-16T11:20:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Widespread adoption of containers has changed the way applications are written and deployed. Container orchestration technologies such as Kubernetes are making it easier for teams to schedule, deploy, and manage their containerized applications. But challenges still exist that require teams to rethink their environment and application monitoring strategies: Challenge 1: Containers are ephemeral by nature. Knowing the containers or pod or node (host) where the application is currently running is not necessarily an indication of where it was running 5, 15, or 30 minutes ago when the issue occurred. Containers are deployed in dynamic, constantly evolving environments that require a modern monitoring approach. Challenge 2: Often, organizations are adopting containers as they break down monolithic applications into multiple microservices. This new approach introduces new complexity to the system and the sheer scale and dimensionality of containers is hard to conceptualize in an easy-to-understand format. Challenge 3: Delivering a differentiated end-user experience is a key initiative for all organizations, and containers are being adopted to help organizations release better software, faster. But with this tremendous opportunity also comes risk, because every time a new container is deployed, the cluster is impacted. Organizations need context into how infrastructure changes impact the application stack, and how changes to both the infrastructure and application stack affect the end-user experience. Getting all of this data in real-time in a digestible format is a significant challenge in distributed, containerized environments. The New Relic platform offers customers both ease of use and ease of deployment for containerized Kubernetes environments. With a few clicks you have the data and confidence to move forward intelligently. These six steps illustrate how to use the New Relic platform to manage your containers and how they are scheduled: 1. Update to latest Infrastructure agent and enable Kubernetes integration To get started, you'll need to deploy the latest Infrastructure agent onto a Kubernetes cluster with a DaemonSet. Leveraging DaemonSets is vital in dynamic, containerized environments, because when a new node is deployed or the cluster scales up or down, the DaemonSet ensures the New Relic agent is running on these new nodes. In addition, to build a complete picture of your Kubernetes environment, New Relic aggregates data from many resources, including Kube-state metrics. New Relic's “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health Once the Kubernetes integration is installed, you can access the New Relic Kubernetes cluster explorer, which offers a differentiated, intuitive way to visualize the health and performance of Kubernetes clusters. It applies advanced capabilities to filter, sort, and search for Kubernetes entities, helping teams understand the relationships and dependencies within an environment. It's a powerful and innovative solution to the challenges associated with running Kubernetes at massive scale. 3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment Above and beyond what the cluster explorer provides, New Relic provides out-of-the-box dashboards that allow customers to analyze performance and operating metrics of their Kubernetes environments. Key metrics include the number of containers, resource consumption, pending pods, out of memory (OOM) kills, and stuck pods. These metrics may be particularly relevant to Kubernetes administrators who require reliable, up-to-date information on resource consumption against pre-set thresholds. Access these dashboards directly from the cluster explorer where you can first visually explore your cluster and then use filters to drive down into specific dashboards that match that filter. 4. Monitor applications running in Kubernetes with APM One advantage of New Relic's Infrastructure agent being application-aware is that the cluster explorer is automatically aware of New Relic agents that are deployed on new applications. To fully exploit these capabilities, we recommend monitoring all existing and future containerized applications running in Kubernetes by installing the APM agent on them. Starting again from the cluster explorer, you can dig into what's happening in your applications from the context of the Kubernetes cluster. This gives you the ability to intuitively correlate your infrastructure and applications and begin analytically troubleshooting across the stack. Cloud-native applications use many interconnected services. The cluster explorer will correlate the application and link to its distributed tracings. In complex systems the ability to trace and identify pathways and latency bottlenecks are not optional. Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics If you are orchestrating an end-user facing application, New Relic allows you to view the end-to-end impact your infrastructure and services have on your customer experience. We tackle end-user management in two ways: With Synthetics, you can track application availability and performance from a wide variety of global locations visualizing if customer experience is impacted due to geography. With Browser and Mobile, we recommend monitoring such KPIs as load time and availability. Marrying end-user data with metrics and dashboards provided by the cluster explorer enables operators, administrators, app developers, and business personnel to align on common initiatives. 6. Bring teams together with dashboards tailored to specific business use cases and KPIs With dashboards, you can build custom visualizations from an end-to-end service perspective to analyze the cluster, pods, application, and end-user experience in one clean visual display. By using New Relic's dashboards, cross-organizational teams can align to share a common language and single source of truth, helping them make better decisions and drive business impact. The top two rows of this sample dashboard visualize various aspects of a Kubernetes environment while the third row illustrates valuable information regarding the applications that are deployed to this cluster. The bottom row displays the end-user viewpoint. Learn more Actively, where we enable availability monitoring for one user in one location with Synthetics Passively, where you can analyze a macro view of all users across all geographies with Browser monitoring and Mobile monitoring. Bring teams together with dashboards tailored to specific business use cases and KPIs Kubernetes Monitoring Guide",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08865,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Manage <em>your</em> containerized <em>environment</em>",
        "sections": "Manage <em>your</em> containerized <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " a complete picture of <em>your</em> Kubernetes <em>environment</em>, <em>New</em> <em>Relic</em> aggregates data from many resources, including Kube-state metrics. <em>New</em> <em>Relic</em>&#x27;s “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage"
      },
      "id": "603ebf49196a670d96a83d81"
    },
    {
      "sections": [
        "Analyze distributed systems",
        "1. Identify high-priority areas to monitor",
        "2. Instrument to get the visibility you require",
        "3. Create dashboards",
        "4. Dig deeper with distributed tracing",
        "5. Annotate message queues with distributed tracing payload APIs",
        "Example annotated message queue",
        "6. Annotate and tag traces with custom attributes",
        "Tip",
        "7. Leverage Synthetics to get a high-level view of system health",
        "For more help"
      ],
      "title": "Analyze distributed systems",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "af1cf5a80f8254c90509e562fb68a6ded2f7207f",
      "image": "https://docs.newrelic.com/static/838e50badd634f1f188cf821785f6696/2cffa/APm_distributed-tracing-catalyst-TWO.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/analyze-distributed-systems/",
      "published_at": "2021-05-05T19:54:12Z",
      "updated_at": "2021-03-16T11:07:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In a monolithic application, a simple stack trace can contain enough diagnostic data to determine the root cause of a code defect. But cloud computing and microservices have blurred the lines between software and infrastructure; in modern architectures, requests are distributed across many smaller services—often with ephemeral lifespans—hosted in both on-premise and cloud environments. Spotting code defects becomes much more complex. APM's distributed tracing automatically helps teams troubleshoot such distributed systems. Distributed traces are just one component of a well-monitored system. You need a holistic view of your distributed system, especially when tracking the root cause of a defect, as there are volumes of data to evaluate and understand. When managing a microservices environment, it's critical that you have the capability to spot bottlenecks and problem spans quickly so that you don't compromise your mean-time-to-resolution (MTTR) or end-user experience. At New Relic, we understand these challenges inherently. In our journey, we've transitioned from a Ruby monolith to a multi-language distributed environment built on more than 300 microservices, for which we average 50 code deploys a day. Such challenges inform both how we've built and how we monitor New Relic. Use the New Relic platform to translate your data into relevant insights, so you can collaborate around a common framework to build context and quickly optimize and troubleshoot your complex, distributed systems. 1. Identify high-priority areas to monitor Distributed systems are complex. Before engaging with the New Relic platform, we recommend that you identify the most critical areas of your systems to observe, and focus on instrumenting those high-priority areas first. Google's SRE handbook suggests monitoring the \"four golden signals\": traffic, latency, errors, and saturation, as shown in the following dashboard: Dashboards: Visualize key areas to monitor with dashboards. Too often, teams monitor what is either 1) easy to measure or 2) interpretable. Avoid this fallacy. When making choices about what to monitor, involve product managers and other stakeholders from your organization. Your goal is to monitor what matters to your business, not to overload your teams with noise. 2. Instrument to get the visibility you require Once you've identified your key priorities, instrument the appropriate parts of your system with the New Relic platform. Monitor your web apps with APM. See compatibility and requirements for New Relic agents and products to learn precise compatibility details for each supported language and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. Enable distributed tracing for APM, which will affect some existing APM features. If you're accustomed to using APM without distributed tracing, read the transition guide before you enable this feature. Monitor your compute resources with Infrastructure. See compatibility and requirements for New Relic Infrastructure for supported operating systems and environments. You can also instrument other products and services with on-host integrations. Monitor your front-end experience with Mobile and Browser. See compatibility and requirements for Mobile and for Browser. 3. Create dashboards Use dashboards to get an overview of your entire system and baseline performance, so you can better understand how the components work together. Insights provides a single framework for aligning disparate teams around relevant data. Approach this first build as your launching point, giving your teams something to react to as you begin to ascribe context to your system. You should continue to build and iterate your dashboards as you analyze, troubleshoot, and optimize your distributed system. Even after you have a basic understanding of your system, use dashboards to inform the decisions you make going forward. Dashboards provide central repository of truth, allowing all stakeholders to build context about the health of your system. Here is an example of a query that displays the slowest applications. SELECT percentile(duration, 99) as 'Slowest duration' FROM Transaction FACET name Copy Using this query you can focus on the slowest application to dig deeper: After running the query, dashboards displays the slowest durations. 4. Dig deeper with distributed tracing After you have basic instrumentation and contextual dashboards in place, you can begin to dig deeper to troubleshoot or optimize your system. A differentiated feature in New Relic One's Global Distributed Tracing is that you can come in with vague context for what you're investigating and search across all accounts and traces to get down to the actual user interactions that have those attributes somewhere in their trace. You no longer must begin with the application or specific entity to search for traces that include that application. For example, start with an analysis of your complex service calls, using the distributed tracing UI to: View a scatter plot chart showing the frequency, duration, and other facets of your distributed traces Group traces by root entry, service, service entry, or traces with errors View a trace list Filter specific traces to meet certain parameters You'll likely discover that you want to take the analysis one step further by annotating your traces with information that adds context to your troubleshooting, like User ID. You can do this in New Relic using custom attributes. one.newrelic.com > APM > Distributed tracing: use the distributed tracing UI to monitor and analyze modern distributed systems. 5. Annotate message queues with distributed tracing payload APIs To see connections between services in some environments—for example, in a system that relies heavily on queues—you may need to do some manual instrumentation using the distributed tracing payload APIs to ensure you're propagating the payload. This gives agents the necessary context to create spans with the right correlation; you'll see end-to-end traces for all linked services, including those that cross through the queue. Example annotated message queue For example: Start a transaction. Create the distributed tracing payload on the producer service within a New Relic transaction. As part of the message, add the distributed tracing payload. ​​newrelic.setTransactionName(\"Send Message\") // Create SQS service object var sqs = new AWS.SQS({apiVersion: '2012-11-05'}); var transactionHandle = newrelic.getTransaction(); var payload = transactionHandle.createDistributedTracePayload(); var jsonPayload = payload.text(); //add the jsonPayload as a MessageAttribute var params = { DelaySeconds: 10, MessageAttributes: { \"Testing\": { DataType: \"String\", StringValue: \"123\" }, \"TraceContext\": { DataType: \"String\", StringValue: jsonPayload } }, MessageBody: \"Testing 123\", QueueUrl: \"https://sqs.us-west-2.amazonaws.com/408155283954/sqs-testing\" }; Copy With the context of a transaction, receive the payload on the consumer service. sqs.receiveMessage(params, function(err, data) { if (err) { console.log(\"Receive Error\", err); } else if (data && data.Messages) { console.log(\"trace context:\") var traceContext = data.Messages[0].MessageAttributes.TraceContext.StringValue; if (traceContext != \"\") { var transactionHandle = newrelic.getTransaction(); transactionHandle.acceptDistributedTracePayload(traceContext); } Copy 6. Annotate and tag traces with custom attributes We recommend that you use custom attributes to decorate events with additional information for better tracing. For example, by adding key-value pairs, you can attach a user ID to trace a specific user through the call stack and review failing requests to determine if that user is having an unusually poor experience. We recommend adding custom attributes based on your use case; for example, if your instrumenting an order management system, you could add an order number custom attribute to your traces. To add custom attributes, you must first enable them for your agent, and then make an API call to record the attribute. Tip For more agent-specific information on collecting custom attributes, see Collect custom attributes sqs.sendMessage(params, function(err, data) { if (err) { res.send(\"Error: \"+ err); } else { res.send(\"Success! Message ID: \"+ data.MessageId); newrelic.addCustomAttribute(\"Message ID\", data.MessageId) } }); Copy 7. Leverage Synthetics to get a high-level view of system health In complex, distributed systems, you need to track and monitor many signals. Sometimes it may be that no one signal is concerning, yet your whole system is behaving anomalously. To get a complete picture, it's critical to analyze symptomatic data in tandem with system-level data. Synthetics allows you to interact with the entire system as an external user would, giving your teams high-level checks for performance and user experience. These external checks help you understand if the entire system is doing what you want regardless of what specific signals may indicate. For more help For more tips and best practices on distributed tracing and custom attributes, see the following: Distributed Tracing Anomaly Detection: A Faster, Easier Way to Troubleshoot Microservices Environments Introduction to distributed tracing Collect custom attributes",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08345,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " that you don&#x27;t compromise <em>your</em> mean-time-to-resolution (MTTR) or end-user experience. At <em>New</em> <em>Relic</em>, we understand these challenges inherently. In our journey, we&#x27;ve transitioned from a Ruby monolith to a multi-language distributed <em>environment</em> built on more than 300 microservices, for which we average"
      },
      "id": "603ebd8264441f02694e887f"
    },
    {
      "sections": [
        "Optimize cloud architecture and spend to continuously improve your modern cloud environment",
        "1. Instrument your application and cloud environment",
        "2. Create dashboards to display baseline infrastructure metrics; include AWS budgets if available",
        "Create dashboards for each level of your organization",
        "3. Identify resources for optimization",
        "4. Optional: Set up alerts",
        "Baseline queries",
        "Lean More"
      ],
      "title": "Optimize cloud architecture and spend to continuously improve your modern cloud environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "a39e5f962beb7ac37d876516d0d6ddb03f3888ec",
      "image": "https://docs.newrelic.com/static/3e068d910ba2857ad60a1b9c4af0a52d/4d383/image-1.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/optimize-cloud-architecture-spend-continuously-improve-your-modern-cloud-environment/",
      "published_at": "2021-05-05T19:51:57Z",
      "updated_at": "2021-03-16T11:05:42Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the cloud, it's important to look regularly and closely at how your applications and services are architected and utilized. It's the best way to identify opportunities that will let you right-size your instances, fine tune your databases, modify your storage usage, better configure your load balancers, or even re-architect your applications. For example, if you have a set of 20 instances all running at 10% CPU usage, you might consider using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud utilization and spend will help you optimize your environment and save money quickly. Optimizing your cloud architecture has three main goals: Improve performance, availability, and end-user experience by taking better advantage of cloud services Optimize your cloud spend, striking the delicate balance between cost and performance Capture business and technical metrics that help justify your current cloud spend that can be referenced as justification for a larger cloud budget as growth dictates In this tutorial, we'll show you how to use the New Relic platform to capture all the data you should leverage to optimize your cloud architecture and spend. 1. Instrument your application and cloud environment Make sure the following products and integrations are instrumented: Instrument Details Install Infrastructure Instrument infrastructure: If you haven't already done so, review the requirements for the Infrastructure agent. Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. After you've installed the Infrastructure agent on your host(s), you'll immediately have access to the broad spectrum of metrics the agent collects out-of-the-box. Install the APM agent Instrument your applications with APM. Doing so will let you monitor how your applications are performing while you are optimizing the underlying cloud services. That way, you can confirm that your changes to the infrastructure are in fact improving application performance. Configure the AWS integration New Relic Infrastructure's Amazon integrations let you monitor your AWS data in several New Relic products, including Infrastructure, dashboards, and New Relic Alerts. Connect AWS Billing If you are hosted in an AWS environment, New Relic can help you monitor your cloud spend with our AWS Billing integration. To leverage New Relic's AWS Billing integration, follow the procedures in the Connect AWS Billing documentation 2. Create dashboards to display baseline infrastructure metrics; include AWS budgets if available Dashboards lets you write powerful custom queries about your data and visualize the results in widgets displayed on a common dashboard. You can also feed the results of your queries directly into New Relic Alerts, where you can get immediate notifications on any deviation identified. For this step, you should display baseline infrastructure metrics related to performance and usage (CPU, memory, disk, database, etc.). Include AWS Budgets if available. To get you started, here are ways to use Insights dashboards to visualize your AWS cloud utilization and spend data: This dashboard shows data broken out by the applications and budgets you set up in the AWS budgeting area. Create individual dashboards for each application, and then collect those dashboards into a single “data app,” as shown here. This AWS Production Overview data app displays a set of widgets relevant to an AWS production budget. Data apps are great for presentations where you want to step through a series of topics and also provide a clear overview of an entire environment or service. Create dashboards for each level of your organization Whether you're a developer, operator, or executive, having information about your cloud utilization can help you optimize your cloud environment: Developers: Understanding what applications currently cost can help developers configure applications to use more services more efficiently. For example, could developers cut cloud costs using AWS Lambda or properly sized instances? Operators: Monitoring application utilization allows operators to catch possible overruns due to mis-configured services. For example, is the ops team's auto-scaling configuration scaling down properly? Executives: An overall view of both fore-casted and actual cloud spend, for individual applications, per region, and overall totals, can help executives make better business decisions. Use New Relic to keep track of your cloud spend, and make sure your teams get alerted immediately when you exceed thresholds. 3. Identify resources for optimization This step shows you how to use the metrics New Relic has captured to determine which resources to optimize. In the sample dashboard above, the CPU-usage widget on the left reveals that this application uses many instances sizes. Note that the “c4.xlarge” instance (in coral) consistently consumes only around 20% CPU capacity. However, when you analyze the c4.xlarge Memory usage in the center widget (light green), you'll see that memory usage for this instance ranges from 20% to 80%. This suggests that the application is more memory-intensive than CPU-intensive. In this case, the instance type should be changed from a compute-optimized instance to one that is memory-optimized. (Note: the chart on the right of the dashboard can be used to monitor the application's average response time as you make these optimizations.) This is just one example of how to identify cloud-based resources that could be candidates for optimization. Now that you've identified architecture for optimization, go ahead and do so. Whether you right-size your instances, fine tune your databases, modify your storage usage, better configure your load balancers, or even re-architect your applications, in the end your goal is to be able to compare your new, optimized architecture against the baselines you captured in Step 2. For more about baselines please review the Establish Objectives & Baselines tutorial. 4. Optional: Set up alerts You can create an alert condition for NRQL queries. Be sure to reference the complete documentation as needed. In the data app for the AWS production budget introduced in Step 2, this was one of the widgets: Here is the query that we used to create that widget: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = '[Your Cloud Budget]' Copy If you can write queries on your data and show them in Insights, then you can easily use them to generate Alert conditions. Baseline queries New Relic also lets you write “baseline queries” against your data. These are queriesy you write without setting hard limits on the results. Rather, you let New Relic Applied Intelligence “machine-learn” your performance data, and then alert you when your data strays too far outside of your baseline numbers. To create a baseline query, head over the the Alert console, go into Alert policies, and add a New alert policy. Then follow these steps: Create alert policy. Give your policy a concise and descriptive name and select an Incident Preference. Then select Create alert policy. Create a condition. Select NRQL Define your query, and decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider at the bottom of the chart either increases or decreases the gray band around your budget threshold (the blue line). The setting shown would have resulted in zero violations based on recent data, and that is what you're looking for. However, if that blue line spikes up or down out of the gray band, New Relic will immediately notify you. Using New Relic Applied Intelligence is a great way to help you proactively learn about your cloud spending or about any of your performance data. Lean More For a quick primer on the New Relic platform, check out Learn the New Relic Digital Intelligence Platform in 30 Minutes or Less. Review the Proactive alerting and incident orchestration tutorial for a deeper dive on some of the best practices outlined above.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08252,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Optimize</em> <em>cloud</em> architecture and spend to continuously improve <em>your</em> modern <em>cloud</em> <em>environment</em>",
        "sections": "<em>Optimize</em> <em>cloud</em> architecture and spend to continuously improve <em>your</em> modern <em>cloud</em> <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " business and technical metrics that help justify <em>your</em> current <em>cloud</em> spend that can be referenced as justification for a larger <em>cloud</em> budget as growth dictates In this tutorial, we&#x27;ll show you how to use the <em>New</em> <em>Relic</em> platform to capture all the data you should leverage to <em>optimize</em> <em>your</em> <em>cloud</em>"
      },
      "id": "603ebf4964441f4bfa4e8841"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/analyze-distributed-systems": [
    {
      "sections": [
        "Manage your containerized environment",
        "1. Update to latest Infrastructure agent and enable Kubernetes integration",
        "2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health",
        "3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment",
        "4. Monitor applications running in Kubernetes with APM",
        "Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics",
        "6. Bring teams together with dashboards tailored to specific business use cases and KPIs",
        "Learn more"
      ],
      "title": "Manage your containerized environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "71ba4468ed7d078021ccd705c78e72cfb5e92b5f",
      "image": "https://docs.newrelic.com/static/f744b0e1c8aac86e63f46a5798df58ae/c1b63/cont_environment01.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/manage-your-containerized-environment/",
      "published_at": "2021-05-05T19:53:07Z",
      "updated_at": "2021-03-16T11:20:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Widespread adoption of containers has changed the way applications are written and deployed. Container orchestration technologies such as Kubernetes are making it easier for teams to schedule, deploy, and manage their containerized applications. But challenges still exist that require teams to rethink their environment and application monitoring strategies: Challenge 1: Containers are ephemeral by nature. Knowing the containers or pod or node (host) where the application is currently running is not necessarily an indication of where it was running 5, 15, or 30 minutes ago when the issue occurred. Containers are deployed in dynamic, constantly evolving environments that require a modern monitoring approach. Challenge 2: Often, organizations are adopting containers as they break down monolithic applications into multiple microservices. This new approach introduces new complexity to the system and the sheer scale and dimensionality of containers is hard to conceptualize in an easy-to-understand format. Challenge 3: Delivering a differentiated end-user experience is a key initiative for all organizations, and containers are being adopted to help organizations release better software, faster. But with this tremendous opportunity also comes risk, because every time a new container is deployed, the cluster is impacted. Organizations need context into how infrastructure changes impact the application stack, and how changes to both the infrastructure and application stack affect the end-user experience. Getting all of this data in real-time in a digestible format is a significant challenge in distributed, containerized environments. The New Relic platform offers customers both ease of use and ease of deployment for containerized Kubernetes environments. With a few clicks you have the data and confidence to move forward intelligently. These six steps illustrate how to use the New Relic platform to manage your containers and how they are scheduled: 1. Update to latest Infrastructure agent and enable Kubernetes integration To get started, you'll need to deploy the latest Infrastructure agent onto a Kubernetes cluster with a DaemonSet. Leveraging DaemonSets is vital in dynamic, containerized environments, because when a new node is deployed or the cluster scales up or down, the DaemonSet ensures the New Relic agent is running on these new nodes. In addition, to build a complete picture of your Kubernetes environment, New Relic aggregates data from many resources, including Kube-state metrics. New Relic's “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health Once the Kubernetes integration is installed, you can access the New Relic Kubernetes cluster explorer, which offers a differentiated, intuitive way to visualize the health and performance of Kubernetes clusters. It applies advanced capabilities to filter, sort, and search for Kubernetes entities, helping teams understand the relationships and dependencies within an environment. It's a powerful and innovative solution to the challenges associated with running Kubernetes at massive scale. 3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment Above and beyond what the cluster explorer provides, New Relic provides out-of-the-box dashboards that allow customers to analyze performance and operating metrics of their Kubernetes environments. Key metrics include the number of containers, resource consumption, pending pods, out of memory (OOM) kills, and stuck pods. These metrics may be particularly relevant to Kubernetes administrators who require reliable, up-to-date information on resource consumption against pre-set thresholds. Access these dashboards directly from the cluster explorer where you can first visually explore your cluster and then use filters to drive down into specific dashboards that match that filter. 4. Monitor applications running in Kubernetes with APM One advantage of New Relic's Infrastructure agent being application-aware is that the cluster explorer is automatically aware of New Relic agents that are deployed on new applications. To fully exploit these capabilities, we recommend monitoring all existing and future containerized applications running in Kubernetes by installing the APM agent on them. Starting again from the cluster explorer, you can dig into what's happening in your applications from the context of the Kubernetes cluster. This gives you the ability to intuitively correlate your infrastructure and applications and begin analytically troubleshooting across the stack. Cloud-native applications use many interconnected services. The cluster explorer will correlate the application and link to its distributed tracings. In complex systems the ability to trace and identify pathways and latency bottlenecks are not optional. Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics If you are orchestrating an end-user facing application, New Relic allows you to view the end-to-end impact your infrastructure and services have on your customer experience. We tackle end-user management in two ways: With Synthetics, you can track application availability and performance from a wide variety of global locations visualizing if customer experience is impacted due to geography. With Browser and Mobile, we recommend monitoring such KPIs as load time and availability. Marrying end-user data with metrics and dashboards provided by the cluster explorer enables operators, administrators, app developers, and business personnel to align on common initiatives. 6. Bring teams together with dashboards tailored to specific business use cases and KPIs With dashboards, you can build custom visualizations from an end-to-end service perspective to analyze the cluster, pods, application, and end-user experience in one clean visual display. By using New Relic's dashboards, cross-organizational teams can align to share a common language and single source of truth, helping them make better decisions and drive business impact. The top two rows of this sample dashboard visualize various aspects of a Kubernetes environment while the third row illustrates valuable information regarding the applications that are deployed to this cluster. The bottom row displays the end-user viewpoint. Learn more Actively, where we enable availability monitoring for one user in one location with Synthetics Passively, where you can analyze a macro view of all users across all geographies with Browser monitoring and Mobile monitoring. Bring teams together with dashboards tailored to specific business use cases and KPIs Kubernetes Monitoring Guide",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08865,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Manage <em>your</em> containerized <em>environment</em>",
        "sections": "Manage <em>your</em> containerized <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " a complete picture of <em>your</em> Kubernetes <em>environment</em>, <em>New</em> <em>Relic</em> aggregates data from many resources, including Kube-state metrics. <em>New</em> <em>Relic</em>&#x27;s “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage"
      },
      "id": "603ebf49196a670d96a83d81"
    },
    {
      "sections": [
        "Adopt cloud services",
        "1. Identify services and technologies",
        "2. Deploy New Relic Infrastructure",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "Tip",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD pipeline integration",
        "8. AWS Lambda Monitoring"
      ],
      "title": "Adopt cloud services",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "4a8e675e4231295287e69402c8c5ff9b05a6103b",
      "image": "https://docs.newrelic.com/static/4159294d05ee078268a7b287af99a72f/c1b63/adopt_cloud.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/adopt-cloud-services/",
      "published_at": "2021-05-05T19:51:58Z",
      "updated_at": "2021-03-16T11:13:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've recently completed your cloud migration, have been using cloud-based services for a while, or have always been in the cloud, you may find yourself deploying modern, cutting-edge technologies and services. It's important to develop the ability to adopt new services easily and with confidence; innovation never stops for companies operating in the cloud, and a company's willingness to embrace new technology can give it a major competitive differentiator. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate, for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions. They may be cloud-based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations, you want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services. This allows your team to deploy faster, to adopt new services with confidence, to make better business decisions, and in general to expand its technology horizons. Here are the steps to using the New Relic Platform to monitor your modern technologies and cloud services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies and new services that might impact your organization's application environment. 2. Deploy New Relic Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified in Step One so that you can monitor your cloud services. If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations As you integrate new cloud services, you can use New Relic to monitor and report data about these services; giving you a single, comprehensive overview of your entire architecture. To configure cloud service integrations, link your Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) service provider account with New Relic. 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of an Insights dashboard with data about vendors, technologies, services, instances, and other important details for DevOps teams. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all changes to a system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all AWS Elastic Load Balancing (ALB) systems for the ALB monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD pipeline integration It's important to track deployments and the impact that code and infrastructure changes have on your end-user experience. New Relic APM deployment markers allow you to record deployments for each application. A deployment marker is an event indicating that a deployment happened. You can pair markers with metadata from your source code management (SCM) system ( including user IDs, revisions, and change logs.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root causes of immediate, long-term, or gradual degradations in your applications. Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment, as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible Puppet 8. AWS Lambda Monitoring New Relic One features an updated APM agent that is highly optimized from a cost and time perspective for ephemeral Lambda functions. Enable New Relic monitoring of AWS Lambda to to assess invocations, error rate, function duration, cold starts, and more. You can also take advantage of New Relic's Infrastructure integration with Lambda for additional reporting capabilities.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08577,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adopt <em>cloud</em> services",
        "sections": "2. Deploy <em>New</em> <em>Relic</em> Infrastructure",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " the <em>New</em> <em>Relic</em> Platform to monitor <em>your</em> modern technologies and <em>cloud</em> services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What <em>cloud</em>-based applications do I have? What are the underlying <em>cloud</em>-based services, technologies"
      },
      "id": "603ebf09e7b9d2071a2a0806"
    },
    {
      "sections": [
        "Optimize cloud architecture and spend to continuously improve your modern cloud environment",
        "1. Instrument your application and cloud environment",
        "2. Create dashboards to display baseline infrastructure metrics; include AWS budgets if available",
        "Create dashboards for each level of your organization",
        "3. Identify resources for optimization",
        "4. Optional: Set up alerts",
        "Baseline queries",
        "Lean More"
      ],
      "title": "Optimize cloud architecture and spend to continuously improve your modern cloud environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "a39e5f962beb7ac37d876516d0d6ddb03f3888ec",
      "image": "https://docs.newrelic.com/static/3e068d910ba2857ad60a1b9c4af0a52d/4d383/image-1.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/optimize-cloud-architecture-spend-continuously-improve-your-modern-cloud-environment/",
      "published_at": "2021-05-05T19:51:57Z",
      "updated_at": "2021-03-16T11:05:42Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the cloud, it's important to look regularly and closely at how your applications and services are architected and utilized. It's the best way to identify opportunities that will let you right-size your instances, fine tune your databases, modify your storage usage, better configure your load balancers, or even re-architect your applications. For example, if you have a set of 20 instances all running at 10% CPU usage, you might consider using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud utilization and spend will help you optimize your environment and save money quickly. Optimizing your cloud architecture has three main goals: Improve performance, availability, and end-user experience by taking better advantage of cloud services Optimize your cloud spend, striking the delicate balance between cost and performance Capture business and technical metrics that help justify your current cloud spend that can be referenced as justification for a larger cloud budget as growth dictates In this tutorial, we'll show you how to use the New Relic platform to capture all the data you should leverage to optimize your cloud architecture and spend. 1. Instrument your application and cloud environment Make sure the following products and integrations are instrumented: Instrument Details Install Infrastructure Instrument infrastructure: If you haven't already done so, review the requirements for the Infrastructure agent. Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. After you've installed the Infrastructure agent on your host(s), you'll immediately have access to the broad spectrum of metrics the agent collects out-of-the-box. Install the APM agent Instrument your applications with APM. Doing so will let you monitor how your applications are performing while you are optimizing the underlying cloud services. That way, you can confirm that your changes to the infrastructure are in fact improving application performance. Configure the AWS integration New Relic Infrastructure's Amazon integrations let you monitor your AWS data in several New Relic products, including Infrastructure, dashboards, and New Relic Alerts. Connect AWS Billing If you are hosted in an AWS environment, New Relic can help you monitor your cloud spend with our AWS Billing integration. To leverage New Relic's AWS Billing integration, follow the procedures in the Connect AWS Billing documentation 2. Create dashboards to display baseline infrastructure metrics; include AWS budgets if available Dashboards lets you write powerful custom queries about your data and visualize the results in widgets displayed on a common dashboard. You can also feed the results of your queries directly into New Relic Alerts, where you can get immediate notifications on any deviation identified. For this step, you should display baseline infrastructure metrics related to performance and usage (CPU, memory, disk, database, etc.). Include AWS Budgets if available. To get you started, here are ways to use Insights dashboards to visualize your AWS cloud utilization and spend data: This dashboard shows data broken out by the applications and budgets you set up in the AWS budgeting area. Create individual dashboards for each application, and then collect those dashboards into a single “data app,” as shown here. This AWS Production Overview data app displays a set of widgets relevant to an AWS production budget. Data apps are great for presentations where you want to step through a series of topics and also provide a clear overview of an entire environment or service. Create dashboards for each level of your organization Whether you're a developer, operator, or executive, having information about your cloud utilization can help you optimize your cloud environment: Developers: Understanding what applications currently cost can help developers configure applications to use more services more efficiently. For example, could developers cut cloud costs using AWS Lambda or properly sized instances? Operators: Monitoring application utilization allows operators to catch possible overruns due to mis-configured services. For example, is the ops team's auto-scaling configuration scaling down properly? Executives: An overall view of both fore-casted and actual cloud spend, for individual applications, per region, and overall totals, can help executives make better business decisions. Use New Relic to keep track of your cloud spend, and make sure your teams get alerted immediately when you exceed thresholds. 3. Identify resources for optimization This step shows you how to use the metrics New Relic has captured to determine which resources to optimize. In the sample dashboard above, the CPU-usage widget on the left reveals that this application uses many instances sizes. Note that the “c4.xlarge” instance (in coral) consistently consumes only around 20% CPU capacity. However, when you analyze the c4.xlarge Memory usage in the center widget (light green), you'll see that memory usage for this instance ranges from 20% to 80%. This suggests that the application is more memory-intensive than CPU-intensive. In this case, the instance type should be changed from a compute-optimized instance to one that is memory-optimized. (Note: the chart on the right of the dashboard can be used to monitor the application's average response time as you make these optimizations.) This is just one example of how to identify cloud-based resources that could be candidates for optimization. Now that you've identified architecture for optimization, go ahead and do so. Whether you right-size your instances, fine tune your databases, modify your storage usage, better configure your load balancers, or even re-architect your applications, in the end your goal is to be able to compare your new, optimized architecture against the baselines you captured in Step 2. For more about baselines please review the Establish Objectives & Baselines tutorial. 4. Optional: Set up alerts You can create an alert condition for NRQL queries. Be sure to reference the complete documentation as needed. In the data app for the AWS production budget introduced in Step 2, this was one of the widgets: Here is the query that we used to create that widget: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = '[Your Cloud Budget]' Copy If you can write queries on your data and show them in Insights, then you can easily use them to generate Alert conditions. Baseline queries New Relic also lets you write “baseline queries” against your data. These are queriesy you write without setting hard limits on the results. Rather, you let New Relic Applied Intelligence “machine-learn” your performance data, and then alert you when your data strays too far outside of your baseline numbers. To create a baseline query, head over the the Alert console, go into Alert policies, and add a New alert policy. Then follow these steps: Create alert policy. Give your policy a concise and descriptive name and select an Incident Preference. Then select Create alert policy. Create a condition. Select NRQL Define your query, and decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider at the bottom of the chart either increases or decreases the gray band around your budget threshold (the blue line). The setting shown would have resulted in zero violations based on recent data, and that is what you're looking for. However, if that blue line spikes up or down out of the gray band, New Relic will immediately notify you. Using New Relic Applied Intelligence is a great way to help you proactively learn about your cloud spending or about any of your performance data. Lean More For a quick primer on the New Relic platform, check out Learn the New Relic Digital Intelligence Platform in 30 Minutes or Less. Review the Proactive alerting and incident orchestration tutorial for a deeper dive on some of the best practices outlined above.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08252,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Optimize</em> <em>cloud</em> architecture and spend to continuously improve <em>your</em> modern <em>cloud</em> <em>environment</em>",
        "sections": "<em>Optimize</em> <em>cloud</em> architecture and spend to continuously improve <em>your</em> modern <em>cloud</em> <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " business and technical metrics that help justify <em>your</em> current <em>cloud</em> spend that can be referenced as justification for a larger <em>cloud</em> budget as growth dictates In this tutorial, we&#x27;ll show you how to use the <em>New</em> <em>Relic</em> platform to capture all the data you should leverage to <em>optimize</em> <em>your</em> <em>cloud</em>"
      },
      "id": "603ebf4964441f4bfa4e8841"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/customer-experience-improvement-track-experience-indicators": [
    {
      "sections": [
        "Manage your containerized environment",
        "1. Update to latest Infrastructure agent and enable Kubernetes integration",
        "2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health",
        "3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment",
        "4. Monitor applications running in Kubernetes with APM",
        "Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics",
        "6. Bring teams together with dashboards tailored to specific business use cases and KPIs",
        "Learn more"
      ],
      "title": "Manage your containerized environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "71ba4468ed7d078021ccd705c78e72cfb5e92b5f",
      "image": "https://docs.newrelic.com/static/f744b0e1c8aac86e63f46a5798df58ae/c1b63/cont_environment01.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/manage-your-containerized-environment/",
      "published_at": "2021-05-05T19:53:07Z",
      "updated_at": "2021-03-16T11:20:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Widespread adoption of containers has changed the way applications are written and deployed. Container orchestration technologies such as Kubernetes are making it easier for teams to schedule, deploy, and manage their containerized applications. But challenges still exist that require teams to rethink their environment and application monitoring strategies: Challenge 1: Containers are ephemeral by nature. Knowing the containers or pod or node (host) where the application is currently running is not necessarily an indication of where it was running 5, 15, or 30 minutes ago when the issue occurred. Containers are deployed in dynamic, constantly evolving environments that require a modern monitoring approach. Challenge 2: Often, organizations are adopting containers as they break down monolithic applications into multiple microservices. This new approach introduces new complexity to the system and the sheer scale and dimensionality of containers is hard to conceptualize in an easy-to-understand format. Challenge 3: Delivering a differentiated end-user experience is a key initiative for all organizations, and containers are being adopted to help organizations release better software, faster. But with this tremendous opportunity also comes risk, because every time a new container is deployed, the cluster is impacted. Organizations need context into how infrastructure changes impact the application stack, and how changes to both the infrastructure and application stack affect the end-user experience. Getting all of this data in real-time in a digestible format is a significant challenge in distributed, containerized environments. The New Relic platform offers customers both ease of use and ease of deployment for containerized Kubernetes environments. With a few clicks you have the data and confidence to move forward intelligently. These six steps illustrate how to use the New Relic platform to manage your containers and how they are scheduled: 1. Update to latest Infrastructure agent and enable Kubernetes integration To get started, you'll need to deploy the latest Infrastructure agent onto a Kubernetes cluster with a DaemonSet. Leveraging DaemonSets is vital in dynamic, containerized environments, because when a new node is deployed or the cluster scales up or down, the DaemonSet ensures the New Relic agent is running on these new nodes. In addition, to build a complete picture of your Kubernetes environment, New Relic aggregates data from many resources, including Kube-state metrics. New Relic's “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health Once the Kubernetes integration is installed, you can access the New Relic Kubernetes cluster explorer, which offers a differentiated, intuitive way to visualize the health and performance of Kubernetes clusters. It applies advanced capabilities to filter, sort, and search for Kubernetes entities, helping teams understand the relationships and dependencies within an environment. It's a powerful and innovative solution to the challenges associated with running Kubernetes at massive scale. 3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment Above and beyond what the cluster explorer provides, New Relic provides out-of-the-box dashboards that allow customers to analyze performance and operating metrics of their Kubernetes environments. Key metrics include the number of containers, resource consumption, pending pods, out of memory (OOM) kills, and stuck pods. These metrics may be particularly relevant to Kubernetes administrators who require reliable, up-to-date information on resource consumption against pre-set thresholds. Access these dashboards directly from the cluster explorer where you can first visually explore your cluster and then use filters to drive down into specific dashboards that match that filter. 4. Monitor applications running in Kubernetes with APM One advantage of New Relic's Infrastructure agent being application-aware is that the cluster explorer is automatically aware of New Relic agents that are deployed on new applications. To fully exploit these capabilities, we recommend monitoring all existing and future containerized applications running in Kubernetes by installing the APM agent on them. Starting again from the cluster explorer, you can dig into what's happening in your applications from the context of the Kubernetes cluster. This gives you the ability to intuitively correlate your infrastructure and applications and begin analytically troubleshooting across the stack. Cloud-native applications use many interconnected services. The cluster explorer will correlate the application and link to its distributed tracings. In complex systems the ability to trace and identify pathways and latency bottlenecks are not optional. Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics If you are orchestrating an end-user facing application, New Relic allows you to view the end-to-end impact your infrastructure and services have on your customer experience. We tackle end-user management in two ways: With Synthetics, you can track application availability and performance from a wide variety of global locations visualizing if customer experience is impacted due to geography. With Browser and Mobile, we recommend monitoring such KPIs as load time and availability. Marrying end-user data with metrics and dashboards provided by the cluster explorer enables operators, administrators, app developers, and business personnel to align on common initiatives. 6. Bring teams together with dashboards tailored to specific business use cases and KPIs With dashboards, you can build custom visualizations from an end-to-end service perspective to analyze the cluster, pods, application, and end-user experience in one clean visual display. By using New Relic's dashboards, cross-organizational teams can align to share a common language and single source of truth, helping them make better decisions and drive business impact. The top two rows of this sample dashboard visualize various aspects of a Kubernetes environment while the third row illustrates valuable information regarding the applications that are deployed to this cluster. The bottom row displays the end-user viewpoint. Learn more Actively, where we enable availability monitoring for one user in one location with Synthetics Passively, where you can analyze a macro view of all users across all geographies with Browser monitoring and Mobile monitoring. Bring teams together with dashboards tailored to specific business use cases and KPIs Kubernetes Monitoring Guide",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08865,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Manage <em>your</em> containerized <em>environment</em>",
        "sections": "Manage <em>your</em> containerized <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " a complete picture of <em>your</em> Kubernetes <em>environment</em>, <em>New</em> <em>Relic</em> aggregates data from many resources, including Kube-state metrics. <em>New</em> <em>Relic</em>&#x27;s “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage"
      },
      "id": "603ebf49196a670d96a83d81"
    },
    {
      "sections": [
        "Adopt cloud services",
        "1. Identify services and technologies",
        "2. Deploy New Relic Infrastructure",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "Tip",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD pipeline integration",
        "8. AWS Lambda Monitoring"
      ],
      "title": "Adopt cloud services",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "4a8e675e4231295287e69402c8c5ff9b05a6103b",
      "image": "https://docs.newrelic.com/static/4159294d05ee078268a7b287af99a72f/c1b63/adopt_cloud.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/adopt-cloud-services/",
      "published_at": "2021-05-05T19:51:58Z",
      "updated_at": "2021-03-16T11:13:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've recently completed your cloud migration, have been using cloud-based services for a while, or have always been in the cloud, you may find yourself deploying modern, cutting-edge technologies and services. It's important to develop the ability to adopt new services easily and with confidence; innovation never stops for companies operating in the cloud, and a company's willingness to embrace new technology can give it a major competitive differentiator. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate, for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions. They may be cloud-based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations, you want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services. This allows your team to deploy faster, to adopt new services with confidence, to make better business decisions, and in general to expand its technology horizons. Here are the steps to using the New Relic Platform to monitor your modern technologies and cloud services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies and new services that might impact your organization's application environment. 2. Deploy New Relic Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified in Step One so that you can monitor your cloud services. If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations As you integrate new cloud services, you can use New Relic to monitor and report data about these services; giving you a single, comprehensive overview of your entire architecture. To configure cloud service integrations, link your Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) service provider account with New Relic. 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of an Insights dashboard with data about vendors, technologies, services, instances, and other important details for DevOps teams. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all changes to a system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all AWS Elastic Load Balancing (ALB) systems for the ALB monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD pipeline integration It's important to track deployments and the impact that code and infrastructure changes have on your end-user experience. New Relic APM deployment markers allow you to record deployments for each application. A deployment marker is an event indicating that a deployment happened. You can pair markers with metadata from your source code management (SCM) system ( including user IDs, revisions, and change logs.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root causes of immediate, long-term, or gradual degradations in your applications. Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment, as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible Puppet 8. AWS Lambda Monitoring New Relic One features an updated APM agent that is highly optimized from a cost and time perspective for ephemeral Lambda functions. Enable New Relic monitoring of AWS Lambda to to assess invocations, error rate, function duration, cold starts, and more. You can also take advantage of New Relic's Infrastructure integration with Lambda for additional reporting capabilities.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08577,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adopt <em>cloud</em> services",
        "sections": "2. Deploy <em>New</em> <em>Relic</em> Infrastructure",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " the <em>New</em> <em>Relic</em> Platform to monitor <em>your</em> modern technologies and <em>cloud</em> services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What <em>cloud</em>-based applications do I have? What are the underlying <em>cloud</em>-based services, technologies"
      },
      "id": "603ebf09e7b9d2071a2a0806"
    },
    {
      "sections": [
        "Analyze distributed systems",
        "1. Identify high-priority areas to monitor",
        "2. Instrument to get the visibility you require",
        "3. Create dashboards",
        "4. Dig deeper with distributed tracing",
        "5. Annotate message queues with distributed tracing payload APIs",
        "Example annotated message queue",
        "6. Annotate and tag traces with custom attributes",
        "Tip",
        "7. Leverage Synthetics to get a high-level view of system health",
        "For more help"
      ],
      "title": "Analyze distributed systems",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "af1cf5a80f8254c90509e562fb68a6ded2f7207f",
      "image": "https://docs.newrelic.com/static/838e50badd634f1f188cf821785f6696/2cffa/APm_distributed-tracing-catalyst-TWO.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/analyze-distributed-systems/",
      "published_at": "2021-05-05T19:54:12Z",
      "updated_at": "2021-03-16T11:07:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In a monolithic application, a simple stack trace can contain enough diagnostic data to determine the root cause of a code defect. But cloud computing and microservices have blurred the lines between software and infrastructure; in modern architectures, requests are distributed across many smaller services—often with ephemeral lifespans—hosted in both on-premise and cloud environments. Spotting code defects becomes much more complex. APM's distributed tracing automatically helps teams troubleshoot such distributed systems. Distributed traces are just one component of a well-monitored system. You need a holistic view of your distributed system, especially when tracking the root cause of a defect, as there are volumes of data to evaluate and understand. When managing a microservices environment, it's critical that you have the capability to spot bottlenecks and problem spans quickly so that you don't compromise your mean-time-to-resolution (MTTR) or end-user experience. At New Relic, we understand these challenges inherently. In our journey, we've transitioned from a Ruby monolith to a multi-language distributed environment built on more than 300 microservices, for which we average 50 code deploys a day. Such challenges inform both how we've built and how we monitor New Relic. Use the New Relic platform to translate your data into relevant insights, so you can collaborate around a common framework to build context and quickly optimize and troubleshoot your complex, distributed systems. 1. Identify high-priority areas to monitor Distributed systems are complex. Before engaging with the New Relic platform, we recommend that you identify the most critical areas of your systems to observe, and focus on instrumenting those high-priority areas first. Google's SRE handbook suggests monitoring the \"four golden signals\": traffic, latency, errors, and saturation, as shown in the following dashboard: Dashboards: Visualize key areas to monitor with dashboards. Too often, teams monitor what is either 1) easy to measure or 2) interpretable. Avoid this fallacy. When making choices about what to monitor, involve product managers and other stakeholders from your organization. Your goal is to monitor what matters to your business, not to overload your teams with noise. 2. Instrument to get the visibility you require Once you've identified your key priorities, instrument the appropriate parts of your system with the New Relic platform. Monitor your web apps with APM. See compatibility and requirements for New Relic agents and products to learn precise compatibility details for each supported language and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. Enable distributed tracing for APM, which will affect some existing APM features. If you're accustomed to using APM without distributed tracing, read the transition guide before you enable this feature. Monitor your compute resources with Infrastructure. See compatibility and requirements for New Relic Infrastructure for supported operating systems and environments. You can also instrument other products and services with on-host integrations. Monitor your front-end experience with Mobile and Browser. See compatibility and requirements for Mobile and for Browser. 3. Create dashboards Use dashboards to get an overview of your entire system and baseline performance, so you can better understand how the components work together. Insights provides a single framework for aligning disparate teams around relevant data. Approach this first build as your launching point, giving your teams something to react to as you begin to ascribe context to your system. You should continue to build and iterate your dashboards as you analyze, troubleshoot, and optimize your distributed system. Even after you have a basic understanding of your system, use dashboards to inform the decisions you make going forward. Dashboards provide central repository of truth, allowing all stakeholders to build context about the health of your system. Here is an example of a query that displays the slowest applications. SELECT percentile(duration, 99) as 'Slowest duration' FROM Transaction FACET name Copy Using this query you can focus on the slowest application to dig deeper: After running the query, dashboards displays the slowest durations. 4. Dig deeper with distributed tracing After you have basic instrumentation and contextual dashboards in place, you can begin to dig deeper to troubleshoot or optimize your system. A differentiated feature in New Relic One's Global Distributed Tracing is that you can come in with vague context for what you're investigating and search across all accounts and traces to get down to the actual user interactions that have those attributes somewhere in their trace. You no longer must begin with the application or specific entity to search for traces that include that application. For example, start with an analysis of your complex service calls, using the distributed tracing UI to: View a scatter plot chart showing the frequency, duration, and other facets of your distributed traces Group traces by root entry, service, service entry, or traces with errors View a trace list Filter specific traces to meet certain parameters You'll likely discover that you want to take the analysis one step further by annotating your traces with information that adds context to your troubleshooting, like User ID. You can do this in New Relic using custom attributes. one.newrelic.com > APM > Distributed tracing: use the distributed tracing UI to monitor and analyze modern distributed systems. 5. Annotate message queues with distributed tracing payload APIs To see connections between services in some environments—for example, in a system that relies heavily on queues—you may need to do some manual instrumentation using the distributed tracing payload APIs to ensure you're propagating the payload. This gives agents the necessary context to create spans with the right correlation; you'll see end-to-end traces for all linked services, including those that cross through the queue. Example annotated message queue For example: Start a transaction. Create the distributed tracing payload on the producer service within a New Relic transaction. As part of the message, add the distributed tracing payload. ​​newrelic.setTransactionName(\"Send Message\") // Create SQS service object var sqs = new AWS.SQS({apiVersion: '2012-11-05'}); var transactionHandle = newrelic.getTransaction(); var payload = transactionHandle.createDistributedTracePayload(); var jsonPayload = payload.text(); //add the jsonPayload as a MessageAttribute var params = { DelaySeconds: 10, MessageAttributes: { \"Testing\": { DataType: \"String\", StringValue: \"123\" }, \"TraceContext\": { DataType: \"String\", StringValue: jsonPayload } }, MessageBody: \"Testing 123\", QueueUrl: \"https://sqs.us-west-2.amazonaws.com/408155283954/sqs-testing\" }; Copy With the context of a transaction, receive the payload on the consumer service. sqs.receiveMessage(params, function(err, data) { if (err) { console.log(\"Receive Error\", err); } else if (data && data.Messages) { console.log(\"trace context:\") var traceContext = data.Messages[0].MessageAttributes.TraceContext.StringValue; if (traceContext != \"\") { var transactionHandle = newrelic.getTransaction(); transactionHandle.acceptDistributedTracePayload(traceContext); } Copy 6. Annotate and tag traces with custom attributes We recommend that you use custom attributes to decorate events with additional information for better tracing. For example, by adding key-value pairs, you can attach a user ID to trace a specific user through the call stack and review failing requests to determine if that user is having an unusually poor experience. We recommend adding custom attributes based on your use case; for example, if your instrumenting an order management system, you could add an order number custom attribute to your traces. To add custom attributes, you must first enable them for your agent, and then make an API call to record the attribute. Tip For more agent-specific information on collecting custom attributes, see Collect custom attributes sqs.sendMessage(params, function(err, data) { if (err) { res.send(\"Error: \"+ err); } else { res.send(\"Success! Message ID: \"+ data.MessageId); newrelic.addCustomAttribute(\"Message ID\", data.MessageId) } }); Copy 7. Leverage Synthetics to get a high-level view of system health In complex, distributed systems, you need to track and monitor many signals. Sometimes it may be that no one signal is concerning, yet your whole system is behaving anomalously. To get a complete picture, it's critical to analyze symptomatic data in tandem with system-level data. Synthetics allows you to interact with the entire system as an external user would, giving your teams high-level checks for performance and user experience. These external checks help you understand if the entire system is doing what you want regardless of what specific signals may indicate. For more help For more tips and best practices on distributed tracing and custom attributes, see the following: Distributed Tracing Anomaly Detection: A Faster, Easier Way to Troubleshoot Microservices Environments Introduction to distributed tracing Collect custom attributes",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08345,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " that you don&#x27;t compromise <em>your</em> mean-time-to-resolution (MTTR) or end-user experience. At <em>New</em> <em>Relic</em>, we understand these challenges inherently. In our journey, we&#x27;ve transitioned from a Ruby monolith to a multi-language distributed <em>environment</em> built on more than 300 microservices, for which we average"
      },
      "id": "603ebd8264441f02694e887f"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/guide-optimizing-your-cloud-native-environment": [
    {
      "sections": [
        "Manage your containerized environment",
        "1. Update to latest Infrastructure agent and enable Kubernetes integration",
        "2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health",
        "3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment",
        "4. Monitor applications running in Kubernetes with APM",
        "Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics",
        "6. Bring teams together with dashboards tailored to specific business use cases and KPIs",
        "Learn more"
      ],
      "title": "Manage your containerized environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "71ba4468ed7d078021ccd705c78e72cfb5e92b5f",
      "image": "https://docs.newrelic.com/static/f744b0e1c8aac86e63f46a5798df58ae/c1b63/cont_environment01.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/manage-your-containerized-environment/",
      "published_at": "2021-05-05T19:53:07Z",
      "updated_at": "2021-03-16T11:20:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Widespread adoption of containers has changed the way applications are written and deployed. Container orchestration technologies such as Kubernetes are making it easier for teams to schedule, deploy, and manage their containerized applications. But challenges still exist that require teams to rethink their environment and application monitoring strategies: Challenge 1: Containers are ephemeral by nature. Knowing the containers or pod or node (host) where the application is currently running is not necessarily an indication of where it was running 5, 15, or 30 minutes ago when the issue occurred. Containers are deployed in dynamic, constantly evolving environments that require a modern monitoring approach. Challenge 2: Often, organizations are adopting containers as they break down monolithic applications into multiple microservices. This new approach introduces new complexity to the system and the sheer scale and dimensionality of containers is hard to conceptualize in an easy-to-understand format. Challenge 3: Delivering a differentiated end-user experience is a key initiative for all organizations, and containers are being adopted to help organizations release better software, faster. But with this tremendous opportunity also comes risk, because every time a new container is deployed, the cluster is impacted. Organizations need context into how infrastructure changes impact the application stack, and how changes to both the infrastructure and application stack affect the end-user experience. Getting all of this data in real-time in a digestible format is a significant challenge in distributed, containerized environments. The New Relic platform offers customers both ease of use and ease of deployment for containerized Kubernetes environments. With a few clicks you have the data and confidence to move forward intelligently. These six steps illustrate how to use the New Relic platform to manage your containers and how they are scheduled: 1. Update to latest Infrastructure agent and enable Kubernetes integration To get started, you'll need to deploy the latest Infrastructure agent onto a Kubernetes cluster with a DaemonSet. Leveraging DaemonSets is vital in dynamic, containerized environments, because when a new node is deployed or the cluster scales up or down, the DaemonSet ensures the New Relic agent is running on these new nodes. In addition, to build a complete picture of your Kubernetes environment, New Relic aggregates data from many resources, including Kube-state metrics. New Relic's “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health Once the Kubernetes integration is installed, you can access the New Relic Kubernetes cluster explorer, which offers a differentiated, intuitive way to visualize the health and performance of Kubernetes clusters. It applies advanced capabilities to filter, sort, and search for Kubernetes entities, helping teams understand the relationships and dependencies within an environment. It's a powerful and innovative solution to the challenges associated with running Kubernetes at massive scale. 3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment Above and beyond what the cluster explorer provides, New Relic provides out-of-the-box dashboards that allow customers to analyze performance and operating metrics of their Kubernetes environments. Key metrics include the number of containers, resource consumption, pending pods, out of memory (OOM) kills, and stuck pods. These metrics may be particularly relevant to Kubernetes administrators who require reliable, up-to-date information on resource consumption against pre-set thresholds. Access these dashboards directly from the cluster explorer where you can first visually explore your cluster and then use filters to drive down into specific dashboards that match that filter. 4. Monitor applications running in Kubernetes with APM One advantage of New Relic's Infrastructure agent being application-aware is that the cluster explorer is automatically aware of New Relic agents that are deployed on new applications. To fully exploit these capabilities, we recommend monitoring all existing and future containerized applications running in Kubernetes by installing the APM agent on them. Starting again from the cluster explorer, you can dig into what's happening in your applications from the context of the Kubernetes cluster. This gives you the ability to intuitively correlate your infrastructure and applications and begin analytically troubleshooting across the stack. Cloud-native applications use many interconnected services. The cluster explorer will correlate the application and link to its distributed tracings. In complex systems the ability to trace and identify pathways and latency bottlenecks are not optional. Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics If you are orchestrating an end-user facing application, New Relic allows you to view the end-to-end impact your infrastructure and services have on your customer experience. We tackle end-user management in two ways: With Synthetics, you can track application availability and performance from a wide variety of global locations visualizing if customer experience is impacted due to geography. With Browser and Mobile, we recommend monitoring such KPIs as load time and availability. Marrying end-user data with metrics and dashboards provided by the cluster explorer enables operators, administrators, app developers, and business personnel to align on common initiatives. 6. Bring teams together with dashboards tailored to specific business use cases and KPIs With dashboards, you can build custom visualizations from an end-to-end service perspective to analyze the cluster, pods, application, and end-user experience in one clean visual display. By using New Relic's dashboards, cross-organizational teams can align to share a common language and single source of truth, helping them make better decisions and drive business impact. The top two rows of this sample dashboard visualize various aspects of a Kubernetes environment while the third row illustrates valuable information regarding the applications that are deployed to this cluster. The bottom row displays the end-user viewpoint. Learn more Actively, where we enable availability monitoring for one user in one location with Synthetics Passively, where you can analyze a macro view of all users across all geographies with Browser monitoring and Mobile monitoring. Bring teams together with dashboards tailored to specific business use cases and KPIs Kubernetes Monitoring Guide",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08865,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Manage <em>your</em> containerized <em>environment</em>",
        "sections": "Manage <em>your</em> containerized <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " a complete picture of <em>your</em> Kubernetes <em>environment</em>, <em>New</em> <em>Relic</em> aggregates data from many resources, including Kube-state metrics. <em>New</em> <em>Relic</em>&#x27;s “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage"
      },
      "id": "603ebf49196a670d96a83d81"
    },
    {
      "sections": [
        "Adopt cloud services",
        "1. Identify services and technologies",
        "2. Deploy New Relic Infrastructure",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "Tip",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD pipeline integration",
        "8. AWS Lambda Monitoring"
      ],
      "title": "Adopt cloud services",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "4a8e675e4231295287e69402c8c5ff9b05a6103b",
      "image": "https://docs.newrelic.com/static/4159294d05ee078268a7b287af99a72f/c1b63/adopt_cloud.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/adopt-cloud-services/",
      "published_at": "2021-05-05T19:51:58Z",
      "updated_at": "2021-03-16T11:13:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've recently completed your cloud migration, have been using cloud-based services for a while, or have always been in the cloud, you may find yourself deploying modern, cutting-edge technologies and services. It's important to develop the ability to adopt new services easily and with confidence; innovation never stops for companies operating in the cloud, and a company's willingness to embrace new technology can give it a major competitive differentiator. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate, for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions. They may be cloud-based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations, you want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services. This allows your team to deploy faster, to adopt new services with confidence, to make better business decisions, and in general to expand its technology horizons. Here are the steps to using the New Relic Platform to monitor your modern technologies and cloud services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies and new services that might impact your organization's application environment. 2. Deploy New Relic Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified in Step One so that you can monitor your cloud services. If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations As you integrate new cloud services, you can use New Relic to monitor and report data about these services; giving you a single, comprehensive overview of your entire architecture. To configure cloud service integrations, link your Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) service provider account with New Relic. 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of an Insights dashboard with data about vendors, technologies, services, instances, and other important details for DevOps teams. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all changes to a system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all AWS Elastic Load Balancing (ALB) systems for the ALB monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD pipeline integration It's important to track deployments and the impact that code and infrastructure changes have on your end-user experience. New Relic APM deployment markers allow you to record deployments for each application. A deployment marker is an event indicating that a deployment happened. You can pair markers with metadata from your source code management (SCM) system ( including user IDs, revisions, and change logs.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root causes of immediate, long-term, or gradual degradations in your applications. Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment, as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible Puppet 8. AWS Lambda Monitoring New Relic One features an updated APM agent that is highly optimized from a cost and time perspective for ephemeral Lambda functions. Enable New Relic monitoring of AWS Lambda to to assess invocations, error rate, function duration, cold starts, and more. You can also take advantage of New Relic's Infrastructure integration with Lambda for additional reporting capabilities.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08577,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adopt <em>cloud</em> services",
        "sections": "2. Deploy <em>New</em> <em>Relic</em> Infrastructure",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " the <em>New</em> <em>Relic</em> Platform to monitor <em>your</em> modern technologies and <em>cloud</em> services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What <em>cloud</em>-based applications do I have? What are the underlying <em>cloud</em>-based services, technologies"
      },
      "id": "603ebf09e7b9d2071a2a0806"
    },
    {
      "sections": [
        "Analyze distributed systems",
        "1. Identify high-priority areas to monitor",
        "2. Instrument to get the visibility you require",
        "3. Create dashboards",
        "4. Dig deeper with distributed tracing",
        "5. Annotate message queues with distributed tracing payload APIs",
        "Example annotated message queue",
        "6. Annotate and tag traces with custom attributes",
        "Tip",
        "7. Leverage Synthetics to get a high-level view of system health",
        "For more help"
      ],
      "title": "Analyze distributed systems",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "af1cf5a80f8254c90509e562fb68a6ded2f7207f",
      "image": "https://docs.newrelic.com/static/838e50badd634f1f188cf821785f6696/2cffa/APm_distributed-tracing-catalyst-TWO.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/analyze-distributed-systems/",
      "published_at": "2021-05-05T19:54:12Z",
      "updated_at": "2021-03-16T11:07:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In a monolithic application, a simple stack trace can contain enough diagnostic data to determine the root cause of a code defect. But cloud computing and microservices have blurred the lines between software and infrastructure; in modern architectures, requests are distributed across many smaller services—often with ephemeral lifespans—hosted in both on-premise and cloud environments. Spotting code defects becomes much more complex. APM's distributed tracing automatically helps teams troubleshoot such distributed systems. Distributed traces are just one component of a well-monitored system. You need a holistic view of your distributed system, especially when tracking the root cause of a defect, as there are volumes of data to evaluate and understand. When managing a microservices environment, it's critical that you have the capability to spot bottlenecks and problem spans quickly so that you don't compromise your mean-time-to-resolution (MTTR) or end-user experience. At New Relic, we understand these challenges inherently. In our journey, we've transitioned from a Ruby monolith to a multi-language distributed environment built on more than 300 microservices, for which we average 50 code deploys a day. Such challenges inform both how we've built and how we monitor New Relic. Use the New Relic platform to translate your data into relevant insights, so you can collaborate around a common framework to build context and quickly optimize and troubleshoot your complex, distributed systems. 1. Identify high-priority areas to monitor Distributed systems are complex. Before engaging with the New Relic platform, we recommend that you identify the most critical areas of your systems to observe, and focus on instrumenting those high-priority areas first. Google's SRE handbook suggests monitoring the \"four golden signals\": traffic, latency, errors, and saturation, as shown in the following dashboard: Dashboards: Visualize key areas to monitor with dashboards. Too often, teams monitor what is either 1) easy to measure or 2) interpretable. Avoid this fallacy. When making choices about what to monitor, involve product managers and other stakeholders from your organization. Your goal is to monitor what matters to your business, not to overload your teams with noise. 2. Instrument to get the visibility you require Once you've identified your key priorities, instrument the appropriate parts of your system with the New Relic platform. Monitor your web apps with APM. See compatibility and requirements for New Relic agents and products to learn precise compatibility details for each supported language and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. Enable distributed tracing for APM, which will affect some existing APM features. If you're accustomed to using APM without distributed tracing, read the transition guide before you enable this feature. Monitor your compute resources with Infrastructure. See compatibility and requirements for New Relic Infrastructure for supported operating systems and environments. You can also instrument other products and services with on-host integrations. Monitor your front-end experience with Mobile and Browser. See compatibility and requirements for Mobile and for Browser. 3. Create dashboards Use dashboards to get an overview of your entire system and baseline performance, so you can better understand how the components work together. Insights provides a single framework for aligning disparate teams around relevant data. Approach this first build as your launching point, giving your teams something to react to as you begin to ascribe context to your system. You should continue to build and iterate your dashboards as you analyze, troubleshoot, and optimize your distributed system. Even after you have a basic understanding of your system, use dashboards to inform the decisions you make going forward. Dashboards provide central repository of truth, allowing all stakeholders to build context about the health of your system. Here is an example of a query that displays the slowest applications. SELECT percentile(duration, 99) as 'Slowest duration' FROM Transaction FACET name Copy Using this query you can focus on the slowest application to dig deeper: After running the query, dashboards displays the slowest durations. 4. Dig deeper with distributed tracing After you have basic instrumentation and contextual dashboards in place, you can begin to dig deeper to troubleshoot or optimize your system. A differentiated feature in New Relic One's Global Distributed Tracing is that you can come in with vague context for what you're investigating and search across all accounts and traces to get down to the actual user interactions that have those attributes somewhere in their trace. You no longer must begin with the application or specific entity to search for traces that include that application. For example, start with an analysis of your complex service calls, using the distributed tracing UI to: View a scatter plot chart showing the frequency, duration, and other facets of your distributed traces Group traces by root entry, service, service entry, or traces with errors View a trace list Filter specific traces to meet certain parameters You'll likely discover that you want to take the analysis one step further by annotating your traces with information that adds context to your troubleshooting, like User ID. You can do this in New Relic using custom attributes. one.newrelic.com > APM > Distributed tracing: use the distributed tracing UI to monitor and analyze modern distributed systems. 5. Annotate message queues with distributed tracing payload APIs To see connections between services in some environments—for example, in a system that relies heavily on queues—you may need to do some manual instrumentation using the distributed tracing payload APIs to ensure you're propagating the payload. This gives agents the necessary context to create spans with the right correlation; you'll see end-to-end traces for all linked services, including those that cross through the queue. Example annotated message queue For example: Start a transaction. Create the distributed tracing payload on the producer service within a New Relic transaction. As part of the message, add the distributed tracing payload. ​​newrelic.setTransactionName(\"Send Message\") // Create SQS service object var sqs = new AWS.SQS({apiVersion: '2012-11-05'}); var transactionHandle = newrelic.getTransaction(); var payload = transactionHandle.createDistributedTracePayload(); var jsonPayload = payload.text(); //add the jsonPayload as a MessageAttribute var params = { DelaySeconds: 10, MessageAttributes: { \"Testing\": { DataType: \"String\", StringValue: \"123\" }, \"TraceContext\": { DataType: \"String\", StringValue: jsonPayload } }, MessageBody: \"Testing 123\", QueueUrl: \"https://sqs.us-west-2.amazonaws.com/408155283954/sqs-testing\" }; Copy With the context of a transaction, receive the payload on the consumer service. sqs.receiveMessage(params, function(err, data) { if (err) { console.log(\"Receive Error\", err); } else if (data && data.Messages) { console.log(\"trace context:\") var traceContext = data.Messages[0].MessageAttributes.TraceContext.StringValue; if (traceContext != \"\") { var transactionHandle = newrelic.getTransaction(); transactionHandle.acceptDistributedTracePayload(traceContext); } Copy 6. Annotate and tag traces with custom attributes We recommend that you use custom attributes to decorate events with additional information for better tracing. For example, by adding key-value pairs, you can attach a user ID to trace a specific user through the call stack and review failing requests to determine if that user is having an unusually poor experience. We recommend adding custom attributes based on your use case; for example, if your instrumenting an order management system, you could add an order number custom attribute to your traces. To add custom attributes, you must first enable them for your agent, and then make an API call to record the attribute. Tip For more agent-specific information on collecting custom attributes, see Collect custom attributes sqs.sendMessage(params, function(err, data) { if (err) { res.send(\"Error: \"+ err); } else { res.send(\"Success! Message ID: \"+ data.MessageId); newrelic.addCustomAttribute(\"Message ID\", data.MessageId) } }); Copy 7. Leverage Synthetics to get a high-level view of system health In complex, distributed systems, you need to track and monitor many signals. Sometimes it may be that no one signal is concerning, yet your whole system is behaving anomalously. To get a complete picture, it's critical to analyze symptomatic data in tandem with system-level data. Synthetics allows you to interact with the entire system as an external user would, giving your teams high-level checks for performance and user experience. These external checks help you understand if the entire system is doing what you want regardless of what specific signals may indicate. For more help For more tips and best practices on distributed tracing and custom attributes, see the following: Distributed Tracing Anomaly Detection: A Faster, Easier Way to Troubleshoot Microservices Environments Introduction to distributed tracing Collect custom attributes",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08345,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " that you don&#x27;t compromise <em>your</em> mean-time-to-resolution (MTTR) or end-user experience. At <em>New</em> <em>Relic</em>, we understand these challenges inherently. In our journey, we&#x27;ve transitioned from a Ruby monolith to a multi-language distributed <em>environment</em> built on more than 300 microservices, for which we average"
      },
      "id": "603ebd8264441f02694e887f"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/iterate-measure-impact-track-metrics-after-deployments": [
    {
      "sections": [
        "Manage your containerized environment",
        "1. Update to latest Infrastructure agent and enable Kubernetes integration",
        "2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health",
        "3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment",
        "4. Monitor applications running in Kubernetes with APM",
        "Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics",
        "6. Bring teams together with dashboards tailored to specific business use cases and KPIs",
        "Learn more"
      ],
      "title": "Manage your containerized environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "71ba4468ed7d078021ccd705c78e72cfb5e92b5f",
      "image": "https://docs.newrelic.com/static/f744b0e1c8aac86e63f46a5798df58ae/c1b63/cont_environment01.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/manage-your-containerized-environment/",
      "published_at": "2021-05-05T19:53:07Z",
      "updated_at": "2021-03-16T11:20:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Widespread adoption of containers has changed the way applications are written and deployed. Container orchestration technologies such as Kubernetes are making it easier for teams to schedule, deploy, and manage their containerized applications. But challenges still exist that require teams to rethink their environment and application monitoring strategies: Challenge 1: Containers are ephemeral by nature. Knowing the containers or pod or node (host) where the application is currently running is not necessarily an indication of where it was running 5, 15, or 30 minutes ago when the issue occurred. Containers are deployed in dynamic, constantly evolving environments that require a modern monitoring approach. Challenge 2: Often, organizations are adopting containers as they break down monolithic applications into multiple microservices. This new approach introduces new complexity to the system and the sheer scale and dimensionality of containers is hard to conceptualize in an easy-to-understand format. Challenge 3: Delivering a differentiated end-user experience is a key initiative for all organizations, and containers are being adopted to help organizations release better software, faster. But with this tremendous opportunity also comes risk, because every time a new container is deployed, the cluster is impacted. Organizations need context into how infrastructure changes impact the application stack, and how changes to both the infrastructure and application stack affect the end-user experience. Getting all of this data in real-time in a digestible format is a significant challenge in distributed, containerized environments. The New Relic platform offers customers both ease of use and ease of deployment for containerized Kubernetes environments. With a few clicks you have the data and confidence to move forward intelligently. These six steps illustrate how to use the New Relic platform to manage your containers and how they are scheduled: 1. Update to latest Infrastructure agent and enable Kubernetes integration To get started, you'll need to deploy the latest Infrastructure agent onto a Kubernetes cluster with a DaemonSet. Leveraging DaemonSets is vital in dynamic, containerized environments, because when a new node is deployed or the cluster scales up or down, the DaemonSet ensures the New Relic agent is running on these new nodes. In addition, to build a complete picture of your Kubernetes environment, New Relic aggregates data from many resources, including Kube-state metrics. New Relic's “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health Once the Kubernetes integration is installed, you can access the New Relic Kubernetes cluster explorer, which offers a differentiated, intuitive way to visualize the health and performance of Kubernetes clusters. It applies advanced capabilities to filter, sort, and search for Kubernetes entities, helping teams understand the relationships and dependencies within an environment. It's a powerful and innovative solution to the challenges associated with running Kubernetes at massive scale. 3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment Above and beyond what the cluster explorer provides, New Relic provides out-of-the-box dashboards that allow customers to analyze performance and operating metrics of their Kubernetes environments. Key metrics include the number of containers, resource consumption, pending pods, out of memory (OOM) kills, and stuck pods. These metrics may be particularly relevant to Kubernetes administrators who require reliable, up-to-date information on resource consumption against pre-set thresholds. Access these dashboards directly from the cluster explorer where you can first visually explore your cluster and then use filters to drive down into specific dashboards that match that filter. 4. Monitor applications running in Kubernetes with APM One advantage of New Relic's Infrastructure agent being application-aware is that the cluster explorer is automatically aware of New Relic agents that are deployed on new applications. To fully exploit these capabilities, we recommend monitoring all existing and future containerized applications running in Kubernetes by installing the APM agent on them. Starting again from the cluster explorer, you can dig into what's happening in your applications from the context of the Kubernetes cluster. This gives you the ability to intuitively correlate your infrastructure and applications and begin analytically troubleshooting across the stack. Cloud-native applications use many interconnected services. The cluster explorer will correlate the application and link to its distributed tracings. In complex systems the ability to trace and identify pathways and latency bottlenecks are not optional. Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics If you are orchestrating an end-user facing application, New Relic allows you to view the end-to-end impact your infrastructure and services have on your customer experience. We tackle end-user management in two ways: With Synthetics, you can track application availability and performance from a wide variety of global locations visualizing if customer experience is impacted due to geography. With Browser and Mobile, we recommend monitoring such KPIs as load time and availability. Marrying end-user data with metrics and dashboards provided by the cluster explorer enables operators, administrators, app developers, and business personnel to align on common initiatives. 6. Bring teams together with dashboards tailored to specific business use cases and KPIs With dashboards, you can build custom visualizations from an end-to-end service perspective to analyze the cluster, pods, application, and end-user experience in one clean visual display. By using New Relic's dashboards, cross-organizational teams can align to share a common language and single source of truth, helping them make better decisions and drive business impact. The top two rows of this sample dashboard visualize various aspects of a Kubernetes environment while the third row illustrates valuable information regarding the applications that are deployed to this cluster. The bottom row displays the end-user viewpoint. Learn more Actively, where we enable availability monitoring for one user in one location with Synthetics Passively, where you can analyze a macro view of all users across all geographies with Browser monitoring and Mobile monitoring. Bring teams together with dashboards tailored to specific business use cases and KPIs Kubernetes Monitoring Guide",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08865,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Manage <em>your</em> containerized <em>environment</em>",
        "sections": "Manage <em>your</em> containerized <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " a complete picture of <em>your</em> Kubernetes <em>environment</em>, <em>New</em> <em>Relic</em> aggregates data from many resources, including Kube-state metrics. <em>New</em> <em>Relic</em>&#x27;s “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage"
      },
      "id": "603ebf49196a670d96a83d81"
    },
    {
      "sections": [
        "Adopt cloud services",
        "1. Identify services and technologies",
        "2. Deploy New Relic Infrastructure",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "Tip",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD pipeline integration",
        "8. AWS Lambda Monitoring"
      ],
      "title": "Adopt cloud services",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "4a8e675e4231295287e69402c8c5ff9b05a6103b",
      "image": "https://docs.newrelic.com/static/4159294d05ee078268a7b287af99a72f/c1b63/adopt_cloud.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/adopt-cloud-services/",
      "published_at": "2021-05-05T19:51:58Z",
      "updated_at": "2021-03-16T11:13:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've recently completed your cloud migration, have been using cloud-based services for a while, or have always been in the cloud, you may find yourself deploying modern, cutting-edge technologies and services. It's important to develop the ability to adopt new services easily and with confidence; innovation never stops for companies operating in the cloud, and a company's willingness to embrace new technology can give it a major competitive differentiator. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate, for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions. They may be cloud-based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations, you want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services. This allows your team to deploy faster, to adopt new services with confidence, to make better business decisions, and in general to expand its technology horizons. Here are the steps to using the New Relic Platform to monitor your modern technologies and cloud services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies and new services that might impact your organization's application environment. 2. Deploy New Relic Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified in Step One so that you can monitor your cloud services. If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations As you integrate new cloud services, you can use New Relic to monitor and report data about these services; giving you a single, comprehensive overview of your entire architecture. To configure cloud service integrations, link your Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) service provider account with New Relic. 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of an Insights dashboard with data about vendors, technologies, services, instances, and other important details for DevOps teams. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all changes to a system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all AWS Elastic Load Balancing (ALB) systems for the ALB monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD pipeline integration It's important to track deployments and the impact that code and infrastructure changes have on your end-user experience. New Relic APM deployment markers allow you to record deployments for each application. A deployment marker is an event indicating that a deployment happened. You can pair markers with metadata from your source code management (SCM) system ( including user IDs, revisions, and change logs.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root causes of immediate, long-term, or gradual degradations in your applications. Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment, as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible Puppet 8. AWS Lambda Monitoring New Relic One features an updated APM agent that is highly optimized from a cost and time perspective for ephemeral Lambda functions. Enable New Relic monitoring of AWS Lambda to to assess invocations, error rate, function duration, cold starts, and more. You can also take advantage of New Relic's Infrastructure integration with Lambda for additional reporting capabilities.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08575,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adopt <em>cloud</em> services",
        "sections": "2. Deploy <em>New</em> <em>Relic</em> Infrastructure",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " the <em>New</em> <em>Relic</em> Platform to monitor <em>your</em> modern technologies and <em>cloud</em> services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What <em>cloud</em>-based applications do I have? What are the underlying <em>cloud</em>-based services, technologies"
      },
      "id": "603ebf09e7b9d2071a2a0806"
    },
    {
      "sections": [
        "Analyze distributed systems",
        "1. Identify high-priority areas to monitor",
        "2. Instrument to get the visibility you require",
        "3. Create dashboards",
        "4. Dig deeper with distributed tracing",
        "5. Annotate message queues with distributed tracing payload APIs",
        "Example annotated message queue",
        "6. Annotate and tag traces with custom attributes",
        "Tip",
        "7. Leverage Synthetics to get a high-level view of system health",
        "For more help"
      ],
      "title": "Analyze distributed systems",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "af1cf5a80f8254c90509e562fb68a6ded2f7207f",
      "image": "https://docs.newrelic.com/static/838e50badd634f1f188cf821785f6696/2cffa/APm_distributed-tracing-catalyst-TWO.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/analyze-distributed-systems/",
      "published_at": "2021-05-05T19:54:12Z",
      "updated_at": "2021-03-16T11:07:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In a monolithic application, a simple stack trace can contain enough diagnostic data to determine the root cause of a code defect. But cloud computing and microservices have blurred the lines between software and infrastructure; in modern architectures, requests are distributed across many smaller services—often with ephemeral lifespans—hosted in both on-premise and cloud environments. Spotting code defects becomes much more complex. APM's distributed tracing automatically helps teams troubleshoot such distributed systems. Distributed traces are just one component of a well-monitored system. You need a holistic view of your distributed system, especially when tracking the root cause of a defect, as there are volumes of data to evaluate and understand. When managing a microservices environment, it's critical that you have the capability to spot bottlenecks and problem spans quickly so that you don't compromise your mean-time-to-resolution (MTTR) or end-user experience. At New Relic, we understand these challenges inherently. In our journey, we've transitioned from a Ruby monolith to a multi-language distributed environment built on more than 300 microservices, for which we average 50 code deploys a day. Such challenges inform both how we've built and how we monitor New Relic. Use the New Relic platform to translate your data into relevant insights, so you can collaborate around a common framework to build context and quickly optimize and troubleshoot your complex, distributed systems. 1. Identify high-priority areas to monitor Distributed systems are complex. Before engaging with the New Relic platform, we recommend that you identify the most critical areas of your systems to observe, and focus on instrumenting those high-priority areas first. Google's SRE handbook suggests monitoring the \"four golden signals\": traffic, latency, errors, and saturation, as shown in the following dashboard: Dashboards: Visualize key areas to monitor with dashboards. Too often, teams monitor what is either 1) easy to measure or 2) interpretable. Avoid this fallacy. When making choices about what to monitor, involve product managers and other stakeholders from your organization. Your goal is to monitor what matters to your business, not to overload your teams with noise. 2. Instrument to get the visibility you require Once you've identified your key priorities, instrument the appropriate parts of your system with the New Relic platform. Monitor your web apps with APM. See compatibility and requirements for New Relic agents and products to learn precise compatibility details for each supported language and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. Enable distributed tracing for APM, which will affect some existing APM features. If you're accustomed to using APM without distributed tracing, read the transition guide before you enable this feature. Monitor your compute resources with Infrastructure. See compatibility and requirements for New Relic Infrastructure for supported operating systems and environments. You can also instrument other products and services with on-host integrations. Monitor your front-end experience with Mobile and Browser. See compatibility and requirements for Mobile and for Browser. 3. Create dashboards Use dashboards to get an overview of your entire system and baseline performance, so you can better understand how the components work together. Insights provides a single framework for aligning disparate teams around relevant data. Approach this first build as your launching point, giving your teams something to react to as you begin to ascribe context to your system. You should continue to build and iterate your dashboards as you analyze, troubleshoot, and optimize your distributed system. Even after you have a basic understanding of your system, use dashboards to inform the decisions you make going forward. Dashboards provide central repository of truth, allowing all stakeholders to build context about the health of your system. Here is an example of a query that displays the slowest applications. SELECT percentile(duration, 99) as 'Slowest duration' FROM Transaction FACET name Copy Using this query you can focus on the slowest application to dig deeper: After running the query, dashboards displays the slowest durations. 4. Dig deeper with distributed tracing After you have basic instrumentation and contextual dashboards in place, you can begin to dig deeper to troubleshoot or optimize your system. A differentiated feature in New Relic One's Global Distributed Tracing is that you can come in with vague context for what you're investigating and search across all accounts and traces to get down to the actual user interactions that have those attributes somewhere in their trace. You no longer must begin with the application or specific entity to search for traces that include that application. For example, start with an analysis of your complex service calls, using the distributed tracing UI to: View a scatter plot chart showing the frequency, duration, and other facets of your distributed traces Group traces by root entry, service, service entry, or traces with errors View a trace list Filter specific traces to meet certain parameters You'll likely discover that you want to take the analysis one step further by annotating your traces with information that adds context to your troubleshooting, like User ID. You can do this in New Relic using custom attributes. one.newrelic.com > APM > Distributed tracing: use the distributed tracing UI to monitor and analyze modern distributed systems. 5. Annotate message queues with distributed tracing payload APIs To see connections between services in some environments—for example, in a system that relies heavily on queues—you may need to do some manual instrumentation using the distributed tracing payload APIs to ensure you're propagating the payload. This gives agents the necessary context to create spans with the right correlation; you'll see end-to-end traces for all linked services, including those that cross through the queue. Example annotated message queue For example: Start a transaction. Create the distributed tracing payload on the producer service within a New Relic transaction. As part of the message, add the distributed tracing payload. ​​newrelic.setTransactionName(\"Send Message\") // Create SQS service object var sqs = new AWS.SQS({apiVersion: '2012-11-05'}); var transactionHandle = newrelic.getTransaction(); var payload = transactionHandle.createDistributedTracePayload(); var jsonPayload = payload.text(); //add the jsonPayload as a MessageAttribute var params = { DelaySeconds: 10, MessageAttributes: { \"Testing\": { DataType: \"String\", StringValue: \"123\" }, \"TraceContext\": { DataType: \"String\", StringValue: jsonPayload } }, MessageBody: \"Testing 123\", QueueUrl: \"https://sqs.us-west-2.amazonaws.com/408155283954/sqs-testing\" }; Copy With the context of a transaction, receive the payload on the consumer service. sqs.receiveMessage(params, function(err, data) { if (err) { console.log(\"Receive Error\", err); } else if (data && data.Messages) { console.log(\"trace context:\") var traceContext = data.Messages[0].MessageAttributes.TraceContext.StringValue; if (traceContext != \"\") { var transactionHandle = newrelic.getTransaction(); transactionHandle.acceptDistributedTracePayload(traceContext); } Copy 6. Annotate and tag traces with custom attributes We recommend that you use custom attributes to decorate events with additional information for better tracing. For example, by adding key-value pairs, you can attach a user ID to trace a specific user through the call stack and review failing requests to determine if that user is having an unusually poor experience. We recommend adding custom attributes based on your use case; for example, if your instrumenting an order management system, you could add an order number custom attribute to your traces. To add custom attributes, you must first enable them for your agent, and then make an API call to record the attribute. Tip For more agent-specific information on collecting custom attributes, see Collect custom attributes sqs.sendMessage(params, function(err, data) { if (err) { res.send(\"Error: \"+ err); } else { res.send(\"Success! Message ID: \"+ data.MessageId); newrelic.addCustomAttribute(\"Message ID\", data.MessageId) } }); Copy 7. Leverage Synthetics to get a high-level view of system health In complex, distributed systems, you need to track and monitor many signals. Sometimes it may be that no one signal is concerning, yet your whole system is behaving anomalously. To get a complete picture, it's critical to analyze symptomatic data in tandem with system-level data. Synthetics allows you to interact with the entire system as an external user would, giving your teams high-level checks for performance and user experience. These external checks help you understand if the entire system is doing what you want regardless of what specific signals may indicate. For more help For more tips and best practices on distributed tracing and custom attributes, see the following: Distributed Tracing Anomaly Detection: A Faster, Easier Way to Troubleshoot Microservices Environments Introduction to distributed tracing Collect custom attributes",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08344,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " that you don&#x27;t compromise <em>your</em> mean-time-to-resolution (MTTR) or end-user experience. At <em>New</em> <em>Relic</em>, we understand these challenges inherently. In our journey, we&#x27;ve transitioned from a Ruby monolith to a multi-language distributed <em>environment</em> built on more than 300 microservices, for which we average"
      },
      "id": "603ebd8264441f02694e887f"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/manage-your-containerized-environment": [
    {
      "sections": [
        "Adopt cloud services",
        "1. Identify services and technologies",
        "2. Deploy New Relic Infrastructure",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "Tip",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD pipeline integration",
        "8. AWS Lambda Monitoring"
      ],
      "title": "Adopt cloud services",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "4a8e675e4231295287e69402c8c5ff9b05a6103b",
      "image": "https://docs.newrelic.com/static/4159294d05ee078268a7b287af99a72f/c1b63/adopt_cloud.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/adopt-cloud-services/",
      "published_at": "2021-05-05T19:51:58Z",
      "updated_at": "2021-03-16T11:13:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've recently completed your cloud migration, have been using cloud-based services for a while, or have always been in the cloud, you may find yourself deploying modern, cutting-edge technologies and services. It's important to develop the ability to adopt new services easily and with confidence; innovation never stops for companies operating in the cloud, and a company's willingness to embrace new technology can give it a major competitive differentiator. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate, for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions. They may be cloud-based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations, you want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services. This allows your team to deploy faster, to adopt new services with confidence, to make better business decisions, and in general to expand its technology horizons. Here are the steps to using the New Relic Platform to monitor your modern technologies and cloud services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies and new services that might impact your organization's application environment. 2. Deploy New Relic Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified in Step One so that you can monitor your cloud services. If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations As you integrate new cloud services, you can use New Relic to monitor and report data about these services; giving you a single, comprehensive overview of your entire architecture. To configure cloud service integrations, link your Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) service provider account with New Relic. 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of an Insights dashboard with data about vendors, technologies, services, instances, and other important details for DevOps teams. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all changes to a system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all AWS Elastic Load Balancing (ALB) systems for the ALB monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD pipeline integration It's important to track deployments and the impact that code and infrastructure changes have on your end-user experience. New Relic APM deployment markers allow you to record deployments for each application. A deployment marker is an event indicating that a deployment happened. You can pair markers with metadata from your source code management (SCM) system ( including user IDs, revisions, and change logs.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root causes of immediate, long-term, or gradual degradations in your applications. Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment, as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible Puppet 8. AWS Lambda Monitoring New Relic One features an updated APM agent that is highly optimized from a cost and time perspective for ephemeral Lambda functions. Enable New Relic monitoring of AWS Lambda to to assess invocations, error rate, function duration, cold starts, and more. You can also take advantage of New Relic's Infrastructure integration with Lambda for additional reporting capabilities.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08575,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adopt <em>cloud</em> services",
        "sections": "2. Deploy <em>New</em> <em>Relic</em> Infrastructure",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " the <em>New</em> <em>Relic</em> Platform to monitor <em>your</em> modern technologies and <em>cloud</em> services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What <em>cloud</em>-based applications do I have? What are the underlying <em>cloud</em>-based services, technologies"
      },
      "id": "603ebf09e7b9d2071a2a0806"
    },
    {
      "sections": [
        "Analyze distributed systems",
        "1. Identify high-priority areas to monitor",
        "2. Instrument to get the visibility you require",
        "3. Create dashboards",
        "4. Dig deeper with distributed tracing",
        "5. Annotate message queues with distributed tracing payload APIs",
        "Example annotated message queue",
        "6. Annotate and tag traces with custom attributes",
        "Tip",
        "7. Leverage Synthetics to get a high-level view of system health",
        "For more help"
      ],
      "title": "Analyze distributed systems",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "af1cf5a80f8254c90509e562fb68a6ded2f7207f",
      "image": "https://docs.newrelic.com/static/838e50badd634f1f188cf821785f6696/2cffa/APm_distributed-tracing-catalyst-TWO.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/analyze-distributed-systems/",
      "published_at": "2021-05-05T19:54:12Z",
      "updated_at": "2021-03-16T11:07:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In a monolithic application, a simple stack trace can contain enough diagnostic data to determine the root cause of a code defect. But cloud computing and microservices have blurred the lines between software and infrastructure; in modern architectures, requests are distributed across many smaller services—often with ephemeral lifespans—hosted in both on-premise and cloud environments. Spotting code defects becomes much more complex. APM's distributed tracing automatically helps teams troubleshoot such distributed systems. Distributed traces are just one component of a well-monitored system. You need a holistic view of your distributed system, especially when tracking the root cause of a defect, as there are volumes of data to evaluate and understand. When managing a microservices environment, it's critical that you have the capability to spot bottlenecks and problem spans quickly so that you don't compromise your mean-time-to-resolution (MTTR) or end-user experience. At New Relic, we understand these challenges inherently. In our journey, we've transitioned from a Ruby monolith to a multi-language distributed environment built on more than 300 microservices, for which we average 50 code deploys a day. Such challenges inform both how we've built and how we monitor New Relic. Use the New Relic platform to translate your data into relevant insights, so you can collaborate around a common framework to build context and quickly optimize and troubleshoot your complex, distributed systems. 1. Identify high-priority areas to monitor Distributed systems are complex. Before engaging with the New Relic platform, we recommend that you identify the most critical areas of your systems to observe, and focus on instrumenting those high-priority areas first. Google's SRE handbook suggests monitoring the \"four golden signals\": traffic, latency, errors, and saturation, as shown in the following dashboard: Dashboards: Visualize key areas to monitor with dashboards. Too often, teams monitor what is either 1) easy to measure or 2) interpretable. Avoid this fallacy. When making choices about what to monitor, involve product managers and other stakeholders from your organization. Your goal is to monitor what matters to your business, not to overload your teams with noise. 2. Instrument to get the visibility you require Once you've identified your key priorities, instrument the appropriate parts of your system with the New Relic platform. Monitor your web apps with APM. See compatibility and requirements for New Relic agents and products to learn precise compatibility details for each supported language and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. Enable distributed tracing for APM, which will affect some existing APM features. If you're accustomed to using APM without distributed tracing, read the transition guide before you enable this feature. Monitor your compute resources with Infrastructure. See compatibility and requirements for New Relic Infrastructure for supported operating systems and environments. You can also instrument other products and services with on-host integrations. Monitor your front-end experience with Mobile and Browser. See compatibility and requirements for Mobile and for Browser. 3. Create dashboards Use dashboards to get an overview of your entire system and baseline performance, so you can better understand how the components work together. Insights provides a single framework for aligning disparate teams around relevant data. Approach this first build as your launching point, giving your teams something to react to as you begin to ascribe context to your system. You should continue to build and iterate your dashboards as you analyze, troubleshoot, and optimize your distributed system. Even after you have a basic understanding of your system, use dashboards to inform the decisions you make going forward. Dashboards provide central repository of truth, allowing all stakeholders to build context about the health of your system. Here is an example of a query that displays the slowest applications. SELECT percentile(duration, 99) as 'Slowest duration' FROM Transaction FACET name Copy Using this query you can focus on the slowest application to dig deeper: After running the query, dashboards displays the slowest durations. 4. Dig deeper with distributed tracing After you have basic instrumentation and contextual dashboards in place, you can begin to dig deeper to troubleshoot or optimize your system. A differentiated feature in New Relic One's Global Distributed Tracing is that you can come in with vague context for what you're investigating and search across all accounts and traces to get down to the actual user interactions that have those attributes somewhere in their trace. You no longer must begin with the application or specific entity to search for traces that include that application. For example, start with an analysis of your complex service calls, using the distributed tracing UI to: View a scatter plot chart showing the frequency, duration, and other facets of your distributed traces Group traces by root entry, service, service entry, or traces with errors View a trace list Filter specific traces to meet certain parameters You'll likely discover that you want to take the analysis one step further by annotating your traces with information that adds context to your troubleshooting, like User ID. You can do this in New Relic using custom attributes. one.newrelic.com > APM > Distributed tracing: use the distributed tracing UI to monitor and analyze modern distributed systems. 5. Annotate message queues with distributed tracing payload APIs To see connections between services in some environments—for example, in a system that relies heavily on queues—you may need to do some manual instrumentation using the distributed tracing payload APIs to ensure you're propagating the payload. This gives agents the necessary context to create spans with the right correlation; you'll see end-to-end traces for all linked services, including those that cross through the queue. Example annotated message queue For example: Start a transaction. Create the distributed tracing payload on the producer service within a New Relic transaction. As part of the message, add the distributed tracing payload. ​​newrelic.setTransactionName(\"Send Message\") // Create SQS service object var sqs = new AWS.SQS({apiVersion: '2012-11-05'}); var transactionHandle = newrelic.getTransaction(); var payload = transactionHandle.createDistributedTracePayload(); var jsonPayload = payload.text(); //add the jsonPayload as a MessageAttribute var params = { DelaySeconds: 10, MessageAttributes: { \"Testing\": { DataType: \"String\", StringValue: \"123\" }, \"TraceContext\": { DataType: \"String\", StringValue: jsonPayload } }, MessageBody: \"Testing 123\", QueueUrl: \"https://sqs.us-west-2.amazonaws.com/408155283954/sqs-testing\" }; Copy With the context of a transaction, receive the payload on the consumer service. sqs.receiveMessage(params, function(err, data) { if (err) { console.log(\"Receive Error\", err); } else if (data && data.Messages) { console.log(\"trace context:\") var traceContext = data.Messages[0].MessageAttributes.TraceContext.StringValue; if (traceContext != \"\") { var transactionHandle = newrelic.getTransaction(); transactionHandle.acceptDistributedTracePayload(traceContext); } Copy 6. Annotate and tag traces with custom attributes We recommend that you use custom attributes to decorate events with additional information for better tracing. For example, by adding key-value pairs, you can attach a user ID to trace a specific user through the call stack and review failing requests to determine if that user is having an unusually poor experience. We recommend adding custom attributes based on your use case; for example, if your instrumenting an order management system, you could add an order number custom attribute to your traces. To add custom attributes, you must first enable them for your agent, and then make an API call to record the attribute. Tip For more agent-specific information on collecting custom attributes, see Collect custom attributes sqs.sendMessage(params, function(err, data) { if (err) { res.send(\"Error: \"+ err); } else { res.send(\"Success! Message ID: \"+ data.MessageId); newrelic.addCustomAttribute(\"Message ID\", data.MessageId) } }); Copy 7. Leverage Synthetics to get a high-level view of system health In complex, distributed systems, you need to track and monitor many signals. Sometimes it may be that no one signal is concerning, yet your whole system is behaving anomalously. To get a complete picture, it's critical to analyze symptomatic data in tandem with system-level data. Synthetics allows you to interact with the entire system as an external user would, giving your teams high-level checks for performance and user experience. These external checks help you understand if the entire system is doing what you want regardless of what specific signals may indicate. For more help For more tips and best practices on distributed tracing and custom attributes, see the following: Distributed Tracing Anomaly Detection: A Faster, Easier Way to Troubleshoot Microservices Environments Introduction to distributed tracing Collect custom attributes",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08344,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " that you don&#x27;t compromise <em>your</em> mean-time-to-resolution (MTTR) or end-user experience. At <em>New</em> <em>Relic</em>, we understand these challenges inherently. In our journey, we&#x27;ve transitioned from a Ruby monolith to a multi-language distributed <em>environment</em> built on more than 300 microservices, for which we average"
      },
      "id": "603ebd8264441f02694e887f"
    },
    {
      "sections": [
        "Optimize cloud architecture and spend to continuously improve your modern cloud environment",
        "1. Instrument your application and cloud environment",
        "2. Create dashboards to display baseline infrastructure metrics; include AWS budgets if available",
        "Create dashboards for each level of your organization",
        "3. Identify resources for optimization",
        "4. Optional: Set up alerts",
        "Baseline queries",
        "Lean More"
      ],
      "title": "Optimize cloud architecture and spend to continuously improve your modern cloud environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "a39e5f962beb7ac37d876516d0d6ddb03f3888ec",
      "image": "https://docs.newrelic.com/static/3e068d910ba2857ad60a1b9c4af0a52d/4d383/image-1.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/optimize-cloud-architecture-spend-continuously-improve-your-modern-cloud-environment/",
      "published_at": "2021-05-05T19:51:57Z",
      "updated_at": "2021-03-16T11:05:42Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In the cloud, it's important to look regularly and closely at how your applications and services are architected and utilized. It's the best way to identify opportunities that will let you right-size your instances, fine tune your databases, modify your storage usage, better configure your load balancers, or even re-architect your applications. For example, if you have a set of 20 instances all running at 10% CPU usage, you might consider using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud utilization and spend will help you optimize your environment and save money quickly. Optimizing your cloud architecture has three main goals: Improve performance, availability, and end-user experience by taking better advantage of cloud services Optimize your cloud spend, striking the delicate balance between cost and performance Capture business and technical metrics that help justify your current cloud spend that can be referenced as justification for a larger cloud budget as growth dictates In this tutorial, we'll show you how to use the New Relic platform to capture all the data you should leverage to optimize your cloud architecture and spend. 1. Instrument your application and cloud environment Make sure the following products and integrations are instrumented: Instrument Details Install Infrastructure Instrument infrastructure: If you haven't already done so, review the requirements for the Infrastructure agent. Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. After you've installed the Infrastructure agent on your host(s), you'll immediately have access to the broad spectrum of metrics the agent collects out-of-the-box. Install the APM agent Instrument your applications with APM. Doing so will let you monitor how your applications are performing while you are optimizing the underlying cloud services. That way, you can confirm that your changes to the infrastructure are in fact improving application performance. Configure the AWS integration New Relic Infrastructure's Amazon integrations let you monitor your AWS data in several New Relic products, including Infrastructure, dashboards, and New Relic Alerts. Connect AWS Billing If you are hosted in an AWS environment, New Relic can help you monitor your cloud spend with our AWS Billing integration. To leverage New Relic's AWS Billing integration, follow the procedures in the Connect AWS Billing documentation 2. Create dashboards to display baseline infrastructure metrics; include AWS budgets if available Dashboards lets you write powerful custom queries about your data and visualize the results in widgets displayed on a common dashboard. You can also feed the results of your queries directly into New Relic Alerts, where you can get immediate notifications on any deviation identified. For this step, you should display baseline infrastructure metrics related to performance and usage (CPU, memory, disk, database, etc.). Include AWS Budgets if available. To get you started, here are ways to use Insights dashboards to visualize your AWS cloud utilization and spend data: This dashboard shows data broken out by the applications and budgets you set up in the AWS budgeting area. Create individual dashboards for each application, and then collect those dashboards into a single “data app,” as shown here. This AWS Production Overview data app displays a set of widgets relevant to an AWS production budget. Data apps are great for presentations where you want to step through a series of topics and also provide a clear overview of an entire environment or service. Create dashboards for each level of your organization Whether you're a developer, operator, or executive, having information about your cloud utilization can help you optimize your cloud environment: Developers: Understanding what applications currently cost can help developers configure applications to use more services more efficiently. For example, could developers cut cloud costs using AWS Lambda or properly sized instances? Operators: Monitoring application utilization allows operators to catch possible overruns due to mis-configured services. For example, is the ops team's auto-scaling configuration scaling down properly? Executives: An overall view of both fore-casted and actual cloud spend, for individual applications, per region, and overall totals, can help executives make better business decisions. Use New Relic to keep track of your cloud spend, and make sure your teams get alerted immediately when you exceed thresholds. 3. Identify resources for optimization This step shows you how to use the metrics New Relic has captured to determine which resources to optimize. In the sample dashboard above, the CPU-usage widget on the left reveals that this application uses many instances sizes. Note that the “c4.xlarge” instance (in coral) consistently consumes only around 20% CPU capacity. However, when you analyze the c4.xlarge Memory usage in the center widget (light green), you'll see that memory usage for this instance ranges from 20% to 80%. This suggests that the application is more memory-intensive than CPU-intensive. In this case, the instance type should be changed from a compute-optimized instance to one that is memory-optimized. (Note: the chart on the right of the dashboard can be used to monitor the application's average response time as you make these optimizations.) This is just one example of how to identify cloud-based resources that could be candidates for optimization. Now that you've identified architecture for optimization, go ahead and do so. Whether you right-size your instances, fine tune your databases, modify your storage usage, better configure your load balancers, or even re-architect your applications, in the end your goal is to be able to compare your new, optimized architecture against the baselines you captured in Step 2. For more about baselines please review the Establish Objectives & Baselines tutorial. 4. Optional: Set up alerts You can create an alert condition for NRQL queries. Be sure to reference the complete documentation as needed. In the data app for the AWS production budget introduced in Step 2, this was one of the widgets: Here is the query that we used to create that widget: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = '[Your Cloud Budget]' Copy If you can write queries on your data and show them in Insights, then you can easily use them to generate Alert conditions. Baseline queries New Relic also lets you write “baseline queries” against your data. These are queriesy you write without setting hard limits on the results. Rather, you let New Relic Applied Intelligence “machine-learn” your performance data, and then alert you when your data strays too far outside of your baseline numbers. To create a baseline query, head over the the Alert console, go into Alert policies, and add a New alert policy. Then follow these steps: Create alert policy. Give your policy a concise and descriptive name and select an Incident Preference. Then select Create alert policy. Create a condition. Select NRQL Define your query, and decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider at the bottom of the chart either increases or decreases the gray band around your budget threshold (the blue line). The setting shown would have resulted in zero violations based on recent data, and that is what you're looking for. However, if that blue line spikes up or down out of the gray band, New Relic will immediately notify you. Using New Relic Applied Intelligence is a great way to help you proactively learn about your cloud spending or about any of your performance data. Lean More For a quick primer on the New Relic platform, check out Learn the New Relic Digital Intelligence Platform in 30 Minutes or Less. Review the Proactive alerting and incident orchestration tutorial for a deeper dive on some of the best practices outlined above.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.0825,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "<em>Optimize</em> <em>cloud</em> architecture and spend to continuously improve <em>your</em> modern <em>cloud</em> <em>environment</em>",
        "sections": "<em>Optimize</em> <em>cloud</em> architecture and spend to continuously improve <em>your</em> modern <em>cloud</em> <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " business and technical metrics that help justify <em>your</em> current <em>cloud</em> spend that can be referenced as justification for a larger <em>cloud</em> budget as growth dictates In this tutorial, we&#x27;ll show you how to use the <em>New</em> <em>Relic</em> platform to capture all the data you should leverage to <em>optimize</em> <em>your</em> <em>cloud</em>"
      },
      "id": "603ebf4964441f4bfa4e8841"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/migrate-microservices": [
    {
      "sections": [
        "Manage your containerized environment",
        "1. Update to latest Infrastructure agent and enable Kubernetes integration",
        "2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health",
        "3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment",
        "4. Monitor applications running in Kubernetes with APM",
        "Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics",
        "6. Bring teams together with dashboards tailored to specific business use cases and KPIs",
        "Learn more"
      ],
      "title": "Manage your containerized environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "71ba4468ed7d078021ccd705c78e72cfb5e92b5f",
      "image": "https://docs.newrelic.com/static/f744b0e1c8aac86e63f46a5798df58ae/c1b63/cont_environment01.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/manage-your-containerized-environment/",
      "published_at": "2021-05-05T19:53:07Z",
      "updated_at": "2021-03-16T11:20:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Widespread adoption of containers has changed the way applications are written and deployed. Container orchestration technologies such as Kubernetes are making it easier for teams to schedule, deploy, and manage their containerized applications. But challenges still exist that require teams to rethink their environment and application monitoring strategies: Challenge 1: Containers are ephemeral by nature. Knowing the containers or pod or node (host) where the application is currently running is not necessarily an indication of where it was running 5, 15, or 30 minutes ago when the issue occurred. Containers are deployed in dynamic, constantly evolving environments that require a modern monitoring approach. Challenge 2: Often, organizations are adopting containers as they break down monolithic applications into multiple microservices. This new approach introduces new complexity to the system and the sheer scale and dimensionality of containers is hard to conceptualize in an easy-to-understand format. Challenge 3: Delivering a differentiated end-user experience is a key initiative for all organizations, and containers are being adopted to help organizations release better software, faster. But with this tremendous opportunity also comes risk, because every time a new container is deployed, the cluster is impacted. Organizations need context into how infrastructure changes impact the application stack, and how changes to both the infrastructure and application stack affect the end-user experience. Getting all of this data in real-time in a digestible format is a significant challenge in distributed, containerized environments. The New Relic platform offers customers both ease of use and ease of deployment for containerized Kubernetes environments. With a few clicks you have the data and confidence to move forward intelligently. These six steps illustrate how to use the New Relic platform to manage your containers and how they are scheduled: 1. Update to latest Infrastructure agent and enable Kubernetes integration To get started, you'll need to deploy the latest Infrastructure agent onto a Kubernetes cluster with a DaemonSet. Leveraging DaemonSets is vital in dynamic, containerized environments, because when a new node is deployed or the cluster scales up or down, the DaemonSet ensures the New Relic agent is running on these new nodes. In addition, to build a complete picture of your Kubernetes environment, New Relic aggregates data from many resources, including Kube-state metrics. New Relic's “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health Once the Kubernetes integration is installed, you can access the New Relic Kubernetes cluster explorer, which offers a differentiated, intuitive way to visualize the health and performance of Kubernetes clusters. It applies advanced capabilities to filter, sort, and search for Kubernetes entities, helping teams understand the relationships and dependencies within an environment. It's a powerful and innovative solution to the challenges associated with running Kubernetes at massive scale. 3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment Above and beyond what the cluster explorer provides, New Relic provides out-of-the-box dashboards that allow customers to analyze performance and operating metrics of their Kubernetes environments. Key metrics include the number of containers, resource consumption, pending pods, out of memory (OOM) kills, and stuck pods. These metrics may be particularly relevant to Kubernetes administrators who require reliable, up-to-date information on resource consumption against pre-set thresholds. Access these dashboards directly from the cluster explorer where you can first visually explore your cluster and then use filters to drive down into specific dashboards that match that filter. 4. Monitor applications running in Kubernetes with APM One advantage of New Relic's Infrastructure agent being application-aware is that the cluster explorer is automatically aware of New Relic agents that are deployed on new applications. To fully exploit these capabilities, we recommend monitoring all existing and future containerized applications running in Kubernetes by installing the APM agent on them. Starting again from the cluster explorer, you can dig into what's happening in your applications from the context of the Kubernetes cluster. This gives you the ability to intuitively correlate your infrastructure and applications and begin analytically troubleshooting across the stack. Cloud-native applications use many interconnected services. The cluster explorer will correlate the application and link to its distributed tracings. In complex systems the ability to trace and identify pathways and latency bottlenecks are not optional. Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics If you are orchestrating an end-user facing application, New Relic allows you to view the end-to-end impact your infrastructure and services have on your customer experience. We tackle end-user management in two ways: With Synthetics, you can track application availability and performance from a wide variety of global locations visualizing if customer experience is impacted due to geography. With Browser and Mobile, we recommend monitoring such KPIs as load time and availability. Marrying end-user data with metrics and dashboards provided by the cluster explorer enables operators, administrators, app developers, and business personnel to align on common initiatives. 6. Bring teams together with dashboards tailored to specific business use cases and KPIs With dashboards, you can build custom visualizations from an end-to-end service perspective to analyze the cluster, pods, application, and end-user experience in one clean visual display. By using New Relic's dashboards, cross-organizational teams can align to share a common language and single source of truth, helping them make better decisions and drive business impact. The top two rows of this sample dashboard visualize various aspects of a Kubernetes environment while the third row illustrates valuable information regarding the applications that are deployed to this cluster. The bottom row displays the end-user viewpoint. Learn more Actively, where we enable availability monitoring for one user in one location with Synthetics Passively, where you can analyze a macro view of all users across all geographies with Browser monitoring and Mobile monitoring. Bring teams together with dashboards tailored to specific business use cases and KPIs Kubernetes Monitoring Guide",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08864,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Manage <em>your</em> containerized <em>environment</em>",
        "sections": "Manage <em>your</em> containerized <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " a complete picture of <em>your</em> Kubernetes <em>environment</em>, <em>New</em> <em>Relic</em> aggregates data from many resources, including Kube-state metrics. <em>New</em> <em>Relic</em>&#x27;s “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage"
      },
      "id": "603ebf49196a670d96a83d81"
    },
    {
      "sections": [
        "Adopt cloud services",
        "1. Identify services and technologies",
        "2. Deploy New Relic Infrastructure",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "Tip",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD pipeline integration",
        "8. AWS Lambda Monitoring"
      ],
      "title": "Adopt cloud services",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "4a8e675e4231295287e69402c8c5ff9b05a6103b",
      "image": "https://docs.newrelic.com/static/4159294d05ee078268a7b287af99a72f/c1b63/adopt_cloud.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/adopt-cloud-services/",
      "published_at": "2021-05-05T19:51:58Z",
      "updated_at": "2021-03-16T11:13:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've recently completed your cloud migration, have been using cloud-based services for a while, or have always been in the cloud, you may find yourself deploying modern, cutting-edge technologies and services. It's important to develop the ability to adopt new services easily and with confidence; innovation never stops for companies operating in the cloud, and a company's willingness to embrace new technology can give it a major competitive differentiator. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate, for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions. They may be cloud-based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations, you want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services. This allows your team to deploy faster, to adopt new services with confidence, to make better business decisions, and in general to expand its technology horizons. Here are the steps to using the New Relic Platform to monitor your modern technologies and cloud services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies and new services that might impact your organization's application environment. 2. Deploy New Relic Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified in Step One so that you can monitor your cloud services. If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations As you integrate new cloud services, you can use New Relic to monitor and report data about these services; giving you a single, comprehensive overview of your entire architecture. To configure cloud service integrations, link your Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) service provider account with New Relic. 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of an Insights dashboard with data about vendors, technologies, services, instances, and other important details for DevOps teams. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all changes to a system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all AWS Elastic Load Balancing (ALB) systems for the ALB monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD pipeline integration It's important to track deployments and the impact that code and infrastructure changes have on your end-user experience. New Relic APM deployment markers allow you to record deployments for each application. A deployment marker is an event indicating that a deployment happened. You can pair markers with metadata from your source code management (SCM) system ( including user IDs, revisions, and change logs.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root causes of immediate, long-term, or gradual degradations in your applications. Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment, as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible Puppet 8. AWS Lambda Monitoring New Relic One features an updated APM agent that is highly optimized from a cost and time perspective for ephemeral Lambda functions. Enable New Relic monitoring of AWS Lambda to to assess invocations, error rate, function duration, cold starts, and more. You can also take advantage of New Relic's Infrastructure integration with Lambda for additional reporting capabilities.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08575,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adopt <em>cloud</em> services",
        "sections": "2. Deploy <em>New</em> <em>Relic</em> Infrastructure",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " the <em>New</em> <em>Relic</em> Platform to monitor <em>your</em> modern technologies and <em>cloud</em> services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What <em>cloud</em>-based applications do I have? What are the underlying <em>cloud</em>-based services, technologies"
      },
      "id": "603ebf09e7b9d2071a2a0806"
    },
    {
      "sections": [
        "Analyze distributed systems",
        "1. Identify high-priority areas to monitor",
        "2. Instrument to get the visibility you require",
        "3. Create dashboards",
        "4. Dig deeper with distributed tracing",
        "5. Annotate message queues with distributed tracing payload APIs",
        "Example annotated message queue",
        "6. Annotate and tag traces with custom attributes",
        "Tip",
        "7. Leverage Synthetics to get a high-level view of system health",
        "For more help"
      ],
      "title": "Analyze distributed systems",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "af1cf5a80f8254c90509e562fb68a6ded2f7207f",
      "image": "https://docs.newrelic.com/static/838e50badd634f1f188cf821785f6696/2cffa/APm_distributed-tracing-catalyst-TWO.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/analyze-distributed-systems/",
      "published_at": "2021-05-05T19:54:12Z",
      "updated_at": "2021-03-16T11:07:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In a monolithic application, a simple stack trace can contain enough diagnostic data to determine the root cause of a code defect. But cloud computing and microservices have blurred the lines between software and infrastructure; in modern architectures, requests are distributed across many smaller services—often with ephemeral lifespans—hosted in both on-premise and cloud environments. Spotting code defects becomes much more complex. APM's distributed tracing automatically helps teams troubleshoot such distributed systems. Distributed traces are just one component of a well-monitored system. You need a holistic view of your distributed system, especially when tracking the root cause of a defect, as there are volumes of data to evaluate and understand. When managing a microservices environment, it's critical that you have the capability to spot bottlenecks and problem spans quickly so that you don't compromise your mean-time-to-resolution (MTTR) or end-user experience. At New Relic, we understand these challenges inherently. In our journey, we've transitioned from a Ruby monolith to a multi-language distributed environment built on more than 300 microservices, for which we average 50 code deploys a day. Such challenges inform both how we've built and how we monitor New Relic. Use the New Relic platform to translate your data into relevant insights, so you can collaborate around a common framework to build context and quickly optimize and troubleshoot your complex, distributed systems. 1. Identify high-priority areas to monitor Distributed systems are complex. Before engaging with the New Relic platform, we recommend that you identify the most critical areas of your systems to observe, and focus on instrumenting those high-priority areas first. Google's SRE handbook suggests monitoring the \"four golden signals\": traffic, latency, errors, and saturation, as shown in the following dashboard: Dashboards: Visualize key areas to monitor with dashboards. Too often, teams monitor what is either 1) easy to measure or 2) interpretable. Avoid this fallacy. When making choices about what to monitor, involve product managers and other stakeholders from your organization. Your goal is to monitor what matters to your business, not to overload your teams with noise. 2. Instrument to get the visibility you require Once you've identified your key priorities, instrument the appropriate parts of your system with the New Relic platform. Monitor your web apps with APM. See compatibility and requirements for New Relic agents and products to learn precise compatibility details for each supported language and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. Enable distributed tracing for APM, which will affect some existing APM features. If you're accustomed to using APM without distributed tracing, read the transition guide before you enable this feature. Monitor your compute resources with Infrastructure. See compatibility and requirements for New Relic Infrastructure for supported operating systems and environments. You can also instrument other products and services with on-host integrations. Monitor your front-end experience with Mobile and Browser. See compatibility and requirements for Mobile and for Browser. 3. Create dashboards Use dashboards to get an overview of your entire system and baseline performance, so you can better understand how the components work together. Insights provides a single framework for aligning disparate teams around relevant data. Approach this first build as your launching point, giving your teams something to react to as you begin to ascribe context to your system. You should continue to build and iterate your dashboards as you analyze, troubleshoot, and optimize your distributed system. Even after you have a basic understanding of your system, use dashboards to inform the decisions you make going forward. Dashboards provide central repository of truth, allowing all stakeholders to build context about the health of your system. Here is an example of a query that displays the slowest applications. SELECT percentile(duration, 99) as 'Slowest duration' FROM Transaction FACET name Copy Using this query you can focus on the slowest application to dig deeper: After running the query, dashboards displays the slowest durations. 4. Dig deeper with distributed tracing After you have basic instrumentation and contextual dashboards in place, you can begin to dig deeper to troubleshoot or optimize your system. A differentiated feature in New Relic One's Global Distributed Tracing is that you can come in with vague context for what you're investigating and search across all accounts and traces to get down to the actual user interactions that have those attributes somewhere in their trace. You no longer must begin with the application or specific entity to search for traces that include that application. For example, start with an analysis of your complex service calls, using the distributed tracing UI to: View a scatter plot chart showing the frequency, duration, and other facets of your distributed traces Group traces by root entry, service, service entry, or traces with errors View a trace list Filter specific traces to meet certain parameters You'll likely discover that you want to take the analysis one step further by annotating your traces with information that adds context to your troubleshooting, like User ID. You can do this in New Relic using custom attributes. one.newrelic.com > APM > Distributed tracing: use the distributed tracing UI to monitor and analyze modern distributed systems. 5. Annotate message queues with distributed tracing payload APIs To see connections between services in some environments—for example, in a system that relies heavily on queues—you may need to do some manual instrumentation using the distributed tracing payload APIs to ensure you're propagating the payload. This gives agents the necessary context to create spans with the right correlation; you'll see end-to-end traces for all linked services, including those that cross through the queue. Example annotated message queue For example: Start a transaction. Create the distributed tracing payload on the producer service within a New Relic transaction. As part of the message, add the distributed tracing payload. ​​newrelic.setTransactionName(\"Send Message\") // Create SQS service object var sqs = new AWS.SQS({apiVersion: '2012-11-05'}); var transactionHandle = newrelic.getTransaction(); var payload = transactionHandle.createDistributedTracePayload(); var jsonPayload = payload.text(); //add the jsonPayload as a MessageAttribute var params = { DelaySeconds: 10, MessageAttributes: { \"Testing\": { DataType: \"String\", StringValue: \"123\" }, \"TraceContext\": { DataType: \"String\", StringValue: jsonPayload } }, MessageBody: \"Testing 123\", QueueUrl: \"https://sqs.us-west-2.amazonaws.com/408155283954/sqs-testing\" }; Copy With the context of a transaction, receive the payload on the consumer service. sqs.receiveMessage(params, function(err, data) { if (err) { console.log(\"Receive Error\", err); } else if (data && data.Messages) { console.log(\"trace context:\") var traceContext = data.Messages[0].MessageAttributes.TraceContext.StringValue; if (traceContext != \"\") { var transactionHandle = newrelic.getTransaction(); transactionHandle.acceptDistributedTracePayload(traceContext); } Copy 6. Annotate and tag traces with custom attributes We recommend that you use custom attributes to decorate events with additional information for better tracing. For example, by adding key-value pairs, you can attach a user ID to trace a specific user through the call stack and review failing requests to determine if that user is having an unusually poor experience. We recommend adding custom attributes based on your use case; for example, if your instrumenting an order management system, you could add an order number custom attribute to your traces. To add custom attributes, you must first enable them for your agent, and then make an API call to record the attribute. Tip For more agent-specific information on collecting custom attributes, see Collect custom attributes sqs.sendMessage(params, function(err, data) { if (err) { res.send(\"Error: \"+ err); } else { res.send(\"Success! Message ID: \"+ data.MessageId); newrelic.addCustomAttribute(\"Message ID\", data.MessageId) } }); Copy 7. Leverage Synthetics to get a high-level view of system health In complex, distributed systems, you need to track and monitor many signals. Sometimes it may be that no one signal is concerning, yet your whole system is behaving anomalously. To get a complete picture, it's critical to analyze symptomatic data in tandem with system-level data. Synthetics allows you to interact with the entire system as an external user would, giving your teams high-level checks for performance and user experience. These external checks help you understand if the entire system is doing what you want regardless of what specific signals may indicate. For more help For more tips and best practices on distributed tracing and custom attributes, see the following: Distributed Tracing Anomaly Detection: A Faster, Easier Way to Troubleshoot Microservices Environments Introduction to distributed tracing Collect custom attributes",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08344,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " that you don&#x27;t compromise <em>your</em> mean-time-to-resolution (MTTR) or end-user experience. At <em>New</em> <em>Relic</em>, we understand these challenges inherently. In our journey, we&#x27;ve transitioned from a Ruby monolith to a multi-language distributed <em>environment</em> built on more than 300 microservices, for which we average"
      },
      "id": "603ebd8264441f02694e887f"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/optimize-cloud-architecture-spend-continuously-improve-your-modern-cloud-environment": [
    {
      "sections": [
        "Manage your containerized environment",
        "1. Update to latest Infrastructure agent and enable Kubernetes integration",
        "2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health",
        "3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment",
        "4. Monitor applications running in Kubernetes with APM",
        "Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics",
        "6. Bring teams together with dashboards tailored to specific business use cases and KPIs",
        "Learn more"
      ],
      "title": "Manage your containerized environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "71ba4468ed7d078021ccd705c78e72cfb5e92b5f",
      "image": "https://docs.newrelic.com/static/f744b0e1c8aac86e63f46a5798df58ae/c1b63/cont_environment01.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/manage-your-containerized-environment/",
      "published_at": "2021-05-05T19:53:07Z",
      "updated_at": "2021-03-16T11:20:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Widespread adoption of containers has changed the way applications are written and deployed. Container orchestration technologies such as Kubernetes are making it easier for teams to schedule, deploy, and manage their containerized applications. But challenges still exist that require teams to rethink their environment and application monitoring strategies: Challenge 1: Containers are ephemeral by nature. Knowing the containers or pod or node (host) where the application is currently running is not necessarily an indication of where it was running 5, 15, or 30 minutes ago when the issue occurred. Containers are deployed in dynamic, constantly evolving environments that require a modern monitoring approach. Challenge 2: Often, organizations are adopting containers as they break down monolithic applications into multiple microservices. This new approach introduces new complexity to the system and the sheer scale and dimensionality of containers is hard to conceptualize in an easy-to-understand format. Challenge 3: Delivering a differentiated end-user experience is a key initiative for all organizations, and containers are being adopted to help organizations release better software, faster. But with this tremendous opportunity also comes risk, because every time a new container is deployed, the cluster is impacted. Organizations need context into how infrastructure changes impact the application stack, and how changes to both the infrastructure and application stack affect the end-user experience. Getting all of this data in real-time in a digestible format is a significant challenge in distributed, containerized environments. The New Relic platform offers customers both ease of use and ease of deployment for containerized Kubernetes environments. With a few clicks you have the data and confidence to move forward intelligently. These six steps illustrate how to use the New Relic platform to manage your containers and how they are scheduled: 1. Update to latest Infrastructure agent and enable Kubernetes integration To get started, you'll need to deploy the latest Infrastructure agent onto a Kubernetes cluster with a DaemonSet. Leveraging DaemonSets is vital in dynamic, containerized environments, because when a new node is deployed or the cluster scales up or down, the DaemonSet ensures the New Relic agent is running on these new nodes. In addition, to build a complete picture of your Kubernetes environment, New Relic aggregates data from many resources, including Kube-state metrics. New Relic's “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health Once the Kubernetes integration is installed, you can access the New Relic Kubernetes cluster explorer, which offers a differentiated, intuitive way to visualize the health and performance of Kubernetes clusters. It applies advanced capabilities to filter, sort, and search for Kubernetes entities, helping teams understand the relationships and dependencies within an environment. It's a powerful and innovative solution to the challenges associated with running Kubernetes at massive scale. 3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment Above and beyond what the cluster explorer provides, New Relic provides out-of-the-box dashboards that allow customers to analyze performance and operating metrics of their Kubernetes environments. Key metrics include the number of containers, resource consumption, pending pods, out of memory (OOM) kills, and stuck pods. These metrics may be particularly relevant to Kubernetes administrators who require reliable, up-to-date information on resource consumption against pre-set thresholds. Access these dashboards directly from the cluster explorer where you can first visually explore your cluster and then use filters to drive down into specific dashboards that match that filter. 4. Monitor applications running in Kubernetes with APM One advantage of New Relic's Infrastructure agent being application-aware is that the cluster explorer is automatically aware of New Relic agents that are deployed on new applications. To fully exploit these capabilities, we recommend monitoring all existing and future containerized applications running in Kubernetes by installing the APM agent on them. Starting again from the cluster explorer, you can dig into what's happening in your applications from the context of the Kubernetes cluster. This gives you the ability to intuitively correlate your infrastructure and applications and begin analytically troubleshooting across the stack. Cloud-native applications use many interconnected services. The cluster explorer will correlate the application and link to its distributed tracings. In complex systems the ability to trace and identify pathways and latency bottlenecks are not optional. Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics If you are orchestrating an end-user facing application, New Relic allows you to view the end-to-end impact your infrastructure and services have on your customer experience. We tackle end-user management in two ways: With Synthetics, you can track application availability and performance from a wide variety of global locations visualizing if customer experience is impacted due to geography. With Browser and Mobile, we recommend monitoring such KPIs as load time and availability. Marrying end-user data with metrics and dashboards provided by the cluster explorer enables operators, administrators, app developers, and business personnel to align on common initiatives. 6. Bring teams together with dashboards tailored to specific business use cases and KPIs With dashboards, you can build custom visualizations from an end-to-end service perspective to analyze the cluster, pods, application, and end-user experience in one clean visual display. By using New Relic's dashboards, cross-organizational teams can align to share a common language and single source of truth, helping them make better decisions and drive business impact. The top two rows of this sample dashboard visualize various aspects of a Kubernetes environment while the third row illustrates valuable information regarding the applications that are deployed to this cluster. The bottom row displays the end-user viewpoint. Learn more Actively, where we enable availability monitoring for one user in one location with Synthetics Passively, where you can analyze a macro view of all users across all geographies with Browser monitoring and Mobile monitoring. Bring teams together with dashboards tailored to specific business use cases and KPIs Kubernetes Monitoring Guide",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08864,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Manage <em>your</em> containerized <em>environment</em>",
        "sections": "Manage <em>your</em> containerized <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " a complete picture of <em>your</em> Kubernetes <em>environment</em>, <em>New</em> <em>Relic</em> aggregates data from many resources, including Kube-state metrics. <em>New</em> <em>Relic</em>&#x27;s “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage"
      },
      "id": "603ebf49196a670d96a83d81"
    },
    {
      "sections": [
        "Adopt cloud services",
        "1. Identify services and technologies",
        "2. Deploy New Relic Infrastructure",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "Tip",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD pipeline integration",
        "8. AWS Lambda Monitoring"
      ],
      "title": "Adopt cloud services",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "4a8e675e4231295287e69402c8c5ff9b05a6103b",
      "image": "https://docs.newrelic.com/static/4159294d05ee078268a7b287af99a72f/c1b63/adopt_cloud.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/adopt-cloud-services/",
      "published_at": "2021-05-05T19:51:58Z",
      "updated_at": "2021-03-16T11:13:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've recently completed your cloud migration, have been using cloud-based services for a while, or have always been in the cloud, you may find yourself deploying modern, cutting-edge technologies and services. It's important to develop the ability to adopt new services easily and with confidence; innovation never stops for companies operating in the cloud, and a company's willingness to embrace new technology can give it a major competitive differentiator. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate, for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions. They may be cloud-based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations, you want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services. This allows your team to deploy faster, to adopt new services with confidence, to make better business decisions, and in general to expand its technology horizons. Here are the steps to using the New Relic Platform to monitor your modern technologies and cloud services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies and new services that might impact your organization's application environment. 2. Deploy New Relic Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified in Step One so that you can monitor your cloud services. If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations As you integrate new cloud services, you can use New Relic to monitor and report data about these services; giving you a single, comprehensive overview of your entire architecture. To configure cloud service integrations, link your Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) service provider account with New Relic. 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of an Insights dashboard with data about vendors, technologies, services, instances, and other important details for DevOps teams. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all changes to a system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all AWS Elastic Load Balancing (ALB) systems for the ALB monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD pipeline integration It's important to track deployments and the impact that code and infrastructure changes have on your end-user experience. New Relic APM deployment markers allow you to record deployments for each application. A deployment marker is an event indicating that a deployment happened. You can pair markers with metadata from your source code management (SCM) system ( including user IDs, revisions, and change logs.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root causes of immediate, long-term, or gradual degradations in your applications. Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment, as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible Puppet 8. AWS Lambda Monitoring New Relic One features an updated APM agent that is highly optimized from a cost and time perspective for ephemeral Lambda functions. Enable New Relic monitoring of AWS Lambda to to assess invocations, error rate, function duration, cold starts, and more. You can also take advantage of New Relic's Infrastructure integration with Lambda for additional reporting capabilities.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08575,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adopt <em>cloud</em> services",
        "sections": "2. Deploy <em>New</em> <em>Relic</em> Infrastructure",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " the <em>New</em> <em>Relic</em> Platform to monitor <em>your</em> modern technologies and <em>cloud</em> services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What <em>cloud</em>-based applications do I have? What are the underlying <em>cloud</em>-based services, technologies"
      },
      "id": "603ebf09e7b9d2071a2a0806"
    },
    {
      "sections": [
        "Analyze distributed systems",
        "1. Identify high-priority areas to monitor",
        "2. Instrument to get the visibility you require",
        "3. Create dashboards",
        "4. Dig deeper with distributed tracing",
        "5. Annotate message queues with distributed tracing payload APIs",
        "Example annotated message queue",
        "6. Annotate and tag traces with custom attributes",
        "Tip",
        "7. Leverage Synthetics to get a high-level view of system health",
        "For more help"
      ],
      "title": "Analyze distributed systems",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "af1cf5a80f8254c90509e562fb68a6ded2f7207f",
      "image": "https://docs.newrelic.com/static/838e50badd634f1f188cf821785f6696/2cffa/APm_distributed-tracing-catalyst-TWO.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/analyze-distributed-systems/",
      "published_at": "2021-05-05T19:54:12Z",
      "updated_at": "2021-03-16T11:07:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In a monolithic application, a simple stack trace can contain enough diagnostic data to determine the root cause of a code defect. But cloud computing and microservices have blurred the lines between software and infrastructure; in modern architectures, requests are distributed across many smaller services—often with ephemeral lifespans—hosted in both on-premise and cloud environments. Spotting code defects becomes much more complex. APM's distributed tracing automatically helps teams troubleshoot such distributed systems. Distributed traces are just one component of a well-monitored system. You need a holistic view of your distributed system, especially when tracking the root cause of a defect, as there are volumes of data to evaluate and understand. When managing a microservices environment, it's critical that you have the capability to spot bottlenecks and problem spans quickly so that you don't compromise your mean-time-to-resolution (MTTR) or end-user experience. At New Relic, we understand these challenges inherently. In our journey, we've transitioned from a Ruby monolith to a multi-language distributed environment built on more than 300 microservices, for which we average 50 code deploys a day. Such challenges inform both how we've built and how we monitor New Relic. Use the New Relic platform to translate your data into relevant insights, so you can collaborate around a common framework to build context and quickly optimize and troubleshoot your complex, distributed systems. 1. Identify high-priority areas to monitor Distributed systems are complex. Before engaging with the New Relic platform, we recommend that you identify the most critical areas of your systems to observe, and focus on instrumenting those high-priority areas first. Google's SRE handbook suggests monitoring the \"four golden signals\": traffic, latency, errors, and saturation, as shown in the following dashboard: Dashboards: Visualize key areas to monitor with dashboards. Too often, teams monitor what is either 1) easy to measure or 2) interpretable. Avoid this fallacy. When making choices about what to monitor, involve product managers and other stakeholders from your organization. Your goal is to monitor what matters to your business, not to overload your teams with noise. 2. Instrument to get the visibility you require Once you've identified your key priorities, instrument the appropriate parts of your system with the New Relic platform. Monitor your web apps with APM. See compatibility and requirements for New Relic agents and products to learn precise compatibility details for each supported language and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. Enable distributed tracing for APM, which will affect some existing APM features. If you're accustomed to using APM without distributed tracing, read the transition guide before you enable this feature. Monitor your compute resources with Infrastructure. See compatibility and requirements for New Relic Infrastructure for supported operating systems and environments. You can also instrument other products and services with on-host integrations. Monitor your front-end experience with Mobile and Browser. See compatibility and requirements for Mobile and for Browser. 3. Create dashboards Use dashboards to get an overview of your entire system and baseline performance, so you can better understand how the components work together. Insights provides a single framework for aligning disparate teams around relevant data. Approach this first build as your launching point, giving your teams something to react to as you begin to ascribe context to your system. You should continue to build and iterate your dashboards as you analyze, troubleshoot, and optimize your distributed system. Even after you have a basic understanding of your system, use dashboards to inform the decisions you make going forward. Dashboards provide central repository of truth, allowing all stakeholders to build context about the health of your system. Here is an example of a query that displays the slowest applications. SELECT percentile(duration, 99) as 'Slowest duration' FROM Transaction FACET name Copy Using this query you can focus on the slowest application to dig deeper: After running the query, dashboards displays the slowest durations. 4. Dig deeper with distributed tracing After you have basic instrumentation and contextual dashboards in place, you can begin to dig deeper to troubleshoot or optimize your system. A differentiated feature in New Relic One's Global Distributed Tracing is that you can come in with vague context for what you're investigating and search across all accounts and traces to get down to the actual user interactions that have those attributes somewhere in their trace. You no longer must begin with the application or specific entity to search for traces that include that application. For example, start with an analysis of your complex service calls, using the distributed tracing UI to: View a scatter plot chart showing the frequency, duration, and other facets of your distributed traces Group traces by root entry, service, service entry, or traces with errors View a trace list Filter specific traces to meet certain parameters You'll likely discover that you want to take the analysis one step further by annotating your traces with information that adds context to your troubleshooting, like User ID. You can do this in New Relic using custom attributes. one.newrelic.com > APM > Distributed tracing: use the distributed tracing UI to monitor and analyze modern distributed systems. 5. Annotate message queues with distributed tracing payload APIs To see connections between services in some environments—for example, in a system that relies heavily on queues—you may need to do some manual instrumentation using the distributed tracing payload APIs to ensure you're propagating the payload. This gives agents the necessary context to create spans with the right correlation; you'll see end-to-end traces for all linked services, including those that cross through the queue. Example annotated message queue For example: Start a transaction. Create the distributed tracing payload on the producer service within a New Relic transaction. As part of the message, add the distributed tracing payload. ​​newrelic.setTransactionName(\"Send Message\") // Create SQS service object var sqs = new AWS.SQS({apiVersion: '2012-11-05'}); var transactionHandle = newrelic.getTransaction(); var payload = transactionHandle.createDistributedTracePayload(); var jsonPayload = payload.text(); //add the jsonPayload as a MessageAttribute var params = { DelaySeconds: 10, MessageAttributes: { \"Testing\": { DataType: \"String\", StringValue: \"123\" }, \"TraceContext\": { DataType: \"String\", StringValue: jsonPayload } }, MessageBody: \"Testing 123\", QueueUrl: \"https://sqs.us-west-2.amazonaws.com/408155283954/sqs-testing\" }; Copy With the context of a transaction, receive the payload on the consumer service. sqs.receiveMessage(params, function(err, data) { if (err) { console.log(\"Receive Error\", err); } else if (data && data.Messages) { console.log(\"trace context:\") var traceContext = data.Messages[0].MessageAttributes.TraceContext.StringValue; if (traceContext != \"\") { var transactionHandle = newrelic.getTransaction(); transactionHandle.acceptDistributedTracePayload(traceContext); } Copy 6. Annotate and tag traces with custom attributes We recommend that you use custom attributes to decorate events with additional information for better tracing. For example, by adding key-value pairs, you can attach a user ID to trace a specific user through the call stack and review failing requests to determine if that user is having an unusually poor experience. We recommend adding custom attributes based on your use case; for example, if your instrumenting an order management system, you could add an order number custom attribute to your traces. To add custom attributes, you must first enable them for your agent, and then make an API call to record the attribute. Tip For more agent-specific information on collecting custom attributes, see Collect custom attributes sqs.sendMessage(params, function(err, data) { if (err) { res.send(\"Error: \"+ err); } else { res.send(\"Success! Message ID: \"+ data.MessageId); newrelic.addCustomAttribute(\"Message ID\", data.MessageId) } }); Copy 7. Leverage Synthetics to get a high-level view of system health In complex, distributed systems, you need to track and monitor many signals. Sometimes it may be that no one signal is concerning, yet your whole system is behaving anomalously. To get a complete picture, it's critical to analyze symptomatic data in tandem with system-level data. Synthetics allows you to interact with the entire system as an external user would, giving your teams high-level checks for performance and user experience. These external checks help you understand if the entire system is doing what you want regardless of what specific signals may indicate. For more help For more tips and best practices on distributed tracing and custom attributes, see the following: Distributed Tracing Anomaly Detection: A Faster, Easier Way to Troubleshoot Microservices Environments Introduction to distributed tracing Collect custom attributes",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08344,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " that you don&#x27;t compromise <em>your</em> mean-time-to-resolution (MTTR) or end-user experience. At <em>New</em> <em>Relic</em>, we understand these challenges inherently. In our journey, we&#x27;ve transitioned from a Ruby monolith to a multi-language distributed <em>environment</em> built on more than 300 microservices, for which we average"
      },
      "id": "603ebd8264441f02694e887f"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/set-proactive-alerts-align-teams-tools-processes-incident-response": [
    {
      "sections": [
        "Manage your containerized environment",
        "1. Update to latest Infrastructure agent and enable Kubernetes integration",
        "2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health",
        "3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment",
        "4. Monitor applications running in Kubernetes with APM",
        "Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics",
        "6. Bring teams together with dashboards tailored to specific business use cases and KPIs",
        "Learn more"
      ],
      "title": "Manage your containerized environment",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "71ba4468ed7d078021ccd705c78e72cfb5e92b5f",
      "image": "https://docs.newrelic.com/static/f744b0e1c8aac86e63f46a5798df58ae/c1b63/cont_environment01.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/manage-your-containerized-environment/",
      "published_at": "2021-05-05T19:53:07Z",
      "updated_at": "2021-03-16T11:20:16Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Widespread adoption of containers has changed the way applications are written and deployed. Container orchestration technologies such as Kubernetes are making it easier for teams to schedule, deploy, and manage their containerized applications. But challenges still exist that require teams to rethink their environment and application monitoring strategies: Challenge 1: Containers are ephemeral by nature. Knowing the containers or pod or node (host) where the application is currently running is not necessarily an indication of where it was running 5, 15, or 30 minutes ago when the issue occurred. Containers are deployed in dynamic, constantly evolving environments that require a modern monitoring approach. Challenge 2: Often, organizations are adopting containers as they break down monolithic applications into multiple microservices. This new approach introduces new complexity to the system and the sheer scale and dimensionality of containers is hard to conceptualize in an easy-to-understand format. Challenge 3: Delivering a differentiated end-user experience is a key initiative for all organizations, and containers are being adopted to help organizations release better software, faster. But with this tremendous opportunity also comes risk, because every time a new container is deployed, the cluster is impacted. Organizations need context into how infrastructure changes impact the application stack, and how changes to both the infrastructure and application stack affect the end-user experience. Getting all of this data in real-time in a digestible format is a significant challenge in distributed, containerized environments. The New Relic platform offers customers both ease of use and ease of deployment for containerized Kubernetes environments. With a few clicks you have the data and confidence to move forward intelligently. These six steps illustrate how to use the New Relic platform to manage your containers and how they are scheduled: 1. Update to latest Infrastructure agent and enable Kubernetes integration To get started, you'll need to deploy the latest Infrastructure agent onto a Kubernetes cluster with a DaemonSet. Leveraging DaemonSets is vital in dynamic, containerized environments, because when a new node is deployed or the cluster scales up or down, the DaemonSet ensures the New Relic agent is running on these new nodes. In addition, to build a complete picture of your Kubernetes environment, New Relic aggregates data from many resources, including Kube-state metrics. New Relic's “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage the Kubernetes cluster explorer to further explore cluster performance and health Once the Kubernetes integration is installed, you can access the New Relic Kubernetes cluster explorer, which offers a differentiated, intuitive way to visualize the health and performance of Kubernetes clusters. It applies advanced capabilities to filter, sort, and search for Kubernetes entities, helping teams understand the relationships and dependencies within an environment. It's a powerful and innovative solution to the challenges associated with running Kubernetes at massive scale. 3. Navigate out-of-the-box dashboards to analyze historical metrics of your Kubernetes environment Above and beyond what the cluster explorer provides, New Relic provides out-of-the-box dashboards that allow customers to analyze performance and operating metrics of their Kubernetes environments. Key metrics include the number of containers, resource consumption, pending pods, out of memory (OOM) kills, and stuck pods. These metrics may be particularly relevant to Kubernetes administrators who require reliable, up-to-date information on resource consumption against pre-set thresholds. Access these dashboards directly from the cluster explorer where you can first visually explore your cluster and then use filters to drive down into specific dashboards that match that filter. 4. Monitor applications running in Kubernetes with APM One advantage of New Relic's Infrastructure agent being application-aware is that the cluster explorer is automatically aware of New Relic agents that are deployed on new applications. To fully exploit these capabilities, we recommend monitoring all existing and future containerized applications running in Kubernetes by installing the APM agent on them. Starting again from the cluster explorer, you can dig into what's happening in your applications from the context of the Kubernetes cluster. This gives you the ability to intuitively correlate your infrastructure and applications and begin analytically troubleshooting across the stack. Cloud-native applications use many interconnected services. The cluster explorer will correlate the application and link to its distributed tracings. In complex systems the ability to trace and identify pathways and latency bottlenecks are not optional. Correlate your Kubernetes back-end with end-user experience using Browser and Synthetics If you are orchestrating an end-user facing application, New Relic allows you to view the end-to-end impact your infrastructure and services have on your customer experience. We tackle end-user management in two ways: With Synthetics, you can track application availability and performance from a wide variety of global locations visualizing if customer experience is impacted due to geography. With Browser and Mobile, we recommend monitoring such KPIs as load time and availability. Marrying end-user data with metrics and dashboards provided by the cluster explorer enables operators, administrators, app developers, and business personnel to align on common initiatives. 6. Bring teams together with dashboards tailored to specific business use cases and KPIs With dashboards, you can build custom visualizations from an end-to-end service perspective to analyze the cluster, pods, application, and end-user experience in one clean visual display. By using New Relic's dashboards, cross-organizational teams can align to share a common language and single source of truth, helping them make better decisions and drive business impact. The top two rows of this sample dashboard visualize various aspects of a Kubernetes environment while the third row illustrates valuable information regarding the applications that are deployed to this cluster. The bottom row displays the end-user viewpoint. Learn more Actively, where we enable availability monitoring for one user in one location with Synthetics Passively, where you can analyze a macro view of all users across all geographies with Browser monitoring and Mobile monitoring. Bring teams together with dashboards tailored to specific business use cases and KPIs Kubernetes Monitoring Guide",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08864,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Manage <em>your</em> containerized <em>environment</em>",
        "sections": "Manage <em>your</em> containerized <em>environment</em>",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " a complete picture of <em>your</em> Kubernetes <em>environment</em>, <em>New</em> <em>Relic</em> aggregates data from many resources, including Kube-state metrics. <em>New</em> <em>Relic</em>&#x27;s “Kubernetes aware” approach makes it easy for Kubernetes to do its job as an orchestrator without missing a single node, cluster, or event. 2. Leverage"
      },
      "id": "603ebf49196a670d96a83d81"
    },
    {
      "sections": [
        "Adopt cloud services",
        "1. Identify services and technologies",
        "2. Deploy New Relic Infrastructure",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "Tip",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD pipeline integration",
        "8. AWS Lambda Monitoring"
      ],
      "title": "Adopt cloud services",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "4a8e675e4231295287e69402c8c5ff9b05a6103b",
      "image": "https://docs.newrelic.com/static/4159294d05ee078268a7b287af99a72f/c1b63/adopt_cloud.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/adopt-cloud-services/",
      "published_at": "2021-05-05T19:51:58Z",
      "updated_at": "2021-03-16T11:13:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've recently completed your cloud migration, have been using cloud-based services for a while, or have always been in the cloud, you may find yourself deploying modern, cutting-edge technologies and services. It's important to develop the ability to adopt new services easily and with confidence; innovation never stops for companies operating in the cloud, and a company's willingness to embrace new technology can give it a major competitive differentiator. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate, for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions. They may be cloud-based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations, you want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services. This allows your team to deploy faster, to adopt new services with confidence, to make better business decisions, and in general to expand its technology horizons. Here are the steps to using the New Relic Platform to monitor your modern technologies and cloud services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies and new services that might impact your organization's application environment. 2. Deploy New Relic Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified in Step One so that you can monitor your cloud services. If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations As you integrate new cloud services, you can use New Relic to monitor and report data about these services; giving you a single, comprehensive overview of your entire architecture. To configure cloud service integrations, link your Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP) service provider account with New Relic. 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of an Insights dashboard with data about vendors, technologies, services, instances, and other important details for DevOps teams. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all changes to a system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all AWS Elastic Load Balancing (ALB) systems for the ALB monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD pipeline integration It's important to track deployments and the impact that code and infrastructure changes have on your end-user experience. New Relic APM deployment markers allow you to record deployments for each application. A deployment marker is an event indicating that a deployment happened. You can pair markers with metadata from your source code management (SCM) system ( including user IDs, revisions, and change logs.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root causes of immediate, long-term, or gradual degradations in your applications. Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment, as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible Puppet 8. AWS Lambda Monitoring New Relic One features an updated APM agent that is highly optimized from a cost and time perspective for ephemeral Lambda functions. Enable New Relic monitoring of AWS Lambda to to assess invocations, error rate, function duration, cold starts, and more. You can also take advantage of New Relic's Infrastructure integration with Lambda for additional reporting capabilities.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08574,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Adopt <em>cloud</em> services",
        "sections": "2. Deploy <em>New</em> <em>Relic</em> Infrastructure",
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " the <em>New</em> <em>Relic</em> Platform to monitor <em>your</em> modern technologies and <em>cloud</em> services: 1. Identify services and technologies Determine the components you need to monitor by answering the following questions: What <em>cloud</em>-based applications do I have? What are the underlying <em>cloud</em>-based services, technologies"
      },
      "id": "603ebf09e7b9d2071a2a0806"
    },
    {
      "sections": [
        "Analyze distributed systems",
        "1. Identify high-priority areas to monitor",
        "2. Instrument to get the visibility you require",
        "3. Create dashboards",
        "4. Dig deeper with distributed tracing",
        "5. Annotate message queues with distributed tracing payload APIs",
        "Example annotated message queue",
        "6. Annotate and tag traces with custom attributes",
        "Tip",
        "7. Leverage Synthetics to get a high-level view of system health",
        "For more help"
      ],
      "title": "Analyze distributed systems",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Optimize your cloud native environment"
      ],
      "external_id": "af1cf5a80f8254c90509e562fb68a6ded2f7207f",
      "image": "https://docs.newrelic.com/static/838e50badd634f1f188cf821785f6696/2cffa/APm_distributed-tracing-catalyst-TWO.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/optimize-your-cloud-native-environment/analyze-distributed-systems/",
      "published_at": "2021-05-05T19:54:12Z",
      "updated_at": "2021-03-16T11:07:55Z",
      "document_type": "page",
      "popularity": 1,
      "body": "In a monolithic application, a simple stack trace can contain enough diagnostic data to determine the root cause of a code defect. But cloud computing and microservices have blurred the lines between software and infrastructure; in modern architectures, requests are distributed across many smaller services—often with ephemeral lifespans—hosted in both on-premise and cloud environments. Spotting code defects becomes much more complex. APM's distributed tracing automatically helps teams troubleshoot such distributed systems. Distributed traces are just one component of a well-monitored system. You need a holistic view of your distributed system, especially when tracking the root cause of a defect, as there are volumes of data to evaluate and understand. When managing a microservices environment, it's critical that you have the capability to spot bottlenecks and problem spans quickly so that you don't compromise your mean-time-to-resolution (MTTR) or end-user experience. At New Relic, we understand these challenges inherently. In our journey, we've transitioned from a Ruby monolith to a multi-language distributed environment built on more than 300 microservices, for which we average 50 code deploys a day. Such challenges inform both how we've built and how we monitor New Relic. Use the New Relic platform to translate your data into relevant insights, so you can collaborate around a common framework to build context and quickly optimize and troubleshoot your complex, distributed systems. 1. Identify high-priority areas to monitor Distributed systems are complex. Before engaging with the New Relic platform, we recommend that you identify the most critical areas of your systems to observe, and focus on instrumenting those high-priority areas first. Google's SRE handbook suggests monitoring the \"four golden signals\": traffic, latency, errors, and saturation, as shown in the following dashboard: Dashboards: Visualize key areas to monitor with dashboards. Too often, teams monitor what is either 1) easy to measure or 2) interpretable. Avoid this fallacy. When making choices about what to monitor, involve product managers and other stakeholders from your organization. Your goal is to monitor what matters to your business, not to overload your teams with noise. 2. Instrument to get the visibility you require Once you've identified your key priorities, instrument the appropriate parts of your system with the New Relic platform. Monitor your web apps with APM. See compatibility and requirements for New Relic agents and products to learn precise compatibility details for each supported language and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. Enable distributed tracing for APM, which will affect some existing APM features. If you're accustomed to using APM without distributed tracing, read the transition guide before you enable this feature. Monitor your compute resources with Infrastructure. See compatibility and requirements for New Relic Infrastructure for supported operating systems and environments. You can also instrument other products and services with on-host integrations. Monitor your front-end experience with Mobile and Browser. See compatibility and requirements for Mobile and for Browser. 3. Create dashboards Use dashboards to get an overview of your entire system and baseline performance, so you can better understand how the components work together. Insights provides a single framework for aligning disparate teams around relevant data. Approach this first build as your launching point, giving your teams something to react to as you begin to ascribe context to your system. You should continue to build and iterate your dashboards as you analyze, troubleshoot, and optimize your distributed system. Even after you have a basic understanding of your system, use dashboards to inform the decisions you make going forward. Dashboards provide central repository of truth, allowing all stakeholders to build context about the health of your system. Here is an example of a query that displays the slowest applications. SELECT percentile(duration, 99) as 'Slowest duration' FROM Transaction FACET name Copy Using this query you can focus on the slowest application to dig deeper: After running the query, dashboards displays the slowest durations. 4. Dig deeper with distributed tracing After you have basic instrumentation and contextual dashboards in place, you can begin to dig deeper to troubleshoot or optimize your system. A differentiated feature in New Relic One's Global Distributed Tracing is that you can come in with vague context for what you're investigating and search across all accounts and traces to get down to the actual user interactions that have those attributes somewhere in their trace. You no longer must begin with the application or specific entity to search for traces that include that application. For example, start with an analysis of your complex service calls, using the distributed tracing UI to: View a scatter plot chart showing the frequency, duration, and other facets of your distributed traces Group traces by root entry, service, service entry, or traces with errors View a trace list Filter specific traces to meet certain parameters You'll likely discover that you want to take the analysis one step further by annotating your traces with information that adds context to your troubleshooting, like User ID. You can do this in New Relic using custom attributes. one.newrelic.com > APM > Distributed tracing: use the distributed tracing UI to monitor and analyze modern distributed systems. 5. Annotate message queues with distributed tracing payload APIs To see connections between services in some environments—for example, in a system that relies heavily on queues—you may need to do some manual instrumentation using the distributed tracing payload APIs to ensure you're propagating the payload. This gives agents the necessary context to create spans with the right correlation; you'll see end-to-end traces for all linked services, including those that cross through the queue. Example annotated message queue For example: Start a transaction. Create the distributed tracing payload on the producer service within a New Relic transaction. As part of the message, add the distributed tracing payload. ​​newrelic.setTransactionName(\"Send Message\") // Create SQS service object var sqs = new AWS.SQS({apiVersion: '2012-11-05'}); var transactionHandle = newrelic.getTransaction(); var payload = transactionHandle.createDistributedTracePayload(); var jsonPayload = payload.text(); //add the jsonPayload as a MessageAttribute var params = { DelaySeconds: 10, MessageAttributes: { \"Testing\": { DataType: \"String\", StringValue: \"123\" }, \"TraceContext\": { DataType: \"String\", StringValue: jsonPayload } }, MessageBody: \"Testing 123\", QueueUrl: \"https://sqs.us-west-2.amazonaws.com/408155283954/sqs-testing\" }; Copy With the context of a transaction, receive the payload on the consumer service. sqs.receiveMessage(params, function(err, data) { if (err) { console.log(\"Receive Error\", err); } else if (data && data.Messages) { console.log(\"trace context:\") var traceContext = data.Messages[0].MessageAttributes.TraceContext.StringValue; if (traceContext != \"\") { var transactionHandle = newrelic.getTransaction(); transactionHandle.acceptDistributedTracePayload(traceContext); } Copy 6. Annotate and tag traces with custom attributes We recommend that you use custom attributes to decorate events with additional information for better tracing. For example, by adding key-value pairs, you can attach a user ID to trace a specific user through the call stack and review failing requests to determine if that user is having an unusually poor experience. We recommend adding custom attributes based on your use case; for example, if your instrumenting an order management system, you could add an order number custom attribute to your traces. To add custom attributes, you must first enable them for your agent, and then make an API call to record the attribute. Tip For more agent-specific information on collecting custom attributes, see Collect custom attributes sqs.sendMessage(params, function(err, data) { if (err) { res.send(\"Error: \"+ err); } else { res.send(\"Success! Message ID: \"+ data.MessageId); newrelic.addCustomAttribute(\"Message ID\", data.MessageId) } }); Copy 7. Leverage Synthetics to get a high-level view of system health In complex, distributed systems, you need to track and monitor many signals. Sometimes it may be that no one signal is concerning, yet your whole system is behaving anomalously. To get a complete picture, it's critical to analyze symptomatic data in tandem with system-level data. Synthetics allows you to interact with the entire system as an external user would, giving your teams high-level checks for performance and user experience. These external checks help you understand if the entire system is doing what you want regardless of what specific signals may indicate. For more help For more tips and best practices on distributed tracing and custom attributes, see the following: Distributed Tracing Anomaly Detection: A Faster, Easier Way to Troubleshoot Microservices Environments Introduction to distributed tracing Collect custom attributes",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 234.08342,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "tags": "<em>Optimize</em> <em>your</em> <em>cloud</em> <em>native</em> <em>environment</em>",
        "body": " that you don&#x27;t compromise <em>your</em> mean-time-to-resolution (MTTR) or end-user experience. At <em>New</em> <em>Relic</em>, we understand these challenges inherently. In our journey, we&#x27;ve transitioned from a Ruby monolith to a multi-language distributed <em>environment</em> built on more than 300 microservices, for which we average"
      },
      "id": "603ebd8264441f02694e887f"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/create-application-baselines": [
    {
      "sections": [
        "Prioritize migration order",
        "1. Identify components",
        "2. Instrument applications",
        "3. Instrument hosts",
        "Tip",
        "4. Identify and track issues",
        "5. Create baselines",
        "6. Determine next steps",
        "Use service maps to find connections",
        "Use the New Relic Explorer to analyze health",
        "Use the Inventory page to identify components",
        "Expert tips for organizing your data"
      ],
      "title": "Prioritize migration order",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "f728804bace8dbe4a8176df74986fbf094e1ba62",
      "image": "https://docs.newrelic.com/static/9c3844bf72e803766bcb7b5146bf279b/c1b63/screen-service-maps_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/prioritize-migration-order/",
      "published_at": "2021-05-05T18:42:07Z",
      "updated_at": "2021-03-30T01:17:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Before you migrate any applications to the cloud, verify that the applications and their underlying server infrastructures are candidates for migration. When you instrument every layer of an application’s architecture, you get end-to-end visibility and are able to identify additional cloud migration risks or dependencies. Such analysis provides a more focused cloud migration priority list. 1. Identify components Create a list all of applications, services, and their underlying server infrastructures in your application portfolio that you want to migrate to the cloud. 2. Instrument applications Before you install any New Relic agents, review the compatibility and requirements for New Relic agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each tier of the application stack (database, application, web server, etc.), as you will install Infrastructure agents on each of those hosts in the next step. 3. Instrument hosts After reviewing the requirements for New Relic Infrastructure, follow the instructions for installing the Infrastructure agent on all hosts in your application stack: Install for Linux Install for Windows Server Install on AWS Elastic Beanstalk Install with a configuration management tool Also, in order to report data to New Relic, Infrastructure agents must have outbound access to certain domains and ports. If your system requires a proxy to connect to these domains, use the proxy setting. To gain extended visibility into applications that your code depends on, deploy on-host integrations. New Relic supports several commonly used application components, such as MySQL, Apache, and NGINX. Tip If you discover any applications, dependencies, or server infrastructure that you did not include in your list of components, instrument them with New Relic by installing the appropriate agents before moving forward. 4. Identify and track issues After installing, New Relic APM and Browser show you error events, error metrics, and detailed error traces for your applications. If an error or unhandled exception happens, the data appears on the Browser JavaScript errors page and the APM Error analytics page. From these pages, you can quickly troubleshoot runtime errors. Then, further analyze errors by grouping them according to attributes, by filtering them, or by searching for keywords in the event data. Each unhandled exception generates a transaction error event in Insights, and the dashboards are updated in real time. Event data is a record of a single event at a particular moment in time and consists of default attributes, like a timestamp, and an event type. You can also add custom attributes to provide more context. Tip Once you start capturing JavaScript errors as events in Insights, set up NRQL alerting so you can stay on top of your error data. 5. Create baselines One of the benefits of using APM while you are planning your cloud migration is that you get a deeper understanding of your application’s baseline. A baseline is a measurement of the current performance and availability of your application, which you then use as a comparison after your migration to validate your business case. 6. Determine next steps Use the following New Relic features to determine the next steps for your application: Use service maps to find connections After you install the APM agent, use service maps to get a full view into your application’s architecture. service maps allow you to identify any external services, web services, databases, or APIs that the application might be connecting to. Once you have an application node on the map, you can add its connections to the map, including New Relic Browser apps, databases, or external services (for example, third-party APIs). Every node you add is automatically connected to the map, so you see the shape of your application’s architecture emerge. one.newrelic.com > APM > (select an application) > Service map: Use service maps to understand the connections between different parts of your architecture. Use the New Relic Explorer to analyze health Use the explorer to see a high level overview of your services, which includes applications. Select the service to view a summary of your instrumented applications. You can then select dependencies to view the underlying infrastructure. To view this information at a glance, use the New Relic Explorer by going to one.newrelic.com > Explorer. From the explorer, you can: Sort applications by labels: Name Response Time Throughput Error Rate Identify owners Identify which users will be affected by a migration Discover application architecture details, such as the number of tiers and data sources Discover any dependencies Extract operational costs of each application or group one.newrelic.com > Explorer: The explorer allows you to see an overview of your services. Use the Inventory page to identify components Infrastructure's inventory page gives you visibility into the software packages installed on your servers. New Relic Infrastructure reports detailed information about a system’s per-host configuration, including system modules, configuration files, metadata, packages, services, user sessions, and more. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. Use this data to identify various components of the applications you want to migrate. one.newrelic.com > Infrastructure > Inventory: Use the filter and search functions to find information for specific items across all your hosts. Analyze these criteria for each of your apps to determine the next steps for your migration: Should you move your app to a new host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the cloud? By using the information that New Relic provides, you are better equipped to create a prioritized list of applications ready for cloud migration. Expert tips for organizing your data In APM, use labels to group the instrumented applications into meaningful categories like environments, functional areas, technologies, business units. Or, you can separate them for development or operational teams. In Infrastructure, use filter sets to organize hosts into cluster, environment, role, or any Infrastructure attribute based on criteria that you define.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 206.52823,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use the <em>New</em> <em>Relic</em> Explorer to analyze health",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " to determine the next steps for your migration: Should you move your app to a <em>new</em> host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the <em>cloud</em>? By using the information that <em>New</em> <em>Relic</em> provides, you are better equipped to create a prioritized list"
      },
      "id": "604458bd64441f87e0378ebf"
    },
    {
      "sections": [
        "Optimize your cloud spend",
        "1. Deploy the New Relic Infrastructure agent",
        "2. Create dashboard charts for cloud performance",
        "Break out data by cloud performance and application metrics",
        "3. Configure the Amazon AWS integration",
        "4. Set up billing budgets in AWS",
        "5. Add cloud spend and budget widgets to Insights dashboard",
        "Break out data by application and by AWS budget",
        "6. Create dashboards for every level of your organization",
        "Dashboards for developers",
        "Dashboards for DevOps",
        "Dashboards for executives",
        "7. Set up alerts",
        "Configure a baseline query using the forecasted amount"
      ],
      "title": "Optimize your cloud spend",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "7a0ac1127aee1ef0668e8aad47af8813f0ed7259",
      "image": "https://docs.newrelic.com/static/2f167e48441b82a62aae1463592e0aed/8c557/CloudPerformanceForAppX.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/optimize-your-cloud-spend/",
      "published_at": "2021-05-05T18:44:57Z",
      "updated_at": "2021-03-13T07:30:46Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Now that you are using cloud-hosted infrastructure and services, it is important to start looking very early and very closely at your cloud spend: Make sure that your assumptions about your cloud spend are playing out as expected. Quickly catch and correct any unexpected spikes in spending. Start fine-tuning the usage of your cloud-based resources. For example, if you have a set of 20 instances all running at 10% CPU, you can think about using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud spend helps you optimize and save money quickly. New Relic can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your cloud spend data, just like you can with any data New Relic can help you collect. Using the New Relic applied intelligence platform is a great way to help you learn about your cloud spending or about any of your performance data. 1. Deploy the New Relic Infrastructure agent Review the requirements for the New Relic Infrastructure agent and follow the documentation for instructions on installing the agent. After you install the Infrastructure agent on your hosts, you immediately have access to the broad spectrum of metrics that the agent receives automatically. Then, you can set up the cloud integration to start collecting billing information. 2. Create dashboard charts for cloud performance New Relic Dashboards is the product that you use to write powerful custom queries about your data, and then visualize the results in charts that you collect on a dashboard. You can also feed the results of your dashboard queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Include charts for various Infrastructure metrics related to performance and usage; for example: CPU Memory Disk Database You may also want to include charts that represent the application using this cloud infrastructure. In this way you can correlate the cloud infrastructure performance with that of the application. As you right-size your cloud infrastructure, you will want to monitor application performance to make sure you are achieving any targets. Here is an example of an Insights dashboard for cloud performance. Break out data by cloud performance and application metrics The following dashboard shows several charts that present key cloud infrastructure metrics and an associated application metric. Every one of these charts represents the result of a query. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/rjq7tqrswxwtte9/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Create dashboards that include both cloud infrastructure and application metrics.] insights.newrelic.com: Create dashboards that include both cloud infrastructure and application metrics. 3. Configure the Amazon AWS integration New Relic Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. This tutorial focuses on the AWS Billing integration. First, configure the integration with your AWS account, and then you can set up the AWS Billing integration. 4. Set up billing budgets in AWS The Amazon AWS Billing integration requires some additional configuration on the AWS side. Specifically, you need to go into your AWS Billing dashboard and set up Budgets. Our documentation and the blog post Show Me (Where I’m Spending) the Money! AWS Billing Comes to New Relic Insights provide walk-throughs of this process. When creating Budgets, be sure to: Fill in an application name. Decide whether you are doing cost or service-based budgeting. Decide if your budget is open-ended or has a definite ending date. 5. Add cloud spend and budget widgets to Insights dashboard New Relic Insights is the product that you use to write powerful custom queries about your data, and then visualize the results in widgets that you collect on a dashboard. You can also feed the results of your Insights queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Here are some examples of ways to use Insights dashboards to visualize your AWS cloud spend data. Break out data by application and by AWS budget The following dashboard shows several widgets that present key information about an AWS budget vs. actual spending, with data broken out by an application AWS budget. Every one of these widgets represents the result of an Insights query, and the data in the supporting Insights tables is the data that our integration automatically receives from AWS. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/ecp5mrnkezh6hjh/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Add charts that include AWS cloud and budgets data.] [ Downs: put this 'code' section below the image please. Here is the query to create the Application X Cloud Cost budget chart in this dashboard example: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy ] insights.newrelic.com: Create dashboards that include AWS cloud and budgets. 6. Create dashboards for every level of your organization Whether you are a developer, in DevOps, or an executive, having information about your cloud spend can help you optimize your cloud environment. Here are a few ways dashboards can help at each level of your organization: Dashboards for developers Understanding how much applications cost to run helps developers properly configure applications to use more efficient services. For example, could developers save cloud costs using Amazon AWS Lambda or properly sized instances instead of randomly selecting an instance? Dashboards for DevOps Monitoring application costs allows operators to catch possible overruns due to misconfigured services. For example, is the DevOps team’s auto-scaling configuration not scaling down properly? Are they spending money on instances that are not being used? Dashboards for executives An overall view of both forecasted and actual cloud spends for individual applications on a per region basis, as well as total costs, helps executives make better business decisions. Use New Relic to keep control of your cloud spending costs, and get your teams alerted when you go over your budgets. 7. Set up alerts After you write queries on your data in Insights, you can easily use them to create alert conditions. New Relic gives you the ability to write baseline queries against your data. A baseline query is a query that you write without setting hard limits on the results and instead let New Relic Applied Intelligence “machine-learn” your performance data. New Relic alerts you when you go too far outside of your baseline numbers. Configure a baseline query using the forecasted amount Configuring a baseline query using a forecasted amount is a great starting point for monitoring any cloud budget, as you grow to understand what your cloud spend will be over time. New Relic notifies you if something spikes beyond your forecasted trend. That query looks like this: SELECT latest(`provider.forecastedAmount`) FROM FinanceSample WHERE provider = 'BillingBudget' and `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy When you create a baseline query and alert on it, you decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider either increases or decreases the gray band around your budget threshold (the blue line): alerts.newrelic.com > Alert policies > (select a policy) > Alert conditions: Create alert conditions based on your NRQL queries and Insights data. This example would have resulted in zero violations based on recent data, and that is exactly what you are looking for. However, if that blue line spikes up out of the gray band, New Relic notifies you. For more detailed information about creating, managing, and using alerts, view these New Relic University tutorials: Intro to alerting Alert policies Alerting incident lifecycle Notification channels",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.98694,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Optimize your <em>cloud</em> spend",
        "sections": "1. Deploy the <em>New</em> <em>Relic</em> Infrastructure agent",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " quickly. <em>New</em> <em>Relic</em> can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your <em>cloud</em> spend data, just like you can with any data <em>New</em> <em>Relic</em> can help you collect. Using"
      },
      "id": "60445c4928ccbcd0132c6094"
    },
    {
      "sections": [
        "Modern and cloud services",
        "1. Identify applications, cloud services, infrastructure, and technologies",
        "2. Deploy Infrastructure",
        "Tip",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD Pipeline integration"
      ],
      "title": "Modern and cloud services ",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "824d892c1faf24fb7eb5bf6e205571446261f699",
      "image": "https://docs.newrelic.com/static/425a652fcbd53bbbea3454793047bd01/8c557/ModernAndCloudServiceDashboardNew.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/cloud-adoption/modern-cloud-services/",
      "published_at": "2021-05-05T18:40:37Z",
      "updated_at": "2021-03-13T05:44:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've just completed your cloud migration, have been using cloud based services for awhile, or have always been in the cloud, you may find yourself deploying or running technologies and services that are new and modern. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions, cloud based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations you still want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services, allowing for faster deployments, the ability to adopt new services, better business decisions, and to expand horizons. This doc demonstrates how to use the New Relic Platform to monitor your modern technologies and cloud services. 1. Identify applications, cloud services, infrastructure, and technologies Determine the components you need to monitor by answering the following the questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies during your migration. 2. Deploy Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified so you can start to monitor your cloud services. Tip If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations Once your applications are migrated to the cloud and you start to integrate new cloud services, you can use New Relic to monitor and report data about your cloud services, offering you a comprehensive view of your entire architecture in one place. To get started configuring cloud service integrations, link your cloud service provider account with New Relic, depending on whether you use Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP). 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of a dashboard with data about vendors, technologies, services, instances, and other important details. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all the changes happening with the system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all ALB systems for the AWS Elastic Load Balancing (ALB) monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD Pipeline integration It's important to track deployments and how the impact of the code and infrastructure changes you make affect customer experience. New Relic APM's deployment markers feature allows you to record deployments for each application. A deployment marker is an event indicating that a deployment happened, and it's paired with metadata available from your SCM system (such metadata typically includes the user, revision, change log, etc.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root cause of immediate, long-term, or gradual degradations in your application. Tip Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.95273,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Modern and <em>cloud</em> services ",
        "sections": "Modern and <em>cloud</em> services",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": ", and GCP so you can track the data that is critical to your <em>cloud</em> <em>adoption</em> success. Tip If you <em>adopt</em> a hybrid <em>cloud</em> of multiple <em>cloud</em> providers, <em>New</em> <em>Relic</em> can provide a holistic perspective that is agnostic to <em>cloud</em> providers. AWS EC2 monitoring integration dashboard In this default dashboard"
      },
      "id": "60440f13e7b9d20f275799ca"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/guide-planning-your-cloud-adoption-strategy": [
    {
      "sections": [
        "Prioritize migration order",
        "1. Identify components",
        "2. Instrument applications",
        "3. Instrument hosts",
        "Tip",
        "4. Identify and track issues",
        "5. Create baselines",
        "6. Determine next steps",
        "Use service maps to find connections",
        "Use the New Relic Explorer to analyze health",
        "Use the Inventory page to identify components",
        "Expert tips for organizing your data"
      ],
      "title": "Prioritize migration order",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "f728804bace8dbe4a8176df74986fbf094e1ba62",
      "image": "https://docs.newrelic.com/static/9c3844bf72e803766bcb7b5146bf279b/c1b63/screen-service-maps_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/prioritize-migration-order/",
      "published_at": "2021-05-05T18:42:07Z",
      "updated_at": "2021-03-30T01:17:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Before you migrate any applications to the cloud, verify that the applications and their underlying server infrastructures are candidates for migration. When you instrument every layer of an application’s architecture, you get end-to-end visibility and are able to identify additional cloud migration risks or dependencies. Such analysis provides a more focused cloud migration priority list. 1. Identify components Create a list all of applications, services, and their underlying server infrastructures in your application portfolio that you want to migrate to the cloud. 2. Instrument applications Before you install any New Relic agents, review the compatibility and requirements for New Relic agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each tier of the application stack (database, application, web server, etc.), as you will install Infrastructure agents on each of those hosts in the next step. 3. Instrument hosts After reviewing the requirements for New Relic Infrastructure, follow the instructions for installing the Infrastructure agent on all hosts in your application stack: Install for Linux Install for Windows Server Install on AWS Elastic Beanstalk Install with a configuration management tool Also, in order to report data to New Relic, Infrastructure agents must have outbound access to certain domains and ports. If your system requires a proxy to connect to these domains, use the proxy setting. To gain extended visibility into applications that your code depends on, deploy on-host integrations. New Relic supports several commonly used application components, such as MySQL, Apache, and NGINX. Tip If you discover any applications, dependencies, or server infrastructure that you did not include in your list of components, instrument them with New Relic by installing the appropriate agents before moving forward. 4. Identify and track issues After installing, New Relic APM and Browser show you error events, error metrics, and detailed error traces for your applications. If an error or unhandled exception happens, the data appears on the Browser JavaScript errors page and the APM Error analytics page. From these pages, you can quickly troubleshoot runtime errors. Then, further analyze errors by grouping them according to attributes, by filtering them, or by searching for keywords in the event data. Each unhandled exception generates a transaction error event in Insights, and the dashboards are updated in real time. Event data is a record of a single event at a particular moment in time and consists of default attributes, like a timestamp, and an event type. You can also add custom attributes to provide more context. Tip Once you start capturing JavaScript errors as events in Insights, set up NRQL alerting so you can stay on top of your error data. 5. Create baselines One of the benefits of using APM while you are planning your cloud migration is that you get a deeper understanding of your application’s baseline. A baseline is a measurement of the current performance and availability of your application, which you then use as a comparison after your migration to validate your business case. 6. Determine next steps Use the following New Relic features to determine the next steps for your application: Use service maps to find connections After you install the APM agent, use service maps to get a full view into your application’s architecture. service maps allow you to identify any external services, web services, databases, or APIs that the application might be connecting to. Once you have an application node on the map, you can add its connections to the map, including New Relic Browser apps, databases, or external services (for example, third-party APIs). Every node you add is automatically connected to the map, so you see the shape of your application’s architecture emerge. one.newrelic.com > APM > (select an application) > Service map: Use service maps to understand the connections between different parts of your architecture. Use the New Relic Explorer to analyze health Use the explorer to see a high level overview of your services, which includes applications. Select the service to view a summary of your instrumented applications. You can then select dependencies to view the underlying infrastructure. To view this information at a glance, use the New Relic Explorer by going to one.newrelic.com > Explorer. From the explorer, you can: Sort applications by labels: Name Response Time Throughput Error Rate Identify owners Identify which users will be affected by a migration Discover application architecture details, such as the number of tiers and data sources Discover any dependencies Extract operational costs of each application or group one.newrelic.com > Explorer: The explorer allows you to see an overview of your services. Use the Inventory page to identify components Infrastructure's inventory page gives you visibility into the software packages installed on your servers. New Relic Infrastructure reports detailed information about a system’s per-host configuration, including system modules, configuration files, metadata, packages, services, user sessions, and more. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. Use this data to identify various components of the applications you want to migrate. one.newrelic.com > Infrastructure > Inventory: Use the filter and search functions to find information for specific items across all your hosts. Analyze these criteria for each of your apps to determine the next steps for your migration: Should you move your app to a new host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the cloud? By using the information that New Relic provides, you are better equipped to create a prioritized list of applications ready for cloud migration. Expert tips for organizing your data In APM, use labels to group the instrumented applications into meaningful categories like environments, functional areas, technologies, business units. Or, you can separate them for development or operational teams. In Infrastructure, use filter sets to organize hosts into cluster, environment, role, or any Infrastructure attribute based on criteria that you define.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 206.52823,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use the <em>New</em> <em>Relic</em> Explorer to analyze health",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " to determine the next steps for your migration: Should you move your app to a <em>new</em> host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the <em>cloud</em>? By using the information that <em>New</em> <em>Relic</em> provides, you are better equipped to create a prioritized list"
      },
      "id": "604458bd64441f87e0378ebf"
    },
    {
      "sections": [
        "Optimize your cloud spend",
        "1. Deploy the New Relic Infrastructure agent",
        "2. Create dashboard charts for cloud performance",
        "Break out data by cloud performance and application metrics",
        "3. Configure the Amazon AWS integration",
        "4. Set up billing budgets in AWS",
        "5. Add cloud spend and budget widgets to Insights dashboard",
        "Break out data by application and by AWS budget",
        "6. Create dashboards for every level of your organization",
        "Dashboards for developers",
        "Dashboards for DevOps",
        "Dashboards for executives",
        "7. Set up alerts",
        "Configure a baseline query using the forecasted amount"
      ],
      "title": "Optimize your cloud spend",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "7a0ac1127aee1ef0668e8aad47af8813f0ed7259",
      "image": "https://docs.newrelic.com/static/2f167e48441b82a62aae1463592e0aed/8c557/CloudPerformanceForAppX.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/optimize-your-cloud-spend/",
      "published_at": "2021-05-05T18:44:57Z",
      "updated_at": "2021-03-13T07:30:46Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Now that you are using cloud-hosted infrastructure and services, it is important to start looking very early and very closely at your cloud spend: Make sure that your assumptions about your cloud spend are playing out as expected. Quickly catch and correct any unexpected spikes in spending. Start fine-tuning the usage of your cloud-based resources. For example, if you have a set of 20 instances all running at 10% CPU, you can think about using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud spend helps you optimize and save money quickly. New Relic can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your cloud spend data, just like you can with any data New Relic can help you collect. Using the New Relic applied intelligence platform is a great way to help you learn about your cloud spending or about any of your performance data. 1. Deploy the New Relic Infrastructure agent Review the requirements for the New Relic Infrastructure agent and follow the documentation for instructions on installing the agent. After you install the Infrastructure agent on your hosts, you immediately have access to the broad spectrum of metrics that the agent receives automatically. Then, you can set up the cloud integration to start collecting billing information. 2. Create dashboard charts for cloud performance New Relic Dashboards is the product that you use to write powerful custom queries about your data, and then visualize the results in charts that you collect on a dashboard. You can also feed the results of your dashboard queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Include charts for various Infrastructure metrics related to performance and usage; for example: CPU Memory Disk Database You may also want to include charts that represent the application using this cloud infrastructure. In this way you can correlate the cloud infrastructure performance with that of the application. As you right-size your cloud infrastructure, you will want to monitor application performance to make sure you are achieving any targets. Here is an example of an Insights dashboard for cloud performance. Break out data by cloud performance and application metrics The following dashboard shows several charts that present key cloud infrastructure metrics and an associated application metric. Every one of these charts represents the result of a query. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/rjq7tqrswxwtte9/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Create dashboards that include both cloud infrastructure and application metrics.] insights.newrelic.com: Create dashboards that include both cloud infrastructure and application metrics. 3. Configure the Amazon AWS integration New Relic Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. This tutorial focuses on the AWS Billing integration. First, configure the integration with your AWS account, and then you can set up the AWS Billing integration. 4. Set up billing budgets in AWS The Amazon AWS Billing integration requires some additional configuration on the AWS side. Specifically, you need to go into your AWS Billing dashboard and set up Budgets. Our documentation and the blog post Show Me (Where I’m Spending) the Money! AWS Billing Comes to New Relic Insights provide walk-throughs of this process. When creating Budgets, be sure to: Fill in an application name. Decide whether you are doing cost or service-based budgeting. Decide if your budget is open-ended or has a definite ending date. 5. Add cloud spend and budget widgets to Insights dashboard New Relic Insights is the product that you use to write powerful custom queries about your data, and then visualize the results in widgets that you collect on a dashboard. You can also feed the results of your Insights queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Here are some examples of ways to use Insights dashboards to visualize your AWS cloud spend data. Break out data by application and by AWS budget The following dashboard shows several widgets that present key information about an AWS budget vs. actual spending, with data broken out by an application AWS budget. Every one of these widgets represents the result of an Insights query, and the data in the supporting Insights tables is the data that our integration automatically receives from AWS. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/ecp5mrnkezh6hjh/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Add charts that include AWS cloud and budgets data.] [ Downs: put this 'code' section below the image please. Here is the query to create the Application X Cloud Cost budget chart in this dashboard example: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy ] insights.newrelic.com: Create dashboards that include AWS cloud and budgets. 6. Create dashboards for every level of your organization Whether you are a developer, in DevOps, or an executive, having information about your cloud spend can help you optimize your cloud environment. Here are a few ways dashboards can help at each level of your organization: Dashboards for developers Understanding how much applications cost to run helps developers properly configure applications to use more efficient services. For example, could developers save cloud costs using Amazon AWS Lambda or properly sized instances instead of randomly selecting an instance? Dashboards for DevOps Monitoring application costs allows operators to catch possible overruns due to misconfigured services. For example, is the DevOps team’s auto-scaling configuration not scaling down properly? Are they spending money on instances that are not being used? Dashboards for executives An overall view of both forecasted and actual cloud spends for individual applications on a per region basis, as well as total costs, helps executives make better business decisions. Use New Relic to keep control of your cloud spending costs, and get your teams alerted when you go over your budgets. 7. Set up alerts After you write queries on your data in Insights, you can easily use them to create alert conditions. New Relic gives you the ability to write baseline queries against your data. A baseline query is a query that you write without setting hard limits on the results and instead let New Relic Applied Intelligence “machine-learn” your performance data. New Relic alerts you when you go too far outside of your baseline numbers. Configure a baseline query using the forecasted amount Configuring a baseline query using a forecasted amount is a great starting point for monitoring any cloud budget, as you grow to understand what your cloud spend will be over time. New Relic notifies you if something spikes beyond your forecasted trend. That query looks like this: SELECT latest(`provider.forecastedAmount`) FROM FinanceSample WHERE provider = 'BillingBudget' and `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy When you create a baseline query and alert on it, you decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider either increases or decreases the gray band around your budget threshold (the blue line): alerts.newrelic.com > Alert policies > (select a policy) > Alert conditions: Create alert conditions based on your NRQL queries and Insights data. This example would have resulted in zero violations based on recent data, and that is exactly what you are looking for. However, if that blue line spikes up out of the gray band, New Relic notifies you. For more detailed information about creating, managing, and using alerts, view these New Relic University tutorials: Intro to alerting Alert policies Alerting incident lifecycle Notification channels",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.98694,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Optimize your <em>cloud</em> spend",
        "sections": "1. Deploy the <em>New</em> <em>Relic</em> Infrastructure agent",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " quickly. <em>New</em> <em>Relic</em> can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your <em>cloud</em> spend data, just like you can with any data <em>New</em> <em>Relic</em> can help you collect. Using"
      },
      "id": "60445c4928ccbcd0132c6094"
    },
    {
      "sections": [
        "Modern and cloud services",
        "1. Identify applications, cloud services, infrastructure, and technologies",
        "2. Deploy Infrastructure",
        "Tip",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD Pipeline integration"
      ],
      "title": "Modern and cloud services ",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "824d892c1faf24fb7eb5bf6e205571446261f699",
      "image": "https://docs.newrelic.com/static/425a652fcbd53bbbea3454793047bd01/8c557/ModernAndCloudServiceDashboardNew.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/cloud-adoption/modern-cloud-services/",
      "published_at": "2021-05-05T18:40:37Z",
      "updated_at": "2021-03-13T05:44:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've just completed your cloud migration, have been using cloud based services for awhile, or have always been in the cloud, you may find yourself deploying or running technologies and services that are new and modern. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions, cloud based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations you still want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services, allowing for faster deployments, the ability to adopt new services, better business decisions, and to expand horizons. This doc demonstrates how to use the New Relic Platform to monitor your modern technologies and cloud services. 1. Identify applications, cloud services, infrastructure, and technologies Determine the components you need to monitor by answering the following the questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies during your migration. 2. Deploy Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified so you can start to monitor your cloud services. Tip If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations Once your applications are migrated to the cloud and you start to integrate new cloud services, you can use New Relic to monitor and report data about your cloud services, offering you a comprehensive view of your entire architecture in one place. To get started configuring cloud service integrations, link your cloud service provider account with New Relic, depending on whether you use Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP). 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of a dashboard with data about vendors, technologies, services, instances, and other important details. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all the changes happening with the system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all ALB systems for the AWS Elastic Load Balancing (ALB) monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD Pipeline integration It's important to track deployments and how the impact of the code and infrastructure changes you make affect customer experience. New Relic APM's deployment markers feature allows you to record deployments for each application. A deployment marker is an event indicating that a deployment happened, and it's paired with metadata available from your SCM system (such metadata typically includes the user, revision, change log, etc.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root cause of immediate, long-term, or gradual degradations in your application. Tip Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.95273,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Modern and <em>cloud</em> services ",
        "sections": "Modern and <em>cloud</em> services",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": ", and GCP so you can track the data that is critical to your <em>cloud</em> <em>adoption</em> success. Tip If you <em>adopt</em> a hybrid <em>cloud</em> of multiple <em>cloud</em> providers, <em>New</em> <em>Relic</em> can provide a holistic perspective that is agnostic to <em>cloud</em> providers. AWS EC2 monitoring integration dashboard In this default dashboard"
      },
      "id": "60440f13e7b9d20f275799ca"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/identify-application-dependencies-inventory": [
    {
      "sections": [
        "Prioritize migration order",
        "1. Identify components",
        "2. Instrument applications",
        "3. Instrument hosts",
        "Tip",
        "4. Identify and track issues",
        "5. Create baselines",
        "6. Determine next steps",
        "Use service maps to find connections",
        "Use the New Relic Explorer to analyze health",
        "Use the Inventory page to identify components",
        "Expert tips for organizing your data"
      ],
      "title": "Prioritize migration order",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "f728804bace8dbe4a8176df74986fbf094e1ba62",
      "image": "https://docs.newrelic.com/static/9c3844bf72e803766bcb7b5146bf279b/c1b63/screen-service-maps_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/prioritize-migration-order/",
      "published_at": "2021-05-05T18:42:07Z",
      "updated_at": "2021-03-30T01:17:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Before you migrate any applications to the cloud, verify that the applications and their underlying server infrastructures are candidates for migration. When you instrument every layer of an application’s architecture, you get end-to-end visibility and are able to identify additional cloud migration risks or dependencies. Such analysis provides a more focused cloud migration priority list. 1. Identify components Create a list all of applications, services, and their underlying server infrastructures in your application portfolio that you want to migrate to the cloud. 2. Instrument applications Before you install any New Relic agents, review the compatibility and requirements for New Relic agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each tier of the application stack (database, application, web server, etc.), as you will install Infrastructure agents on each of those hosts in the next step. 3. Instrument hosts After reviewing the requirements for New Relic Infrastructure, follow the instructions for installing the Infrastructure agent on all hosts in your application stack: Install for Linux Install for Windows Server Install on AWS Elastic Beanstalk Install with a configuration management tool Also, in order to report data to New Relic, Infrastructure agents must have outbound access to certain domains and ports. If your system requires a proxy to connect to these domains, use the proxy setting. To gain extended visibility into applications that your code depends on, deploy on-host integrations. New Relic supports several commonly used application components, such as MySQL, Apache, and NGINX. Tip If you discover any applications, dependencies, or server infrastructure that you did not include in your list of components, instrument them with New Relic by installing the appropriate agents before moving forward. 4. Identify and track issues After installing, New Relic APM and Browser show you error events, error metrics, and detailed error traces for your applications. If an error or unhandled exception happens, the data appears on the Browser JavaScript errors page and the APM Error analytics page. From these pages, you can quickly troubleshoot runtime errors. Then, further analyze errors by grouping them according to attributes, by filtering them, or by searching for keywords in the event data. Each unhandled exception generates a transaction error event in Insights, and the dashboards are updated in real time. Event data is a record of a single event at a particular moment in time and consists of default attributes, like a timestamp, and an event type. You can also add custom attributes to provide more context. Tip Once you start capturing JavaScript errors as events in Insights, set up NRQL alerting so you can stay on top of your error data. 5. Create baselines One of the benefits of using APM while you are planning your cloud migration is that you get a deeper understanding of your application’s baseline. A baseline is a measurement of the current performance and availability of your application, which you then use as a comparison after your migration to validate your business case. 6. Determine next steps Use the following New Relic features to determine the next steps for your application: Use service maps to find connections After you install the APM agent, use service maps to get a full view into your application’s architecture. service maps allow you to identify any external services, web services, databases, or APIs that the application might be connecting to. Once you have an application node on the map, you can add its connections to the map, including New Relic Browser apps, databases, or external services (for example, third-party APIs). Every node you add is automatically connected to the map, so you see the shape of your application’s architecture emerge. one.newrelic.com > APM > (select an application) > Service map: Use service maps to understand the connections between different parts of your architecture. Use the New Relic Explorer to analyze health Use the explorer to see a high level overview of your services, which includes applications. Select the service to view a summary of your instrumented applications. You can then select dependencies to view the underlying infrastructure. To view this information at a glance, use the New Relic Explorer by going to one.newrelic.com > Explorer. From the explorer, you can: Sort applications by labels: Name Response Time Throughput Error Rate Identify owners Identify which users will be affected by a migration Discover application architecture details, such as the number of tiers and data sources Discover any dependencies Extract operational costs of each application or group one.newrelic.com > Explorer: The explorer allows you to see an overview of your services. Use the Inventory page to identify components Infrastructure's inventory page gives you visibility into the software packages installed on your servers. New Relic Infrastructure reports detailed information about a system’s per-host configuration, including system modules, configuration files, metadata, packages, services, user sessions, and more. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. Use this data to identify various components of the applications you want to migrate. one.newrelic.com > Infrastructure > Inventory: Use the filter and search functions to find information for specific items across all your hosts. Analyze these criteria for each of your apps to determine the next steps for your migration: Should you move your app to a new host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the cloud? By using the information that New Relic provides, you are better equipped to create a prioritized list of applications ready for cloud migration. Expert tips for organizing your data In APM, use labels to group the instrumented applications into meaningful categories like environments, functional areas, technologies, business units. Or, you can separate them for development or operational teams. In Infrastructure, use filter sets to organize hosts into cluster, environment, role, or any Infrastructure attribute based on criteria that you define.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 206.52823,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use the <em>New</em> <em>Relic</em> Explorer to analyze health",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " to determine the next steps for your migration: Should you move your app to a <em>new</em> host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the <em>cloud</em>? By using the information that <em>New</em> <em>Relic</em> provides, you are better equipped to create a prioritized list"
      },
      "id": "604458bd64441f87e0378ebf"
    },
    {
      "sections": [
        "Optimize your cloud spend",
        "1. Deploy the New Relic Infrastructure agent",
        "2. Create dashboard charts for cloud performance",
        "Break out data by cloud performance and application metrics",
        "3. Configure the Amazon AWS integration",
        "4. Set up billing budgets in AWS",
        "5. Add cloud spend and budget widgets to Insights dashboard",
        "Break out data by application and by AWS budget",
        "6. Create dashboards for every level of your organization",
        "Dashboards for developers",
        "Dashboards for DevOps",
        "Dashboards for executives",
        "7. Set up alerts",
        "Configure a baseline query using the forecasted amount"
      ],
      "title": "Optimize your cloud spend",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "7a0ac1127aee1ef0668e8aad47af8813f0ed7259",
      "image": "https://docs.newrelic.com/static/2f167e48441b82a62aae1463592e0aed/8c557/CloudPerformanceForAppX.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/optimize-your-cloud-spend/",
      "published_at": "2021-05-05T18:44:57Z",
      "updated_at": "2021-03-13T07:30:46Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Now that you are using cloud-hosted infrastructure and services, it is important to start looking very early and very closely at your cloud spend: Make sure that your assumptions about your cloud spend are playing out as expected. Quickly catch and correct any unexpected spikes in spending. Start fine-tuning the usage of your cloud-based resources. For example, if you have a set of 20 instances all running at 10% CPU, you can think about using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud spend helps you optimize and save money quickly. New Relic can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your cloud spend data, just like you can with any data New Relic can help you collect. Using the New Relic applied intelligence platform is a great way to help you learn about your cloud spending or about any of your performance data. 1. Deploy the New Relic Infrastructure agent Review the requirements for the New Relic Infrastructure agent and follow the documentation for instructions on installing the agent. After you install the Infrastructure agent on your hosts, you immediately have access to the broad spectrum of metrics that the agent receives automatically. Then, you can set up the cloud integration to start collecting billing information. 2. Create dashboard charts for cloud performance New Relic Dashboards is the product that you use to write powerful custom queries about your data, and then visualize the results in charts that you collect on a dashboard. You can also feed the results of your dashboard queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Include charts for various Infrastructure metrics related to performance and usage; for example: CPU Memory Disk Database You may also want to include charts that represent the application using this cloud infrastructure. In this way you can correlate the cloud infrastructure performance with that of the application. As you right-size your cloud infrastructure, you will want to monitor application performance to make sure you are achieving any targets. Here is an example of an Insights dashboard for cloud performance. Break out data by cloud performance and application metrics The following dashboard shows several charts that present key cloud infrastructure metrics and an associated application metric. Every one of these charts represents the result of a query. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/rjq7tqrswxwtte9/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Create dashboards that include both cloud infrastructure and application metrics.] insights.newrelic.com: Create dashboards that include both cloud infrastructure and application metrics. 3. Configure the Amazon AWS integration New Relic Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. This tutorial focuses on the AWS Billing integration. First, configure the integration with your AWS account, and then you can set up the AWS Billing integration. 4. Set up billing budgets in AWS The Amazon AWS Billing integration requires some additional configuration on the AWS side. Specifically, you need to go into your AWS Billing dashboard and set up Budgets. Our documentation and the blog post Show Me (Where I’m Spending) the Money! AWS Billing Comes to New Relic Insights provide walk-throughs of this process. When creating Budgets, be sure to: Fill in an application name. Decide whether you are doing cost or service-based budgeting. Decide if your budget is open-ended or has a definite ending date. 5. Add cloud spend and budget widgets to Insights dashboard New Relic Insights is the product that you use to write powerful custom queries about your data, and then visualize the results in widgets that you collect on a dashboard. You can also feed the results of your Insights queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Here are some examples of ways to use Insights dashboards to visualize your AWS cloud spend data. Break out data by application and by AWS budget The following dashboard shows several widgets that present key information about an AWS budget vs. actual spending, with data broken out by an application AWS budget. Every one of these widgets represents the result of an Insights query, and the data in the supporting Insights tables is the data that our integration automatically receives from AWS. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/ecp5mrnkezh6hjh/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Add charts that include AWS cloud and budgets data.] [ Downs: put this 'code' section below the image please. Here is the query to create the Application X Cloud Cost budget chart in this dashboard example: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy ] insights.newrelic.com: Create dashboards that include AWS cloud and budgets. 6. Create dashboards for every level of your organization Whether you are a developer, in DevOps, or an executive, having information about your cloud spend can help you optimize your cloud environment. Here are a few ways dashboards can help at each level of your organization: Dashboards for developers Understanding how much applications cost to run helps developers properly configure applications to use more efficient services. For example, could developers save cloud costs using Amazon AWS Lambda or properly sized instances instead of randomly selecting an instance? Dashboards for DevOps Monitoring application costs allows operators to catch possible overruns due to misconfigured services. For example, is the DevOps team’s auto-scaling configuration not scaling down properly? Are they spending money on instances that are not being used? Dashboards for executives An overall view of both forecasted and actual cloud spends for individual applications on a per region basis, as well as total costs, helps executives make better business decisions. Use New Relic to keep control of your cloud spending costs, and get your teams alerted when you go over your budgets. 7. Set up alerts After you write queries on your data in Insights, you can easily use them to create alert conditions. New Relic gives you the ability to write baseline queries against your data. A baseline query is a query that you write without setting hard limits on the results and instead let New Relic Applied Intelligence “machine-learn” your performance data. New Relic alerts you when you go too far outside of your baseline numbers. Configure a baseline query using the forecasted amount Configuring a baseline query using a forecasted amount is a great starting point for monitoring any cloud budget, as you grow to understand what your cloud spend will be over time. New Relic notifies you if something spikes beyond your forecasted trend. That query looks like this: SELECT latest(`provider.forecastedAmount`) FROM FinanceSample WHERE provider = 'BillingBudget' and `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy When you create a baseline query and alert on it, you decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider either increases or decreases the gray band around your budget threshold (the blue line): alerts.newrelic.com > Alert policies > (select a policy) > Alert conditions: Create alert conditions based on your NRQL queries and Insights data. This example would have resulted in zero violations based on recent data, and that is exactly what you are looking for. However, if that blue line spikes up out of the gray band, New Relic notifies you. For more detailed information about creating, managing, and using alerts, view these New Relic University tutorials: Intro to alerting Alert policies Alerting incident lifecycle Notification channels",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.98694,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Optimize your <em>cloud</em> spend",
        "sections": "1. Deploy the <em>New</em> <em>Relic</em> Infrastructure agent",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " quickly. <em>New</em> <em>Relic</em> can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your <em>cloud</em> spend data, just like you can with any data <em>New</em> <em>Relic</em> can help you collect. Using"
      },
      "id": "60445c4928ccbcd0132c6094"
    },
    {
      "sections": [
        "Modern and cloud services",
        "1. Identify applications, cloud services, infrastructure, and technologies",
        "2. Deploy Infrastructure",
        "Tip",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD Pipeline integration"
      ],
      "title": "Modern and cloud services ",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "824d892c1faf24fb7eb5bf6e205571446261f699",
      "image": "https://docs.newrelic.com/static/425a652fcbd53bbbea3454793047bd01/8c557/ModernAndCloudServiceDashboardNew.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/cloud-adoption/modern-cloud-services/",
      "published_at": "2021-05-05T18:40:37Z",
      "updated_at": "2021-03-13T05:44:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've just completed your cloud migration, have been using cloud based services for awhile, or have always been in the cloud, you may find yourself deploying or running technologies and services that are new and modern. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions, cloud based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations you still want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services, allowing for faster deployments, the ability to adopt new services, better business decisions, and to expand horizons. This doc demonstrates how to use the New Relic Platform to monitor your modern technologies and cloud services. 1. Identify applications, cloud services, infrastructure, and technologies Determine the components you need to monitor by answering the following the questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies during your migration. 2. Deploy Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified so you can start to monitor your cloud services. Tip If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations Once your applications are migrated to the cloud and you start to integrate new cloud services, you can use New Relic to monitor and report data about your cloud services, offering you a comprehensive view of your entire architecture in one place. To get started configuring cloud service integrations, link your cloud service provider account with New Relic, depending on whether you use Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP). 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of a dashboard with data about vendors, technologies, services, instances, and other important details. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all the changes happening with the system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all ALB systems for the AWS Elastic Load Balancing (ALB) monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD Pipeline integration It's important to track deployments and how the impact of the code and infrastructure changes you make affect customer experience. New Relic APM's deployment markers feature allows you to record deployments for each application. A deployment marker is an event indicating that a deployment happened, and it's paired with metadata available from your SCM system (such metadata typically includes the user, revision, change log, etc.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root cause of immediate, long-term, or gradual degradations in your application. Tip Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.95273,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Modern and <em>cloud</em> services ",
        "sections": "Modern and <em>cloud</em> services",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": ", and GCP so you can track the data that is critical to your <em>cloud</em> <em>adoption</em> success. Tip If you <em>adopt</em> a hybrid <em>cloud</em> of multiple <em>cloud</em> providers, <em>New</em> <em>Relic</em> can provide a holistic perspective that is agnostic to <em>cloud</em> providers. AWS EC2 monitoring integration dashboard In this default dashboard"
      },
      "id": "60440f13e7b9d20f275799ca"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/identify-issues-roadblocks": [
    {
      "sections": [
        "Prioritize migration order",
        "1. Identify components",
        "2. Instrument applications",
        "3. Instrument hosts",
        "Tip",
        "4. Identify and track issues",
        "5. Create baselines",
        "6. Determine next steps",
        "Use service maps to find connections",
        "Use the New Relic Explorer to analyze health",
        "Use the Inventory page to identify components",
        "Expert tips for organizing your data"
      ],
      "title": "Prioritize migration order",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "f728804bace8dbe4a8176df74986fbf094e1ba62",
      "image": "https://docs.newrelic.com/static/9c3844bf72e803766bcb7b5146bf279b/c1b63/screen-service-maps_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/prioritize-migration-order/",
      "published_at": "2021-05-05T18:42:07Z",
      "updated_at": "2021-03-30T01:17:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Before you migrate any applications to the cloud, verify that the applications and their underlying server infrastructures are candidates for migration. When you instrument every layer of an application’s architecture, you get end-to-end visibility and are able to identify additional cloud migration risks or dependencies. Such analysis provides a more focused cloud migration priority list. 1. Identify components Create a list all of applications, services, and their underlying server infrastructures in your application portfolio that you want to migrate to the cloud. 2. Instrument applications Before you install any New Relic agents, review the compatibility and requirements for New Relic agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each tier of the application stack (database, application, web server, etc.), as you will install Infrastructure agents on each of those hosts in the next step. 3. Instrument hosts After reviewing the requirements for New Relic Infrastructure, follow the instructions for installing the Infrastructure agent on all hosts in your application stack: Install for Linux Install for Windows Server Install on AWS Elastic Beanstalk Install with a configuration management tool Also, in order to report data to New Relic, Infrastructure agents must have outbound access to certain domains and ports. If your system requires a proxy to connect to these domains, use the proxy setting. To gain extended visibility into applications that your code depends on, deploy on-host integrations. New Relic supports several commonly used application components, such as MySQL, Apache, and NGINX. Tip If you discover any applications, dependencies, or server infrastructure that you did not include in your list of components, instrument them with New Relic by installing the appropriate agents before moving forward. 4. Identify and track issues After installing, New Relic APM and Browser show you error events, error metrics, and detailed error traces for your applications. If an error or unhandled exception happens, the data appears on the Browser JavaScript errors page and the APM Error analytics page. From these pages, you can quickly troubleshoot runtime errors. Then, further analyze errors by grouping them according to attributes, by filtering them, or by searching for keywords in the event data. Each unhandled exception generates a transaction error event in Insights, and the dashboards are updated in real time. Event data is a record of a single event at a particular moment in time and consists of default attributes, like a timestamp, and an event type. You can also add custom attributes to provide more context. Tip Once you start capturing JavaScript errors as events in Insights, set up NRQL alerting so you can stay on top of your error data. 5. Create baselines One of the benefits of using APM while you are planning your cloud migration is that you get a deeper understanding of your application’s baseline. A baseline is a measurement of the current performance and availability of your application, which you then use as a comparison after your migration to validate your business case. 6. Determine next steps Use the following New Relic features to determine the next steps for your application: Use service maps to find connections After you install the APM agent, use service maps to get a full view into your application’s architecture. service maps allow you to identify any external services, web services, databases, or APIs that the application might be connecting to. Once you have an application node on the map, you can add its connections to the map, including New Relic Browser apps, databases, or external services (for example, third-party APIs). Every node you add is automatically connected to the map, so you see the shape of your application’s architecture emerge. one.newrelic.com > APM > (select an application) > Service map: Use service maps to understand the connections between different parts of your architecture. Use the New Relic Explorer to analyze health Use the explorer to see a high level overview of your services, which includes applications. Select the service to view a summary of your instrumented applications. You can then select dependencies to view the underlying infrastructure. To view this information at a glance, use the New Relic Explorer by going to one.newrelic.com > Explorer. From the explorer, you can: Sort applications by labels: Name Response Time Throughput Error Rate Identify owners Identify which users will be affected by a migration Discover application architecture details, such as the number of tiers and data sources Discover any dependencies Extract operational costs of each application or group one.newrelic.com > Explorer: The explorer allows you to see an overview of your services. Use the Inventory page to identify components Infrastructure's inventory page gives you visibility into the software packages installed on your servers. New Relic Infrastructure reports detailed information about a system’s per-host configuration, including system modules, configuration files, metadata, packages, services, user sessions, and more. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. Use this data to identify various components of the applications you want to migrate. one.newrelic.com > Infrastructure > Inventory: Use the filter and search functions to find information for specific items across all your hosts. Analyze these criteria for each of your apps to determine the next steps for your migration: Should you move your app to a new host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the cloud? By using the information that New Relic provides, you are better equipped to create a prioritized list of applications ready for cloud migration. Expert tips for organizing your data In APM, use labels to group the instrumented applications into meaningful categories like environments, functional areas, technologies, business units. Or, you can separate them for development or operational teams. In Infrastructure, use filter sets to organize hosts into cluster, environment, role, or any Infrastructure attribute based on criteria that you define.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 206.52821,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use the <em>New</em> <em>Relic</em> Explorer to analyze health",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " to determine the next steps for your migration: Should you move your app to a <em>new</em> host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the <em>cloud</em>? By using the information that <em>New</em> <em>Relic</em> provides, you are better equipped to create a prioritized list"
      },
      "id": "604458bd64441f87e0378ebf"
    },
    {
      "sections": [
        "Optimize your cloud spend",
        "1. Deploy the New Relic Infrastructure agent",
        "2. Create dashboard charts for cloud performance",
        "Break out data by cloud performance and application metrics",
        "3. Configure the Amazon AWS integration",
        "4. Set up billing budgets in AWS",
        "5. Add cloud spend and budget widgets to Insights dashboard",
        "Break out data by application and by AWS budget",
        "6. Create dashboards for every level of your organization",
        "Dashboards for developers",
        "Dashboards for DevOps",
        "Dashboards for executives",
        "7. Set up alerts",
        "Configure a baseline query using the forecasted amount"
      ],
      "title": "Optimize your cloud spend",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "7a0ac1127aee1ef0668e8aad47af8813f0ed7259",
      "image": "https://docs.newrelic.com/static/2f167e48441b82a62aae1463592e0aed/8c557/CloudPerformanceForAppX.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/optimize-your-cloud-spend/",
      "published_at": "2021-05-05T18:44:57Z",
      "updated_at": "2021-03-13T07:30:46Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Now that you are using cloud-hosted infrastructure and services, it is important to start looking very early and very closely at your cloud spend: Make sure that your assumptions about your cloud spend are playing out as expected. Quickly catch and correct any unexpected spikes in spending. Start fine-tuning the usage of your cloud-based resources. For example, if you have a set of 20 instances all running at 10% CPU, you can think about using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud spend helps you optimize and save money quickly. New Relic can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your cloud spend data, just like you can with any data New Relic can help you collect. Using the New Relic applied intelligence platform is a great way to help you learn about your cloud spending or about any of your performance data. 1. Deploy the New Relic Infrastructure agent Review the requirements for the New Relic Infrastructure agent and follow the documentation for instructions on installing the agent. After you install the Infrastructure agent on your hosts, you immediately have access to the broad spectrum of metrics that the agent receives automatically. Then, you can set up the cloud integration to start collecting billing information. 2. Create dashboard charts for cloud performance New Relic Dashboards is the product that you use to write powerful custom queries about your data, and then visualize the results in charts that you collect on a dashboard. You can also feed the results of your dashboard queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Include charts for various Infrastructure metrics related to performance and usage; for example: CPU Memory Disk Database You may also want to include charts that represent the application using this cloud infrastructure. In this way you can correlate the cloud infrastructure performance with that of the application. As you right-size your cloud infrastructure, you will want to monitor application performance to make sure you are achieving any targets. Here is an example of an Insights dashboard for cloud performance. Break out data by cloud performance and application metrics The following dashboard shows several charts that present key cloud infrastructure metrics and an associated application metric. Every one of these charts represents the result of a query. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/rjq7tqrswxwtte9/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Create dashboards that include both cloud infrastructure and application metrics.] insights.newrelic.com: Create dashboards that include both cloud infrastructure and application metrics. 3. Configure the Amazon AWS integration New Relic Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. This tutorial focuses on the AWS Billing integration. First, configure the integration with your AWS account, and then you can set up the AWS Billing integration. 4. Set up billing budgets in AWS The Amazon AWS Billing integration requires some additional configuration on the AWS side. Specifically, you need to go into your AWS Billing dashboard and set up Budgets. Our documentation and the blog post Show Me (Where I’m Spending) the Money! AWS Billing Comes to New Relic Insights provide walk-throughs of this process. When creating Budgets, be sure to: Fill in an application name. Decide whether you are doing cost or service-based budgeting. Decide if your budget is open-ended or has a definite ending date. 5. Add cloud spend and budget widgets to Insights dashboard New Relic Insights is the product that you use to write powerful custom queries about your data, and then visualize the results in widgets that you collect on a dashboard. You can also feed the results of your Insights queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Here are some examples of ways to use Insights dashboards to visualize your AWS cloud spend data. Break out data by application and by AWS budget The following dashboard shows several widgets that present key information about an AWS budget vs. actual spending, with data broken out by an application AWS budget. Every one of these widgets represents the result of an Insights query, and the data in the supporting Insights tables is the data that our integration automatically receives from AWS. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/ecp5mrnkezh6hjh/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Add charts that include AWS cloud and budgets data.] [ Downs: put this 'code' section below the image please. Here is the query to create the Application X Cloud Cost budget chart in this dashboard example: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy ] insights.newrelic.com: Create dashboards that include AWS cloud and budgets. 6. Create dashboards for every level of your organization Whether you are a developer, in DevOps, or an executive, having information about your cloud spend can help you optimize your cloud environment. Here are a few ways dashboards can help at each level of your organization: Dashboards for developers Understanding how much applications cost to run helps developers properly configure applications to use more efficient services. For example, could developers save cloud costs using Amazon AWS Lambda or properly sized instances instead of randomly selecting an instance? Dashboards for DevOps Monitoring application costs allows operators to catch possible overruns due to misconfigured services. For example, is the DevOps team’s auto-scaling configuration not scaling down properly? Are they spending money on instances that are not being used? Dashboards for executives An overall view of both forecasted and actual cloud spends for individual applications on a per region basis, as well as total costs, helps executives make better business decisions. Use New Relic to keep control of your cloud spending costs, and get your teams alerted when you go over your budgets. 7. Set up alerts After you write queries on your data in Insights, you can easily use them to create alert conditions. New Relic gives you the ability to write baseline queries against your data. A baseline query is a query that you write without setting hard limits on the results and instead let New Relic Applied Intelligence “machine-learn” your performance data. New Relic alerts you when you go too far outside of your baseline numbers. Configure a baseline query using the forecasted amount Configuring a baseline query using a forecasted amount is a great starting point for monitoring any cloud budget, as you grow to understand what your cloud spend will be over time. New Relic notifies you if something spikes beyond your forecasted trend. That query looks like this: SELECT latest(`provider.forecastedAmount`) FROM FinanceSample WHERE provider = 'BillingBudget' and `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy When you create a baseline query and alert on it, you decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider either increases or decreases the gray band around your budget threshold (the blue line): alerts.newrelic.com > Alert policies > (select a policy) > Alert conditions: Create alert conditions based on your NRQL queries and Insights data. This example would have resulted in zero violations based on recent data, and that is exactly what you are looking for. However, if that blue line spikes up out of the gray band, New Relic notifies you. For more detailed information about creating, managing, and using alerts, view these New Relic University tutorials: Intro to alerting Alert policies Alerting incident lifecycle Notification channels",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.98694,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Optimize your <em>cloud</em> spend",
        "sections": "1. Deploy the <em>New</em> <em>Relic</em> Infrastructure agent",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " quickly. <em>New</em> <em>Relic</em> can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your <em>cloud</em> spend data, just like you can with any data <em>New</em> <em>Relic</em> can help you collect. Using"
      },
      "id": "60445c4928ccbcd0132c6094"
    },
    {
      "sections": [
        "Modern and cloud services",
        "1. Identify applications, cloud services, infrastructure, and technologies",
        "2. Deploy Infrastructure",
        "Tip",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD Pipeline integration"
      ],
      "title": "Modern and cloud services ",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "824d892c1faf24fb7eb5bf6e205571446261f699",
      "image": "https://docs.newrelic.com/static/425a652fcbd53bbbea3454793047bd01/8c557/ModernAndCloudServiceDashboardNew.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/cloud-adoption/modern-cloud-services/",
      "published_at": "2021-05-05T18:40:37Z",
      "updated_at": "2021-03-13T05:44:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've just completed your cloud migration, have been using cloud based services for awhile, or have always been in the cloud, you may find yourself deploying or running technologies and services that are new and modern. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions, cloud based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations you still want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services, allowing for faster deployments, the ability to adopt new services, better business decisions, and to expand horizons. This doc demonstrates how to use the New Relic Platform to monitor your modern technologies and cloud services. 1. Identify applications, cloud services, infrastructure, and technologies Determine the components you need to monitor by answering the following the questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies during your migration. 2. Deploy Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified so you can start to monitor your cloud services. Tip If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations Once your applications are migrated to the cloud and you start to integrate new cloud services, you can use New Relic to monitor and report data about your cloud services, offering you a comprehensive view of your entire architecture in one place. To get started configuring cloud service integrations, link your cloud service provider account with New Relic, depending on whether you use Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP). 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of a dashboard with data about vendors, technologies, services, instances, and other important details. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all the changes happening with the system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all ALB systems for the AWS Elastic Load Balancing (ALB) monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD Pipeline integration It's important to track deployments and how the impact of the code and infrastructure changes you make affect customer experience. New Relic APM's deployment markers feature allows you to record deployments for each application. A deployment marker is an event indicating that a deployment happened, and it's paired with metadata available from your SCM system (such metadata typically includes the user, revision, change log, etc.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root cause of immediate, long-term, or gradual degradations in your application. Tip Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.95273,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Modern and <em>cloud</em> services ",
        "sections": "Modern and <em>cloud</em> services",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": ", and GCP so you can track the data that is critical to your <em>cloud</em> <em>adoption</em> success. Tip If you <em>adopt</em> a hybrid <em>cloud</em> of multiple <em>cloud</em> providers, <em>New</em> <em>Relic</em> can provide a holistic perspective that is agnostic to <em>cloud</em> providers. AWS EC2 monitoring integration dashboard In this default dashboard"
      },
      "id": "60440f13e7b9d20f275799ca"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/optimize-customer-experience": [
    {
      "sections": [
        "Prioritize migration order",
        "1. Identify components",
        "2. Instrument applications",
        "3. Instrument hosts",
        "Tip",
        "4. Identify and track issues",
        "5. Create baselines",
        "6. Determine next steps",
        "Use service maps to find connections",
        "Use the New Relic Explorer to analyze health",
        "Use the Inventory page to identify components",
        "Expert tips for organizing your data"
      ],
      "title": "Prioritize migration order",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "f728804bace8dbe4a8176df74986fbf094e1ba62",
      "image": "https://docs.newrelic.com/static/9c3844bf72e803766bcb7b5146bf279b/c1b63/screen-service-maps_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/prioritize-migration-order/",
      "published_at": "2021-05-05T18:42:07Z",
      "updated_at": "2021-03-30T01:17:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Before you migrate any applications to the cloud, verify that the applications and their underlying server infrastructures are candidates for migration. When you instrument every layer of an application’s architecture, you get end-to-end visibility and are able to identify additional cloud migration risks or dependencies. Such analysis provides a more focused cloud migration priority list. 1. Identify components Create a list all of applications, services, and their underlying server infrastructures in your application portfolio that you want to migrate to the cloud. 2. Instrument applications Before you install any New Relic agents, review the compatibility and requirements for New Relic agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each tier of the application stack (database, application, web server, etc.), as you will install Infrastructure agents on each of those hosts in the next step. 3. Instrument hosts After reviewing the requirements for New Relic Infrastructure, follow the instructions for installing the Infrastructure agent on all hosts in your application stack: Install for Linux Install for Windows Server Install on AWS Elastic Beanstalk Install with a configuration management tool Also, in order to report data to New Relic, Infrastructure agents must have outbound access to certain domains and ports. If your system requires a proxy to connect to these domains, use the proxy setting. To gain extended visibility into applications that your code depends on, deploy on-host integrations. New Relic supports several commonly used application components, such as MySQL, Apache, and NGINX. Tip If you discover any applications, dependencies, or server infrastructure that you did not include in your list of components, instrument them with New Relic by installing the appropriate agents before moving forward. 4. Identify and track issues After installing, New Relic APM and Browser show you error events, error metrics, and detailed error traces for your applications. If an error or unhandled exception happens, the data appears on the Browser JavaScript errors page and the APM Error analytics page. From these pages, you can quickly troubleshoot runtime errors. Then, further analyze errors by grouping them according to attributes, by filtering them, or by searching for keywords in the event data. Each unhandled exception generates a transaction error event in Insights, and the dashboards are updated in real time. Event data is a record of a single event at a particular moment in time and consists of default attributes, like a timestamp, and an event type. You can also add custom attributes to provide more context. Tip Once you start capturing JavaScript errors as events in Insights, set up NRQL alerting so you can stay on top of your error data. 5. Create baselines One of the benefits of using APM while you are planning your cloud migration is that you get a deeper understanding of your application’s baseline. A baseline is a measurement of the current performance and availability of your application, which you then use as a comparison after your migration to validate your business case. 6. Determine next steps Use the following New Relic features to determine the next steps for your application: Use service maps to find connections After you install the APM agent, use service maps to get a full view into your application’s architecture. service maps allow you to identify any external services, web services, databases, or APIs that the application might be connecting to. Once you have an application node on the map, you can add its connections to the map, including New Relic Browser apps, databases, or external services (for example, third-party APIs). Every node you add is automatically connected to the map, so you see the shape of your application’s architecture emerge. one.newrelic.com > APM > (select an application) > Service map: Use service maps to understand the connections between different parts of your architecture. Use the New Relic Explorer to analyze health Use the explorer to see a high level overview of your services, which includes applications. Select the service to view a summary of your instrumented applications. You can then select dependencies to view the underlying infrastructure. To view this information at a glance, use the New Relic Explorer by going to one.newrelic.com > Explorer. From the explorer, you can: Sort applications by labels: Name Response Time Throughput Error Rate Identify owners Identify which users will be affected by a migration Discover application architecture details, such as the number of tiers and data sources Discover any dependencies Extract operational costs of each application or group one.newrelic.com > Explorer: The explorer allows you to see an overview of your services. Use the Inventory page to identify components Infrastructure's inventory page gives you visibility into the software packages installed on your servers. New Relic Infrastructure reports detailed information about a system’s per-host configuration, including system modules, configuration files, metadata, packages, services, user sessions, and more. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. Use this data to identify various components of the applications you want to migrate. one.newrelic.com > Infrastructure > Inventory: Use the filter and search functions to find information for specific items across all your hosts. Analyze these criteria for each of your apps to determine the next steps for your migration: Should you move your app to a new host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the cloud? By using the information that New Relic provides, you are better equipped to create a prioritized list of applications ready for cloud migration. Expert tips for organizing your data In APM, use labels to group the instrumented applications into meaningful categories like environments, functional areas, technologies, business units. Or, you can separate them for development or operational teams. In Infrastructure, use filter sets to organize hosts into cluster, environment, role, or any Infrastructure attribute based on criteria that you define.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 206.52821,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use the <em>New</em> <em>Relic</em> Explorer to analyze health",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " to determine the next steps for your migration: Should you move your app to a <em>new</em> host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the <em>cloud</em>? By using the information that <em>New</em> <em>Relic</em> provides, you are better equipped to create a prioritized list"
      },
      "id": "604458bd64441f87e0378ebf"
    },
    {
      "sections": [
        "Optimize your cloud spend",
        "1. Deploy the New Relic Infrastructure agent",
        "2. Create dashboard charts for cloud performance",
        "Break out data by cloud performance and application metrics",
        "3. Configure the Amazon AWS integration",
        "4. Set up billing budgets in AWS",
        "5. Add cloud spend and budget widgets to Insights dashboard",
        "Break out data by application and by AWS budget",
        "6. Create dashboards for every level of your organization",
        "Dashboards for developers",
        "Dashboards for DevOps",
        "Dashboards for executives",
        "7. Set up alerts",
        "Configure a baseline query using the forecasted amount"
      ],
      "title": "Optimize your cloud spend",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "7a0ac1127aee1ef0668e8aad47af8813f0ed7259",
      "image": "https://docs.newrelic.com/static/2f167e48441b82a62aae1463592e0aed/8c557/CloudPerformanceForAppX.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/optimize-your-cloud-spend/",
      "published_at": "2021-05-05T18:44:57Z",
      "updated_at": "2021-03-13T07:30:46Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Now that you are using cloud-hosted infrastructure and services, it is important to start looking very early and very closely at your cloud spend: Make sure that your assumptions about your cloud spend are playing out as expected. Quickly catch and correct any unexpected spikes in spending. Start fine-tuning the usage of your cloud-based resources. For example, if you have a set of 20 instances all running at 10% CPU, you can think about using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud spend helps you optimize and save money quickly. New Relic can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your cloud spend data, just like you can with any data New Relic can help you collect. Using the New Relic applied intelligence platform is a great way to help you learn about your cloud spending or about any of your performance data. 1. Deploy the New Relic Infrastructure agent Review the requirements for the New Relic Infrastructure agent and follow the documentation for instructions on installing the agent. After you install the Infrastructure agent on your hosts, you immediately have access to the broad spectrum of metrics that the agent receives automatically. Then, you can set up the cloud integration to start collecting billing information. 2. Create dashboard charts for cloud performance New Relic Dashboards is the product that you use to write powerful custom queries about your data, and then visualize the results in charts that you collect on a dashboard. You can also feed the results of your dashboard queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Include charts for various Infrastructure metrics related to performance and usage; for example: CPU Memory Disk Database You may also want to include charts that represent the application using this cloud infrastructure. In this way you can correlate the cloud infrastructure performance with that of the application. As you right-size your cloud infrastructure, you will want to monitor application performance to make sure you are achieving any targets. Here is an example of an Insights dashboard for cloud performance. Break out data by cloud performance and application metrics The following dashboard shows several charts that present key cloud infrastructure metrics and an associated application metric. Every one of these charts represents the result of a query. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/rjq7tqrswxwtte9/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Create dashboards that include both cloud infrastructure and application metrics.] insights.newrelic.com: Create dashboards that include both cloud infrastructure and application metrics. 3. Configure the Amazon AWS integration New Relic Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. This tutorial focuses on the AWS Billing integration. First, configure the integration with your AWS account, and then you can set up the AWS Billing integration. 4. Set up billing budgets in AWS The Amazon AWS Billing integration requires some additional configuration on the AWS side. Specifically, you need to go into your AWS Billing dashboard and set up Budgets. Our documentation and the blog post Show Me (Where I’m Spending) the Money! AWS Billing Comes to New Relic Insights provide walk-throughs of this process. When creating Budgets, be sure to: Fill in an application name. Decide whether you are doing cost or service-based budgeting. Decide if your budget is open-ended or has a definite ending date. 5. Add cloud spend and budget widgets to Insights dashboard New Relic Insights is the product that you use to write powerful custom queries about your data, and then visualize the results in widgets that you collect on a dashboard. You can also feed the results of your Insights queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Here are some examples of ways to use Insights dashboards to visualize your AWS cloud spend data. Break out data by application and by AWS budget The following dashboard shows several widgets that present key information about an AWS budget vs. actual spending, with data broken out by an application AWS budget. Every one of these widgets represents the result of an Insights query, and the data in the supporting Insights tables is the data that our integration automatically receives from AWS. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/ecp5mrnkezh6hjh/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Add charts that include AWS cloud and budgets data.] [ Downs: put this 'code' section below the image please. Here is the query to create the Application X Cloud Cost budget chart in this dashboard example: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy ] insights.newrelic.com: Create dashboards that include AWS cloud and budgets. 6. Create dashboards for every level of your organization Whether you are a developer, in DevOps, or an executive, having information about your cloud spend can help you optimize your cloud environment. Here are a few ways dashboards can help at each level of your organization: Dashboards for developers Understanding how much applications cost to run helps developers properly configure applications to use more efficient services. For example, could developers save cloud costs using Amazon AWS Lambda or properly sized instances instead of randomly selecting an instance? Dashboards for DevOps Monitoring application costs allows operators to catch possible overruns due to misconfigured services. For example, is the DevOps team’s auto-scaling configuration not scaling down properly? Are they spending money on instances that are not being used? Dashboards for executives An overall view of both forecasted and actual cloud spends for individual applications on a per region basis, as well as total costs, helps executives make better business decisions. Use New Relic to keep control of your cloud spending costs, and get your teams alerted when you go over your budgets. 7. Set up alerts After you write queries on your data in Insights, you can easily use them to create alert conditions. New Relic gives you the ability to write baseline queries against your data. A baseline query is a query that you write without setting hard limits on the results and instead let New Relic Applied Intelligence “machine-learn” your performance data. New Relic alerts you when you go too far outside of your baseline numbers. Configure a baseline query using the forecasted amount Configuring a baseline query using a forecasted amount is a great starting point for monitoring any cloud budget, as you grow to understand what your cloud spend will be over time. New Relic notifies you if something spikes beyond your forecasted trend. That query looks like this: SELECT latest(`provider.forecastedAmount`) FROM FinanceSample WHERE provider = 'BillingBudget' and `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy When you create a baseline query and alert on it, you decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider either increases or decreases the gray band around your budget threshold (the blue line): alerts.newrelic.com > Alert policies > (select a policy) > Alert conditions: Create alert conditions based on your NRQL queries and Insights data. This example would have resulted in zero violations based on recent data, and that is exactly what you are looking for. However, if that blue line spikes up out of the gray band, New Relic notifies you. For more detailed information about creating, managing, and using alerts, view these New Relic University tutorials: Intro to alerting Alert policies Alerting incident lifecycle Notification channels",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.98694,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Optimize your <em>cloud</em> spend",
        "sections": "1. Deploy the <em>New</em> <em>Relic</em> Infrastructure agent",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " quickly. <em>New</em> <em>Relic</em> can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your <em>cloud</em> spend data, just like you can with any data <em>New</em> <em>Relic</em> can help you collect. Using"
      },
      "id": "60445c4928ccbcd0132c6094"
    },
    {
      "sections": [
        "Modern and cloud services",
        "1. Identify applications, cloud services, infrastructure, and technologies",
        "2. Deploy Infrastructure",
        "Tip",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD Pipeline integration"
      ],
      "title": "Modern and cloud services ",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "824d892c1faf24fb7eb5bf6e205571446261f699",
      "image": "https://docs.newrelic.com/static/425a652fcbd53bbbea3454793047bd01/8c557/ModernAndCloudServiceDashboardNew.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/cloud-adoption/modern-cloud-services/",
      "published_at": "2021-05-05T18:40:37Z",
      "updated_at": "2021-03-13T05:44:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've just completed your cloud migration, have been using cloud based services for awhile, or have always been in the cloud, you may find yourself deploying or running technologies and services that are new and modern. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions, cloud based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations you still want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services, allowing for faster deployments, the ability to adopt new services, better business decisions, and to expand horizons. This doc demonstrates how to use the New Relic Platform to monitor your modern technologies and cloud services. 1. Identify applications, cloud services, infrastructure, and technologies Determine the components you need to monitor by answering the following the questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies during your migration. 2. Deploy Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified so you can start to monitor your cloud services. Tip If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations Once your applications are migrated to the cloud and you start to integrate new cloud services, you can use New Relic to monitor and report data about your cloud services, offering you a comprehensive view of your entire architecture in one place. To get started configuring cloud service integrations, link your cloud service provider account with New Relic, depending on whether you use Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP). 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of a dashboard with data about vendors, technologies, services, instances, and other important details. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all the changes happening with the system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all ALB systems for the AWS Elastic Load Balancing (ALB) monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD Pipeline integration It's important to track deployments and how the impact of the code and infrastructure changes you make affect customer experience. New Relic APM's deployment markers feature allows you to record deployments for each application. A deployment marker is an event indicating that a deployment happened, and it's paired with metadata available from your SCM system (such metadata typically includes the user, revision, change log, etc.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root cause of immediate, long-term, or gradual degradations in your application. Tip Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.95273,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Modern and <em>cloud</em> services ",
        "sections": "Modern and <em>cloud</em> services",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": ", and GCP so you can track the data that is critical to your <em>cloud</em> <em>adoption</em> success. Tip If you <em>adopt</em> a hybrid <em>cloud</em> of multiple <em>cloud</em> providers, <em>New</em> <em>Relic</em> can provide a holistic perspective that is agnostic to <em>cloud</em> providers. AWS EC2 monitoring integration dashboard In this default dashboard"
      },
      "id": "60440f13e7b9d20f275799ca"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/optimize-your-cloud-spend": [
    {
      "sections": [
        "Prioritize migration order",
        "1. Identify components",
        "2. Instrument applications",
        "3. Instrument hosts",
        "Tip",
        "4. Identify and track issues",
        "5. Create baselines",
        "6. Determine next steps",
        "Use service maps to find connections",
        "Use the New Relic Explorer to analyze health",
        "Use the Inventory page to identify components",
        "Expert tips for organizing your data"
      ],
      "title": "Prioritize migration order",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "f728804bace8dbe4a8176df74986fbf094e1ba62",
      "image": "https://docs.newrelic.com/static/9c3844bf72e803766bcb7b5146bf279b/c1b63/screen-service-maps_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/prioritize-migration-order/",
      "published_at": "2021-05-05T18:42:07Z",
      "updated_at": "2021-03-30T01:17:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Before you migrate any applications to the cloud, verify that the applications and their underlying server infrastructures are candidates for migration. When you instrument every layer of an application’s architecture, you get end-to-end visibility and are able to identify additional cloud migration risks or dependencies. Such analysis provides a more focused cloud migration priority list. 1. Identify components Create a list all of applications, services, and their underlying server infrastructures in your application portfolio that you want to migrate to the cloud. 2. Instrument applications Before you install any New Relic agents, review the compatibility and requirements for New Relic agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each tier of the application stack (database, application, web server, etc.), as you will install Infrastructure agents on each of those hosts in the next step. 3. Instrument hosts After reviewing the requirements for New Relic Infrastructure, follow the instructions for installing the Infrastructure agent on all hosts in your application stack: Install for Linux Install for Windows Server Install on AWS Elastic Beanstalk Install with a configuration management tool Also, in order to report data to New Relic, Infrastructure agents must have outbound access to certain domains and ports. If your system requires a proxy to connect to these domains, use the proxy setting. To gain extended visibility into applications that your code depends on, deploy on-host integrations. New Relic supports several commonly used application components, such as MySQL, Apache, and NGINX. Tip If you discover any applications, dependencies, or server infrastructure that you did not include in your list of components, instrument them with New Relic by installing the appropriate agents before moving forward. 4. Identify and track issues After installing, New Relic APM and Browser show you error events, error metrics, and detailed error traces for your applications. If an error or unhandled exception happens, the data appears on the Browser JavaScript errors page and the APM Error analytics page. From these pages, you can quickly troubleshoot runtime errors. Then, further analyze errors by grouping them according to attributes, by filtering them, or by searching for keywords in the event data. Each unhandled exception generates a transaction error event in Insights, and the dashboards are updated in real time. Event data is a record of a single event at a particular moment in time and consists of default attributes, like a timestamp, and an event type. You can also add custom attributes to provide more context. Tip Once you start capturing JavaScript errors as events in Insights, set up NRQL alerting so you can stay on top of your error data. 5. Create baselines One of the benefits of using APM while you are planning your cloud migration is that you get a deeper understanding of your application’s baseline. A baseline is a measurement of the current performance and availability of your application, which you then use as a comparison after your migration to validate your business case. 6. Determine next steps Use the following New Relic features to determine the next steps for your application: Use service maps to find connections After you install the APM agent, use service maps to get a full view into your application’s architecture. service maps allow you to identify any external services, web services, databases, or APIs that the application might be connecting to. Once you have an application node on the map, you can add its connections to the map, including New Relic Browser apps, databases, or external services (for example, third-party APIs). Every node you add is automatically connected to the map, so you see the shape of your application’s architecture emerge. one.newrelic.com > APM > (select an application) > Service map: Use service maps to understand the connections between different parts of your architecture. Use the New Relic Explorer to analyze health Use the explorer to see a high level overview of your services, which includes applications. Select the service to view a summary of your instrumented applications. You can then select dependencies to view the underlying infrastructure. To view this information at a glance, use the New Relic Explorer by going to one.newrelic.com > Explorer. From the explorer, you can: Sort applications by labels: Name Response Time Throughput Error Rate Identify owners Identify which users will be affected by a migration Discover application architecture details, such as the number of tiers and data sources Discover any dependencies Extract operational costs of each application or group one.newrelic.com > Explorer: The explorer allows you to see an overview of your services. Use the Inventory page to identify components Infrastructure's inventory page gives you visibility into the software packages installed on your servers. New Relic Infrastructure reports detailed information about a system’s per-host configuration, including system modules, configuration files, metadata, packages, services, user sessions, and more. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. Use this data to identify various components of the applications you want to migrate. one.newrelic.com > Infrastructure > Inventory: Use the filter and search functions to find information for specific items across all your hosts. Analyze these criteria for each of your apps to determine the next steps for your migration: Should you move your app to a new host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the cloud? By using the information that New Relic provides, you are better equipped to create a prioritized list of applications ready for cloud migration. Expert tips for organizing your data In APM, use labels to group the instrumented applications into meaningful categories like environments, functional areas, technologies, business units. Or, you can separate them for development or operational teams. In Infrastructure, use filter sets to organize hosts into cluster, environment, role, or any Infrastructure attribute based on criteria that you define.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 206.5282,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use the <em>New</em> <em>Relic</em> Explorer to analyze health",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " to determine the next steps for your migration: Should you move your app to a <em>new</em> host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the <em>cloud</em>? By using the information that <em>New</em> <em>Relic</em> provides, you are better equipped to create a prioritized list"
      },
      "id": "604458bd64441f87e0378ebf"
    },
    {
      "sections": [
        "Modern and cloud services",
        "1. Identify applications, cloud services, infrastructure, and technologies",
        "2. Deploy Infrastructure",
        "Tip",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD Pipeline integration"
      ],
      "title": "Modern and cloud services ",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "824d892c1faf24fb7eb5bf6e205571446261f699",
      "image": "https://docs.newrelic.com/static/425a652fcbd53bbbea3454793047bd01/8c557/ModernAndCloudServiceDashboardNew.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/cloud-adoption/modern-cloud-services/",
      "published_at": "2021-05-05T18:40:37Z",
      "updated_at": "2021-03-13T05:44:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've just completed your cloud migration, have been using cloud based services for awhile, or have always been in the cloud, you may find yourself deploying or running technologies and services that are new and modern. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions, cloud based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations you still want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services, allowing for faster deployments, the ability to adopt new services, better business decisions, and to expand horizons. This doc demonstrates how to use the New Relic Platform to monitor your modern technologies and cloud services. 1. Identify applications, cloud services, infrastructure, and technologies Determine the components you need to monitor by answering the following the questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies during your migration. 2. Deploy Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified so you can start to monitor your cloud services. Tip If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations Once your applications are migrated to the cloud and you start to integrate new cloud services, you can use New Relic to monitor and report data about your cloud services, offering you a comprehensive view of your entire architecture in one place. To get started configuring cloud service integrations, link your cloud service provider account with New Relic, depending on whether you use Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP). 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of a dashboard with data about vendors, technologies, services, instances, and other important details. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all the changes happening with the system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all ALB systems for the AWS Elastic Load Balancing (ALB) monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD Pipeline integration It's important to track deployments and how the impact of the code and infrastructure changes you make affect customer experience. New Relic APM's deployment markers feature allows you to record deployments for each application. A deployment marker is an event indicating that a deployment happened, and it's paired with metadata available from your SCM system (such metadata typically includes the user, revision, change log, etc.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root cause of immediate, long-term, or gradual degradations in your application. Tip Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.95271,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Modern and <em>cloud</em> services ",
        "sections": "Modern and <em>cloud</em> services",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": ", and GCP so you can track the data that is critical to your <em>cloud</em> <em>adoption</em> success. Tip If you <em>adopt</em> a hybrid <em>cloud</em> of multiple <em>cloud</em> providers, <em>New</em> <em>Relic</em> can provide a holistic perspective that is agnostic to <em>cloud</em> providers. AWS EC2 monitoring integration dashboard In this default dashboard"
      },
      "id": "60440f13e7b9d20f275799ca"
    },
    {
      "sections": [
        "Identify application dependencies and inventory",
        "1. Identify applications and components",
        "2. Install New Relic agents",
        "New Relic APM",
        "New Relic Infrastructure",
        "Infrastructure on-host integrations",
        "3. Visualize application dependencies with APM",
        "4. Inventory underlining instances with Infrastructure",
        "5. Uncover unknown applications and components",
        "6. Resolve errors or other issues",
        "7. Create Dashboards",
        "Expert tip for reporting custom data",
        "For more help"
      ],
      "title": "Identify application dependencies and inventory",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "b1159866272377cc25c356317d171a3325ebe9f3",
      "image": "https://docs.newrelic.com/static/4e6e64bb47951c91d6f027331b05fb5f/c1b63/new-relic-one-application-issues.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/identify-application-dependencies-inventory/",
      "published_at": "2021-05-05T18:41:17Z",
      "updated_at": "2021-03-13T04:22:57Z",
      "document_type": "page",
      "popularity": 1,
      "body": "When you are planning a migration to the cloud, it is important to analyze your current on-premise architecture and identify the scope of your migration. When you have a full understanding of your applications, your hosts, and their architecture, you reduce the possibility of missing dependencies during your migration. 1. Identify applications and components First, you need to determine the level of instrumentation that is possible or allowed within your organization. The deeper you instrument, the more visibility you gain into your applications. Then, address the scope of your cloud migration by answering the following questions and keeping track of your answers: What applications do I need to include in the migration? What are the dependencies of each application? What are the underlying services/inventory supporting these applications? 2. Install New Relic agents Based on your answers when you determined the scope of your cloud migration, verify that the applications that you want to migrate are compatible with New Relic products and install the agents: New Relic APM New Relic APM delivers data about your application's performance, providing information about app availability and external services so you can visualize your application dependencies. Confirm that your system meets the requirements for the APM agents that you want to install, and then install the APM agent on your application stack. Steps for installing APM agents vary based on language. New Relic Infrastructure New Relic Infrastructure provides flexible, dynamic server monitoring so you can inventory your hosts and their configuration settings. Confirm that your underlying infrastructure meets the requirements for New Relic Infrastructure. Install the Infrastructure agent on instances that host your applications. Infrastructure on-host integrations Infrastructure on-host integrations monitor the services that your code depends on. Install the on-host integrations for the services that you are using. 3. Visualize application dependencies with APM After you install the APM agent, use service maps to get a full view of your application’s architecture. Service maps allow you to identify any connections from applications to external services, web services, databases, or APIs. After creating a service map for the application that has dependencies that you want to explore, add an application node on the map. Then, begin to add connections to the map including databases, external services, third-party APIs, and even New Relic Browser-monitored applications. New Relic pulls every node you add into the map, and you can watch the shape of your architecture emerge. one.newrelic.com > APM > (select an application) > Service map: View a service map to see a visual overview of your system architecture and the health of entities. Based on the visibility into internal and external dependencies that the service map provides, you can create a migration plan that includes all aspects of an application’s ecosystem. 4. Inventory underlining instances with Infrastructure New Relic Infrastructure's inventory page gives you visibility into the software packages installed on your servers. Essentially, the inventory page displays detailed information about a system’s per-host configuration, including details about system modules, configuration files, metadata, packages, services, and user sessions. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. The inventory page not only provides you with the list of packages installed but also provides version information as well. Use this version information to know which packages to upgrade and which packages to replicate for your cloud migration. It also helps you track the dependencies between the software packages and configuration files. one.newrelic.com > Infrastructure > Inventory: View the inventory page for details about your hosts and their configurations. You can also use the Inventory page to get a sense of what software or packages you no longer need, which is a great way to “clean up” your servers before you migrate to the cloud. 5. Uncover unknown applications and components Since anything can happen during an application’s lifecycle, like an application changing ownership, you may come across applications or component dependencies that you did not know about. If you discover any unknown dependencies, assess their relationship to other applications and components in your infrastructure to determine if they should be pulled into your migration plan. If you discover any applications or components while viewing service maps or while reviewing the inventory page, remember to instrument them before you migrate them. 6. Resolve errors or other issues After you instrument your applications, APM may uncover errors or issues with your current on-prem applications. Use APM error analytics to determine the root cause of any errors or issues in your applications. one.newrelic.com > APM > (select an app) > Events > Errors: Use error analytics to determine the root cause of errors in your applications. Start with the Error rate chart to see if there are any unexpected spikes, dips, or error patterns. Correlate any patterns on the Top 5 errors chart to alerts occurring during the same time period. The Error traces table includes specific stack trace details, such as associated host, user, framework code, and custom attributes to help you identify the root cause of an error. 7. Create Dashboards In addition to the application baselines you built, create dashboards to assess your on-premises applications in preparation for migrating them to the cloud. Use Dashboards to gain visibility into the average response times, the top transactions, the associated average duration, and the overall CPU usage for your instrumented application. Drill down into individual applications to see your top processes and the CPU percent for each process. You can also view an error analysis for a set of instrumented applications: one.newrelic.com > Dashboards > (select a dashboard): View errors visualize issues with your applications. Check out the best practices guide for tips on creating and utilizing dashboards. Sharing New Relic Dashboards with your teams and stakeholders is a powerful way to communicate the impact of your migration during your cloud adoption process. Expert tip for reporting custom data Utilizing service maps, errors, and inventory management gives you a critical look at the architecture of your applications and their dependencies. If you find that you need data that is not available by default, New Relic products allow you to capture custom data: APM Browser Infrastructure Dashboards Mobile Synthetics For more help Explore the New Relic Platform.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.92676,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "2. Install <em>New</em> <em>Relic</em> agents",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " answers when you determined the scope of your <em>cloud</em> migration, verify that the applications that you want to migrate are compatible with <em>New</em> <em>Relic</em> products and install the agents: <em>New</em> <em>Relic</em> APM <em>New</em> <em>Relic</em> APM delivers data about your application&#x27;s performance, providing information about app availability"
      },
      "id": "60445fcc64441f498e378efb"
    }
  ],
  "/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/perform-migration-acceptance-testing": [
    {
      "sections": [
        "Prioritize migration order",
        "1. Identify components",
        "2. Instrument applications",
        "3. Instrument hosts",
        "Tip",
        "4. Identify and track issues",
        "5. Create baselines",
        "6. Determine next steps",
        "Use service maps to find connections",
        "Use the New Relic Explorer to analyze health",
        "Use the Inventory page to identify components",
        "Expert tips for organizing your data"
      ],
      "title": "Prioritize migration order",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "f728804bace8dbe4a8176df74986fbf094e1ba62",
      "image": "https://docs.newrelic.com/static/9c3844bf72e803766bcb7b5146bf279b/c1b63/screen-service-maps_0.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/prioritize-migration-order/",
      "published_at": "2021-05-05T18:42:07Z",
      "updated_at": "2021-03-30T01:17:25Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Before you migrate any applications to the cloud, verify that the applications and their underlying server infrastructures are candidates for migration. When you instrument every layer of an application’s architecture, you get end-to-end visibility and are able to identify additional cloud migration risks or dependencies. Such analysis provides a more focused cloud migration priority list. 1. Identify components Create a list all of applications, services, and their underlying server infrastructures in your application portfolio that you want to migrate to the cloud. 2. Instrument applications Before you install any New Relic agents, review the compatibility and requirements for New Relic agents. Then, install the agents in your environment. After installing the agents, review the architecture of all the applications that you instrumented with an agent. Take note of the host for each tier of the application stack (database, application, web server, etc.), as you will install Infrastructure agents on each of those hosts in the next step. 3. Instrument hosts After reviewing the requirements for New Relic Infrastructure, follow the instructions for installing the Infrastructure agent on all hosts in your application stack: Install for Linux Install for Windows Server Install on AWS Elastic Beanstalk Install with a configuration management tool Also, in order to report data to New Relic, Infrastructure agents must have outbound access to certain domains and ports. If your system requires a proxy to connect to these domains, use the proxy setting. To gain extended visibility into applications that your code depends on, deploy on-host integrations. New Relic supports several commonly used application components, such as MySQL, Apache, and NGINX. Tip If you discover any applications, dependencies, or server infrastructure that you did not include in your list of components, instrument them with New Relic by installing the appropriate agents before moving forward. 4. Identify and track issues After installing, New Relic APM and Browser show you error events, error metrics, and detailed error traces for your applications. If an error or unhandled exception happens, the data appears on the Browser JavaScript errors page and the APM Error analytics page. From these pages, you can quickly troubleshoot runtime errors. Then, further analyze errors by grouping them according to attributes, by filtering them, or by searching for keywords in the event data. Each unhandled exception generates a transaction error event in Insights, and the dashboards are updated in real time. Event data is a record of a single event at a particular moment in time and consists of default attributes, like a timestamp, and an event type. You can also add custom attributes to provide more context. Tip Once you start capturing JavaScript errors as events in Insights, set up NRQL alerting so you can stay on top of your error data. 5. Create baselines One of the benefits of using APM while you are planning your cloud migration is that you get a deeper understanding of your application’s baseline. A baseline is a measurement of the current performance and availability of your application, which you then use as a comparison after your migration to validate your business case. 6. Determine next steps Use the following New Relic features to determine the next steps for your application: Use service maps to find connections After you install the APM agent, use service maps to get a full view into your application’s architecture. service maps allow you to identify any external services, web services, databases, or APIs that the application might be connecting to. Once you have an application node on the map, you can add its connections to the map, including New Relic Browser apps, databases, or external services (for example, third-party APIs). Every node you add is automatically connected to the map, so you see the shape of your application’s architecture emerge. one.newrelic.com > APM > (select an application) > Service map: Use service maps to understand the connections between different parts of your architecture. Use the New Relic Explorer to analyze health Use the explorer to see a high level overview of your services, which includes applications. Select the service to view a summary of your instrumented applications. You can then select dependencies to view the underlying infrastructure. To view this information at a glance, use the New Relic Explorer by going to one.newrelic.com > Explorer. From the explorer, you can: Sort applications by labels: Name Response Time Throughput Error Rate Identify owners Identify which users will be affected by a migration Discover application architecture details, such as the number of tiers and data sources Discover any dependencies Extract operational costs of each application or group one.newrelic.com > Explorer: The explorer allows you to see an overview of your services. Use the Inventory page to identify components Infrastructure's inventory page gives you visibility into the software packages installed on your servers. New Relic Infrastructure reports detailed information about a system’s per-host configuration, including system modules, configuration files, metadata, packages, services, user sessions, and more. The inventory page provides a real-time, filterable, searchable view into each host’s configuration. Use this data to identify various components of the applications you want to migrate. one.newrelic.com > Infrastructure > Inventory: Use the filter and search functions to find information for specific items across all your hosts. Analyze these criteria for each of your apps to determine the next steps for your migration: Should you move your app to a new host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the cloud? By using the information that New Relic provides, you are better equipped to create a prioritized list of applications ready for cloud migration. Expert tips for organizing your data In APM, use labels to group the instrumented applications into meaningful categories like environments, functional areas, technologies, business units. Or, you can separate them for development or operational teams. In Infrastructure, use filter sets to organize hosts into cluster, environment, role, or any Infrastructure attribute based on criteria that you define.",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 206.5282,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "sections": "Use the <em>New</em> <em>Relic</em> Explorer to analyze health",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " to determine the next steps for your migration: Should you move your app to a <em>new</em> host or platform, or re-factor its code before migrating it? Should you retire the application without moving it to the <em>cloud</em>? By using the information that <em>New</em> <em>Relic</em> provides, you are better equipped to create a prioritized list"
      },
      "id": "604458bd64441f87e0378ebf"
    },
    {
      "sections": [
        "Optimize your cloud spend",
        "1. Deploy the New Relic Infrastructure agent",
        "2. Create dashboard charts for cloud performance",
        "Break out data by cloud performance and application metrics",
        "3. Configure the Amazon AWS integration",
        "4. Set up billing budgets in AWS",
        "5. Add cloud spend and budget widgets to Insights dashboard",
        "Break out data by application and by AWS budget",
        "6. Create dashboards for every level of your organization",
        "Dashboards for developers",
        "Dashboards for DevOps",
        "Dashboards for executives",
        "7. Set up alerts",
        "Configure a baseline query using the forecasted amount"
      ],
      "title": "Optimize your cloud spend",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "7a0ac1127aee1ef0668e8aad47af8813f0ed7259",
      "image": "https://docs.newrelic.com/static/2f167e48441b82a62aae1463592e0aed/8c557/CloudPerformanceForAppX.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/plan-your-cloud-adoption/optimize-your-cloud-spend/",
      "published_at": "2021-05-05T18:44:57Z",
      "updated_at": "2021-03-13T07:30:46Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Now that you are using cloud-hosted infrastructure and services, it is important to start looking very early and very closely at your cloud spend: Make sure that your assumptions about your cloud spend are playing out as expected. Quickly catch and correct any unexpected spikes in spending. Start fine-tuning the usage of your cloud-based resources. For example, if you have a set of 20 instances all running at 10% CPU, you can think about using smaller instances or consolidating more work onto those instances. This kind of thinking about your cloud spend helps you optimize and save money quickly. New Relic can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your cloud spend data, just like you can with any data New Relic can help you collect. Using the New Relic applied intelligence platform is a great way to help you learn about your cloud spending or about any of your performance data. 1. Deploy the New Relic Infrastructure agent Review the requirements for the New Relic Infrastructure agent and follow the documentation for instructions on installing the agent. After you install the Infrastructure agent on your hosts, you immediately have access to the broad spectrum of metrics that the agent receives automatically. Then, you can set up the cloud integration to start collecting billing information. 2. Create dashboard charts for cloud performance New Relic Dashboards is the product that you use to write powerful custom queries about your data, and then visualize the results in charts that you collect on a dashboard. You can also feed the results of your dashboard queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Include charts for various Infrastructure metrics related to performance and usage; for example: CPU Memory Disk Database You may also want to include charts that represent the application using this cloud infrastructure. In this way you can correlate the cloud infrastructure performance with that of the application. As you right-size your cloud infrastructure, you will want to monitor application performance to make sure you are achieving any targets. Here is an example of an Insights dashboard for cloud performance. Break out data by cloud performance and application metrics The following dashboard shows several charts that present key cloud infrastructure metrics and an associated application metric. Every one of these charts represents the result of a query. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/rjq7tqrswxwtte9/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Create dashboards that include both cloud infrastructure and application metrics.] insights.newrelic.com: Create dashboards that include both cloud infrastructure and application metrics. 3. Configure the Amazon AWS integration New Relic Infrastructure comes with several types of integrations, including Amazon Web Services (AWS), Microsoft Azure, and on-host integrations. This tutorial focuses on the AWS Billing integration. First, configure the integration with your AWS account, and then you can set up the AWS Billing integration. 4. Set up billing budgets in AWS The Amazon AWS Billing integration requires some additional configuration on the AWS side. Specifically, you need to go into your AWS Billing dashboard and set up Budgets. Our documentation and the blog post Show Me (Where I’m Spending) the Money! AWS Billing Comes to New Relic Insights provide walk-throughs of this process. When creating Budgets, be sure to: Fill in an application name. Decide whether you are doing cost or service-based budgeting. Decide if your budget is open-ended or has a definite ending date. 5. Add cloud spend and budget widgets to Insights dashboard New Relic Insights is the product that you use to write powerful custom queries about your data, and then visualize the results in widgets that you collect on a dashboard. You can also feed the results of your Insights queries directly into New Relic Alerts, where you can get notifications on any deviations that you specify. Here are some examples of ways to use Insights dashboards to visualize your AWS cloud spend data. Break out data by application and by AWS budget The following dashboard shows several widgets that present key information about an AWS budget vs. actual spending, with data broken out by an application AWS budget. Every one of these widgets represents the result of an Insights query, and the data in the supporting Insights tables is the data that our integration automatically receives from AWS. [ Downs: Updated image based on New Relic One can be found at: https://www.dropbox.com/s/ecp5mrnkezh6hjh/Tutorial-Run-OptimizeCloudSpen... Image caption: one.newrelic.com > Dashboards: Add charts that include AWS cloud and budgets data.] [ Downs: put this 'code' section below the image please. Here is the query to create the Application X Cloud Cost budget chart in this dashboard example: SELECT latest(`provider.actualAmount`) as '$ Actual', latest(`provider.forecastedAmount`) as '$ Forecast', max(`provider.limitAmount`) as '$ Limit' FROM FinanceSample WHERE provider = 'BillingBudget' AND `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy ] insights.newrelic.com: Create dashboards that include AWS cloud and budgets. 6. Create dashboards for every level of your organization Whether you are a developer, in DevOps, or an executive, having information about your cloud spend can help you optimize your cloud environment. Here are a few ways dashboards can help at each level of your organization: Dashboards for developers Understanding how much applications cost to run helps developers properly configure applications to use more efficient services. For example, could developers save cloud costs using Amazon AWS Lambda or properly sized instances instead of randomly selecting an instance? Dashboards for DevOps Monitoring application costs allows operators to catch possible overruns due to misconfigured services. For example, is the DevOps team’s auto-scaling configuration not scaling down properly? Are they spending money on instances that are not being used? Dashboards for executives An overall view of both forecasted and actual cloud spends for individual applications on a per region basis, as well as total costs, helps executives make better business decisions. Use New Relic to keep control of your cloud spending costs, and get your teams alerted when you go over your budgets. 7. Set up alerts After you write queries on your data in Insights, you can easily use them to create alert conditions. New Relic gives you the ability to write baseline queries against your data. A baseline query is a query that you write without setting hard limits on the results and instead let New Relic Applied Intelligence “machine-learn” your performance data. New Relic alerts you when you go too far outside of your baseline numbers. Configure a baseline query using the forecasted amount Configuring a baseline query using a forecasted amount is a great starting point for monitoring any cloud budget, as you grow to understand what your cloud spend will be over time. New Relic notifies you if something spikes beyond your forecasted trend. That query looks like this: SELECT latest(`provider.forecastedAmount`) FROM FinanceSample WHERE provider = 'BillingBudget' and `provider.budgetName` = 'NAME_OF_YOUR_CLOUD_BUDGET' Copy When you create a baseline query and alert on it, you decide how restrictively Applied Intelligence should analyze your data using a simple slider and visualization based on your recent performance. The slider either increases or decreases the gray band around your budget threshold (the blue line): alerts.newrelic.com > Alert policies > (select a policy) > Alert conditions: Create alert conditions based on your NRQL queries and Insights data. This example would have resulted in zero violations based on recent data, and that is exactly what you are looking for. However, if that blue line spikes up out of the gray band, New Relic notifies you. For more detailed information about creating, managing, and using alerts, view these New Relic University tutorials: Intro to alerting Alert policies Alerting incident lifecycle Notification channels",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.98694,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Optimize your <em>cloud</em> spend",
        "sections": "1. Deploy the <em>New</em> <em>Relic</em> Infrastructure agent",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": " quickly. <em>New</em> <em>Relic</em> can help you monitor all this. From a data perspective, it is really just another metric that our platform can collect for you. As with any other metric, you can visualize, report, and alert on your <em>cloud</em> spend data, just like you can with any data <em>New</em> <em>Relic</em> can help you collect. Using"
      },
      "id": "60445c4928ccbcd0132c6094"
    },
    {
      "sections": [
        "Modern and cloud services",
        "1. Identify applications, cloud services, infrastructure, and technologies",
        "2. Deploy Infrastructure",
        "Tip",
        "3. Configure cloud integrations",
        "4. Track data on your dashboards",
        "AWS EC2 monitoring integration dashboard",
        "Azure VMs monitoring integration dashboard",
        "GCP Compute Engine monitoring integration dashboard",
        "Example modern and cloud services dashboard",
        "5. Add alerts for cloud-based metrics",
        "6. Set up additional monitoring",
        "7. CI/CD Pipeline integration"
      ],
      "title": "Modern and cloud services ",
      "type": "docs",
      "tags": [
        "New Relic solutions",
        "New Relic solutions",
        "Cloud adoption"
      ],
      "external_id": "824d892c1faf24fb7eb5bf6e205571446261f699",
      "image": "https://docs.newrelic.com/static/425a652fcbd53bbbea3454793047bd01/8c557/ModernAndCloudServiceDashboardNew.png",
      "url": "https://docs.newrelic.com/docs/new-relic-solutions/new-relic-solutions/cloud-adoption/modern-cloud-services/",
      "published_at": "2021-05-05T18:40:37Z",
      "updated_at": "2021-03-13T05:44:04Z",
      "document_type": "page",
      "popularity": 1,
      "body": "Whether you've just completed your cloud migration, have been using cloud based services for awhile, or have always been in the cloud, you may find yourself deploying or running technologies and services that are new and modern. These modern technologies could be container solutions such as Docker, Kubernetes, and Amazon AWS ECS or Fargate for example. Or they could be serverless services such as AWS Lambda, Microsoft Azure, or Google Cloud Platform Functions, cloud based databases, or any number of cloud services that abstract the service away from an operations-maintained infrastructure. In these situations you still want to monitor, query, and alert on the performance and usage metrics for both modern technologies and cloud-based services, allowing for faster deployments, the ability to adopt new services, better business decisions, and to expand horizons. This doc demonstrates how to use the New Relic Platform to monitor your modern technologies and cloud services. 1. Identify applications, cloud services, infrastructure, and technologies Determine the components you need to monitor by answering the following the questions: What cloud-based applications do I have? What are the underlying cloud-based services, technologies, and infrastructure supporting those applications? When you have a full understanding of your architecture, you reduce the possibility of missing dependencies during your migration. 2. Deploy Infrastructure After reviewing the requirements for New Relic Infrastructure, install the Infrastructure agent on the hosts you identified so you can start to monitor your cloud services. Tip If you use Ansible, Chef, or Puppet for automation, you can use those tools to deploy Infrastructure agents to your hosts. 3. Configure cloud integrations Once your applications are migrated to the cloud and you start to integrate new cloud services, you can use New Relic to monitor and report data about your cloud services, offering you a comprehensive view of your entire architecture in one place. To get started configuring cloud service integrations, link your cloud service provider account with New Relic, depending on whether you use Amazon Web Services (AWS), Microsoft Azure, or Google Cloud Platform (GCP). 4. Track data on your dashboards New Relic Infrastructure integrations auto-populate dashboards with metrics from cloud providers like AWS, Azure, and GCP so you can track the data that is critical to your cloud adoption success. Tip If you adopt a hybrid cloud of multiple cloud providers, New Relic can provide a holistic perspective that is agnostic to cloud providers. AWS EC2 monitoring integration dashboard In this default dashboard for the AWS EC2 monitoring integration, New Relic captures metrics for EC2 instances per region, instance state, and instance type. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Amazon Web Services: View AWS EC2 data on the default dashboard for the AWS EC2 monitoring integration. Azure VMs monitoring integration dashboard The default Azure virtual machine integration dashboard shows data for VM sizes, VMs per region, and VMs per resource group. infrastructure.newrelic.com > Integrations > Microsoft Azure: View Azure virtual machine data on the default dashboard for the Azure VMs monitoring integration. GCP Compute Engine monitoring integration dashboard In this default dashboard for the Google Cloud Platform, New Relic captures metrics for instances per zone, instance status, firewall dropped packets, reserved cores, and disk throttled operations. The dashboard also shows inventory for different software packages and configurations that are installed on those instances. infrastructure.newrelic.com > Integrations > Google Cloud Platform: View GCP Compute Engine data on the default dashboard for the GCP Compute Engine monitoring integration. Example modern and cloud services dashboard In this example dashboard, three different cloud vendors, modern technologies, cloud services, infrastructure instance locations, and DevOps widgets are combined for an overall view. one.newrelic.com > Dashboards: Here is an example of a dashboard with data about vendors, technologies, services, instances, and other important details. 5. Add alerts for cloud-based metrics When monitoring cloud-based services, it is essential to keep track of all the changes happening with the system by alerting on them. Integrations with New Relic Infrastructure allow you to create alerts on the metrics that are the most important to you. Here is an example of a baseline alert that will notify you based on the number of requests received on all ALB systems for the AWS Elastic Load Balancing (ALB) monitoring integration: alerts.newrelic.com > Alert policies > (selected policy) > Alert conditions: Create a NRQL baseline alert to monitor the number of requests received your ALB systems. 6. Set up additional monitoring In addition to monitoring cloud services, you can deploy New Relic APM, Browser, Mobile, and Synthetics to gain full-stack visibility into all of the components of your applications: Use New Relic APM to report application-tier performance metrics. Use New Relic Browser to report front-end web metrics. Use New Relic Mobile to report front-end mobile app metrics. Use New Relic Synthetics to monitor websites, critical business transactions, and API endpoints. 7. CI/CD Pipeline integration It's important to track deployments and how the impact of the code and infrastructure changes you make affect customer experience. New Relic APM's deployment markers feature allows you to record deployments for each application. A deployment marker is an event indicating that a deployment happened, and it's paired with metadata available from your SCM system (such metadata typically includes the user, revision, change log, etc.). APM displays a vertical line, or marker, on charts and graphs at the deployment event's timestamp. When you hover over the line, APM displays the associated metadata for that deployment. Tracking deployments is an invaluable way to determine the root cause of immediate, long-term, or gradual degradations in your application. Tip Recommendation: Make POST requests to the New Relic REST API as the final step of a successful CI/CD deployment as described in the API documentation. The following tools have integrations or plugins available to help automate CI/CD deployments: Chef (see newrelic_deployment) Jenkins Ansible",
      "info": "",
      "_index": "520d1d5d14cc8a32e600034b",
      "_type": "520d1d5d14cc8a32e600034c",
      "_score": 195.95271,
      "_version": null,
      "_explanation": null,
      "sort": null,
      "highlight": {
        "title": "Modern and <em>cloud</em> services ",
        "sections": "Modern and <em>cloud</em> services",
        "tags": "<em>New</em> <em>Relic</em> <em>solutions</em>",
        "body": ", and GCP so you can track the data that is critical to your <em>cloud</em> <em>adoption</em> success. Tip If you <em>adopt</em> a hybrid <em>cloud</em> of multiple <em>cloud</em> providers, <em>New</em> <em>Relic</em> can provide a holistic perspective that is agnostic to <em>cloud</em> providers. AWS EC2 monitoring integration dashboard In this default dashboard"
      },
      "id": "60440f13e7b9d20f275799ca"
    }
  ]
}